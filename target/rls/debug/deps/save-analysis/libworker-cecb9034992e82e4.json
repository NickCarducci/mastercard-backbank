{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10","program":"/Users/nicholascarducci/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","worker","--edition=2018","/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=cecb9034992e82e4","-C","extra-filename=-cecb9034992e82e4","--out-dir","/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps","-L","dependency=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps","--extern","async_trait=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libasync_trait-9706775c050de249.dylib","--extern","chrono=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libchrono-cc5e458778a933b0.rmeta","--extern","chrono_tz=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libchrono_tz-f9fce2c5b9124878.rmeta","--extern","futures_channel=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libfutures_channel-ce2a23f0325a2e89.rmeta","--extern","futures_util=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libfutures_util-5fff2553592ea319.rmeta","--extern","http=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libhttp-1b65702111324c91.rmeta","--extern","js_sys=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libjs_sys-aa56e6997e410496.rmeta","--extern","matchit=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libmatchit-0f625bff57df8694.rmeta","--extern","pin_project=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libpin_project-a1da4ab73b21b62c.rmeta","--extern","serde=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libserde-c952fb04afe16004.rmeta","--extern","serde_json=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libserde_json-62744717746d7807.rmeta","--extern","url=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/liburl-44dae5dffc9af4d5.rmeta","--extern","wasm_bindgen=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libwasm_bindgen-b62ad3bb6f597fb6.rmeta","--extern","wasm_bindgen_futures=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libwasm_bindgen_futures-c3c856b2ba9ac478.rmeta","--extern","wasm_streams=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libwasm_streams-f0b23b90a0f147b1.rmeta","--extern","web_sys=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libweb_sys-aa286a7ce62d5256.rmeta","--extern","worker_kv=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libworker_kv-6c6d6b78485325b9.rmeta","--extern","worker_macros=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libworker_macros-d04d3692ae4e8aa5.dylib","--extern","worker_sys=/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libworker_sys-0bb961d996313de9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/nicholascarducci/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/nicholascarducci/Desktop/mastercard-backbank/target/rls/debug/deps/libworker-cecb9034992e82e4.rmeta"},"prelude":{"crate_id":{"name":"worker","disambiguator":[13641657551073955008,0]},"crate_root":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src","external_crates":[{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10021291131669744914,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","num":2,"id":{"name":"core","disambiguator":[10014640881818692046,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15800718316297612287,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6961639640463363723,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15443605689848621,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[16699447446517724675,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7072391781806093942,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4396878825326251599,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[8751207805142453879,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1923978614408483767,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14411112285710781992,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[2356975140922920692,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[17423446140748502282,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[9260941638389817344,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7858856860374224051,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[4855109919914642709,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[15652019722635755907,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[5018606611167862631,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[532173890138877460,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","num":20,"id":{"name":"async_trait","disambiguator":[10902301106404962447,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","num":21,"id":{"name":"js_sys","disambiguator":[3640076422797129033,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","num":22,"id":{"name":"wasm_bindgen","disambiguator":[2259772497969757479,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":23,"id":{"name":"wasm_bindgen_macro","disambiguator":[4179041270943127125,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":24,"id":{"name":"cfg_if","disambiguator":[12876857907742392029,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","num":25,"id":{"name":"serde","disambiguator":[337014760933260161,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","num":26,"id":{"name":"serde_derive","disambiguator":[10539423507408514716,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","num":27,"id":{"name":"serde_json","disambiguator":[2079480083016443813,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":28,"id":{"name":"itoa","disambiguator":[3057377181314501276,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":29,"id":{"name":"ryu","disambiguator":[11867142922516379629,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":30,"id":{"name":"url","disambiguator":[1756159067597461350,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":31,"id":{"name":"matches","disambiguator":[1027118603967039971,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":32,"id":{"name":"form_urlencoded","disambiguator":[5323438023956970342,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":33,"id":{"name":"percent_encoding","disambiguator":[5119965790460293604,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":34,"id":{"name":"idna","disambiguator":[6162940873919043059,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":35,"id":{"name":"unicode_bidi","disambiguator":[4366707056766840931,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":36,"id":{"name":"unicode_normalization","disambiguator":[1937992890675454130,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":37,"id":{"name":"tinyvec","disambiguator":[7797948026188599630,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":38,"id":{"name":"tinyvec_macros","disambiguator":[351614830700762402,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","num":39,"id":{"name":"wasm_bindgen_futures","disambiguator":[4831588800853850589,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","num":40,"id":{"name":"worker_kv","disambiguator":[5888022659073140765,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","num":41,"id":{"name":"thiserror","disambiguator":[15678139934778350598,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","num":42,"id":{"name":"thiserror_impl","disambiguator":[6753680669291496922,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":43,"id":{"name":"worker_macros","disambiguator":[17919947375566709290,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","num":44,"id":{"name":"worker_sys","disambiguator":[10888341887595265323,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","num":45,"id":{"name":"web_sys","disambiguator":[425342923611047855,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","num":46,"id":{"name":"chrono","disambiguator":[4314483468717836272,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","num":47,"id":{"name":"time","disambiguator":[9102064708429338599,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","num":48,"id":{"name":"libc","disambiguator":[7531016017376053903,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","num":49,"id":{"name":"num_integer","disambiguator":[677475703743039762,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","num":50,"id":{"name":"num_traits","disambiguator":[694674802824938522,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","num":51,"id":{"name":"iana_time_zone","disambiguator":[17256194436759717386,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","num":52,"id":{"name":"core_foundation","disambiguator":[3378820814507447402,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","num":53,"id":{"name":"core_foundation_sys","disambiguator":[11998478387860026955,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","num":54,"id":{"name":"http","disambiguator":[15626171662562346943,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","num":55,"id":{"name":"fnv","disambiguator":[6453642814982683344,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","num":56,"id":{"name":"bytes","disambiguator":[5981578359786186335,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","num":57,"id":{"name":"futures_util","disambiguator":[7875298261911673931,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","num":58,"id":{"name":"futures_core","disambiguator":[6257181743990401412,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","num":59,"id":{"name":"pin_utils","disambiguator":[5461708765941530531,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","num":60,"id":{"name":"futures_macro","disambiguator":[8368691451980135882,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","num":61,"id":{"name":"futures_task","disambiguator":[11722608088784005171,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","num":62,"id":{"name":"futures_sink","disambiguator":[4413753567771070779,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","num":63,"id":{"name":"pin_project_lite","disambiguator":[8925760499851170215,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","num":64,"id":{"name":"futures_channel","disambiguator":[2792198606020329305,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","num":65,"id":{"name":"slab","disambiguator":[14287171814691735568,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","num":66,"id":{"name":"futures_io","disambiguator":[2477659211262778565,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","num":67,"id":{"name":"memchr","disambiguator":[3414416768918184331,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","num":68,"id":{"name":"matchit","disambiguator":[9731084115568833911,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/delay.rs","num":69,"id":{"name":"pin_project","disambiguator":[5182871714507375046,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/delay.rs","num":70,"id":{"name":"pin_project_internal","disambiguator":[5871575526365105557,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/streams.rs","num":71,"id":{"name":"wasm_streams","disambiguator":[5284499198518501495,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","num":72,"id":{"name":"chrono_tz","disambiguator":[8952167262866849524,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","num":73,"id":{"name":"phf","disambiguator":[10558859582634838616,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","num":74,"id":{"name":"phf_shared","disambiguator":[4492052383395259604,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","num":75,"id":{"name":"siphasher","disambiguator":[1944474634364387325,0]}},{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","num":76,"id":{"name":"uncased","disambiguator":[13153527478679985074,0]}}],"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":0,"byte_end":1488,"line_start":1,"line_end":67,"column_start":1,"column_end":49}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":148,"byte_end":159,"line_start":8,"line_end":8,"column_start":9,"column_end":20},"alias_span":null,"name":"async_trait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":0},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":184,"byte_end":190,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"alias_span":null,"name":"js_sys","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":1061},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":205,"byte_end":208,"line_start":11,"line_end":11,"column_start":14,"column_end":17},"alias_span":null,"name":"Url","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":0},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":233,"byte_end":245,"line_start":13,"line_end":13,"column_start":9,"column_end":21},"alias_span":null,"name":"wasm_bindgen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":39,"index":0},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":270,"byte_end":290,"line_start":15,"line_end":15,"column_start":9,"column_end":29},"alias_span":null,"name":"wasm_bindgen_futures","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":40,"index":0},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":300,"byte_end":309,"line_start":16,"line_end":16,"column_start":9,"column_end":18},"alias_span":null,"name":"kv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1617},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":330,"byte_end":332,"line_start":18,"line_end":18,"column_start":13,"column_end":15},"alias_span":null,"name":"Cf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":43,"index":78},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":358,"byte_end":372,"line_start":19,"line_end":19,"column_start":25,"column_end":39},"alias_span":null,"name":"durable_object","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":43,"index":79},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":374,"byte_end":379,"line_start":19,"line_end":19,"column_start":41,"column_end":46},"alias_span":null,"name":"event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":0},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":405,"byte_end":415,"line_start":21,"line_end":21,"column_start":9,"column_end":19},"alias_span":null,"name":"worker_sys","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":119},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":438,"byte_end":451,"line_start":22,"line_end":22,"column_start":22,"column_end":35},"alias_span":null,"name":"console_debug","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":122},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":453,"byte_end":466,"line_start":22,"line_end":22,"column_start":37,"column_end":50},"alias_span":null,"name":"console_error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":120},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":468,"byte_end":479,"line_start":22,"line_end":22,"column_start":52,"column_end":63},"alias_span":null,"name":"console_log","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":121},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":481,"byte_end":493,"line_start":22,"line_end":22,"column_start":65,"column_end":77},"alias_span":null,"name":"console_warn","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":519,"byte_end":520,"line_start":24,"line_end":24,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"AbortSignal","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1594},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":545,"byte_end":550,"line_start":25,"line_end":25,"column_start":24,"column_end":29},"alias_span":null,"name":"Cache","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1606},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":552,"byte_end":572,"line_start":25,"line_end":25,"column_start":31,"column_end":51},"alias_span":null,"name":"CacheDeletionOutcome","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1635},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":599,"byte_end":606,"line_start":26,"line_end":26,"column_start":25,"column_end":32},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1639},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":629,"byte_end":633,"line_start":27,"line_end":27,"column_start":22,"column_end":26},"alias_span":null,"name":"Cors","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1650},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":657,"byte_end":661,"line_start":28,"line_end":28,"column_start":23,"column_end":27},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1661},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":663,"byte_end":671,"line_start":28,"line_end":28,"column_start":29,"column_end":37},"alias_span":null,"name":"DateInit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1699},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":696,"byte_end":701,"line_start":29,"line_end":29,"column_start":23,"column_end":28},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":727,"byte_end":728,"line_start":30,"line_end":30,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1730},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":751,"byte_end":754,"line_start":31,"line_end":31,"column_start":22,"column_end":25},"alias_span":null,"name":"Env","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":677},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":756,"byte_end":762,"line_start":31,"line_end":31,"column_start":27,"column_end":33},"alias_span":null,"name":"Secret","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":678},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":764,"byte_end":767,"line_start":31,"line_end":31,"column_start":35,"column_end":38},"alias_span":null,"name":"Var","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1806},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":792,"byte_end":797,"line_start":32,"line_end":32,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":824,"byte_end":825,"line_start":33,"line_end":33,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"FormData","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":815},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":850,"byte_end":855,"line_start":34,"line_end":34,"column_start":24,"column_end":29},"alias_span":null,"name":"Fetch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":878},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":881,"byte_end":888,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"alias_span":null,"name":"Headers","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":879},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":881,"byte_end":888,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"alias_span":null,"name":"Headers","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1841},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":911,"byte_end":917,"line_start":36,"line_end":36,"column_start":22,"column_end":28},"alias_span":null,"name":"Method","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1874},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":943,"byte_end":950,"line_start":37,"line_end":37,"column_start":25,"column_end":32},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":981,"byte_end":982,"line_start":38,"line_end":38,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"RequestInit","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2037},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":1010,"byte_end":1018,"line_start":39,"line_end":39,"column_start":27,"column_end":35},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2024},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":1020,"byte_end":1032,"line_start":39,"line_end":39,"column_start":37,"column_end":49},"alias_span":null,"name":"ResponseBody","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1332},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":1059,"byte_end":1071,"line_start":40,"line_end":40,"column_start":25,"column_end":37},"alias_span":null,"name":"RouteContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1309},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":1073,"byte_end":1084,"line_start":40,"line_end":40,"column_start":39,"column_end":50},"alias_span":null,"name":"RouteParams","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1326},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":1086,"byte_end":1092,"line_start":40,"line_end":40,"column_start":52,"column_end":58},"alias_span":null,"name":"Router","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":1120,"byte_end":1121,"line_start":41,"line_end":41,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":1147,"byte_end":1148,"line_start":42,"line_end":42,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"ByteStream","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":1176,"byte_end":1177,"line_start":43,"line_end":43,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"ws_events, WebSocket","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":123332,"byte_end":123333,"line_start":14,"line_end":14,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"WebsocketEvent","parent":{"krate":0,"index":1466}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":0,"byte_end":1488,"line_start":1,"line_end":67,"column_start":1,"column_end":49},"name":"","qualname":"::","value":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":155},{"krate":0,"index":228},{"krate":0,"index":272},{"krate":0,"index":291},{"krate":0,"index":329},{"krate":0,"index":356},{"krate":0,"index":396},{"krate":0,"index":625},{"krate":0,"index":679},{"krate":0,"index":708},{"krate":0,"index":782},{"krate":0,"index":837},{"krate":0,"index":933},{"krate":0,"index":946},{"krate":0,"index":1075},{"krate":0,"index":1142},{"krate":0,"index":1254},{"krate":0,"index":1405},{"krate":0,"index":1432},{"krate":0,"index":1466},{"krate":0,"index":1584}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: new_without_default)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":0,"byte_end":38,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"allow(clippy :: or_fun_call)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":39,"byte_end":69,"line_start":2,"line_end":2,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1586},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":1748,"byte_end":1763,"line_start":9,"line_end":9,"column_start":12,"column_end":27},"name":"AbortController","qualname":"::abort::AbortController","value":"AbortController {  }","parent":null,"children":[{"krate":0,"index":1587}],"decl_id":null,"docs":" An interface that allows you to abort in-flight [Fetch](crate::Fetch) requests.\n","sig":null,"attributes":[{"value":"/ An interface that allows you to abort in-flight [Fetch](crate::Fetch) requests.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":1636,"byte_end":1719,"line_start":7,"line_end":7,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":1911,"byte_end":1917,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"signal","qualname":"<AbortController>::signal","value":"fn signal(&Self) -> AbortSignal","parent":null,"children":[],"decl_id":null,"docs":" Gets a [AbortSignal] which can be passed to a cancellable operation.\n","sig":null,"attributes":[{"value":"/ Gets a [AbortSignal] which can be passed to a cancellable operation.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":1827,"byte_end":1899,"line_start":14,"line_end":14,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":2088,"byte_end":2093,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortController>::abort","value":"fn abort(Self)","parent":null,"children":[],"decl_id":null,"docs":" Aborts any operation using a [AbortSignal] created from this controller.\n","sig":null,"attributes":[{"value":"/ Aborts any operation using a [AbortSignal] created from this controller.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":2000,"byte_end":2076,"line_start":19,"line_end":19,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":2281,"byte_end":2298,"line_start":26,"line_end":26,"column_start":12,"column_end":29},"name":"abort_with_reason","qualname":"<AbortController>::abort_with_reason","value":"fn abort_with_reason<impl Into<JsValue>>(Self, impl Into<JsValue>) where\nimpl Into<JsValue>: Into<JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Aborts any operation using a [AbortSignal] created from this controller with the provided\n reason.\n","sig":null,"attributes":[{"value":"/ Aborts any operation using a [AbortSignal] created from this controller with the provided","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":2160,"byte_end":2253,"line_start":24,"line_end":24,"column_start":5,"column_end":98}},{"value":"/ reason.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":2258,"byte_end":2269,"line_start":25,"line_end":25,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":2426,"byte_end":2433,"line_start":32,"line_end":32,"column_start":8,"column_end":15},"name":"default","qualname":"<AbortController as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1590},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":2686,"byte_end":2697,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"AbortSignal","qualname":"::abort::AbortSignal","value":"AbortSignal {  }","parent":null,"children":[{"krate":0,"index":1591}],"decl_id":null,"docs":" An interface representing a signal that can be passed to cancellable operations, primarily a\n [Fetch](crate::Fetch) request.\n","sig":null,"attributes":[{"value":"/ An interface representing a signal that can be passed to cancellable operations, primarily a","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":2526,"byte_end":2622,"line_start":39,"line_end":39,"column_start":1,"column_end":97}},{"value":"/ [Fetch](crate::Fetch) request.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":2623,"byte_end":2657,"line_start":40,"line_end":40,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":2851,"byte_end":2858,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"aborted","qualname":"<AbortSignal>::aborted","value":"fn aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" A [bool] indicating if the operation that the signal is used for has been aborted.\n","sig":null,"attributes":[{"value":"/ A [bool] indicating if the operation that the signal is used for has been aborted.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":2753,"byte_end":2839,"line_start":47,"line_end":47,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":2970,"byte_end":2976,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"reason","qualname":"<AbortSignal>::reason","value":"fn reason(&Self) -> Option<JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The reason why the signal was aborted.\n","sig":null,"attributes":[{"value":"/ The reason why the signal was aborted.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":2916,"byte_end":2958,"line_start":52,"line_end":52,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":3132,"byte_end":3137,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortSignal>::abort","value":"fn abort() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a [AbortSignal] that is already aborted.\n","sig":null,"attributes":[{"value":"/ Creates a [AbortSignal] that is already aborted.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":3068,"byte_end":3120,"line_start":57,"line_end":57,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":3314,"byte_end":3331,"line_start":63,"line_end":63,"column_start":12,"column_end":29},"name":"abort_with_reason","qualname":"<AbortSignal>::abort_with_reason","value":"fn abort_with_reason<impl Into<JsValue>>(impl Into<JsValue>) -> Self where\nimpl Into<JsValue>: Into<JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Creates a [AbortSignal] that is already aborted with the provided reason.\n","sig":null,"attributes":[{"value":"/ Creates a [AbortSignal] that is already aborted with the provided reason.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":3225,"byte_end":3302,"line_start":62,"line_end":62,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":3516,"byte_end":3520,"line_start":70,"line_end":70,"column_start":8,"column_end":12},"name":"from","qualname":"<AbortSignal as std::convert::From>::from","value":"fn from(AbortSignalSys) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":3657,"byte_end":3662,"line_start":78,"line_end":78,"column_start":8,"column_end":13},"name":"deref","qualname":"<AbortSignal as std::ops::Deref>::deref","value":"fn deref(&Self) -> &Self::Target","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1594},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":5689,"byte_end":5694,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Cache","qualname":"::cache::Cache","value":"Cache {  }","parent":null,"children":[{"krate":0,"index":1595}],"decl_id":null,"docs":" Provides access to the [Cache API](https://developers.cloudflare.com/workers/runtime-apis/cache).\n Because `match` is a reserved keyword in Rust, the `match` method has been renamed to `get`.","sig":null,"attributes":[{"value":"/ Provides access to the [Cache API](https://developers.cloudflare.com/workers/runtime-apis/cache).","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":4043,"byte_end":4144,"line_start":15,"line_end":15,"column_start":1,"column_end":102}},{"value":"/ Because `match` is a reserved keyword in Rust, the `match` method has been renamed to `get`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":4145,"byte_end":4241,"line_start":16,"line_end":16,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":4242,"byte_end":4245,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Our implementation of the Cache API respects the following HTTP headers on the response passed to `put()`:","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":4246,"byte_end":4356,"line_start":18,"line_end":18,"column_start":1,"column_end":111}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":4357,"byte_end":4360,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ - `Cache-Control`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":4361,"byte_end":4382,"line_start":20,"line_end":20,"column_start":1,"column_end":22}},{"value":"/   - Controls caching directives.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":4383,"byte_end":4419,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/     This is consistent with [Cloudflare Cache-Control Directives](https://developers.cloudflare.com/cache/about/cache-control#cache-control-directives).","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":4420,"byte_end":4576,"line_start":22,"line_end":22,"column_start":1,"column_end":157}},{"value":"/     Refer to [Edge TTL](https://developers.cloudflare.com/cache/how-to/configure-cache-status-code#edge-ttl) for a list of HTTP response codes and their TTL when Cache-Control directives are not present.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":4577,"byte_end":4784,"line_start":23,"line_end":23,"column_start":1,"column_end":208}},{"value":"/ - `Cache-Tag`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":4785,"byte_end":4802,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/   - Allows resource purging by tag(s) later (Enterprise only).","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":4803,"byte_end":4869,"line_start":25,"line_end":25,"column_start":1,"column_end":67}},{"value":"/ - `ETag`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":4870,"byte_end":4882,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"/   - Allows `cache.get()` to evaluate conditional requests with If-None-Match.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":4883,"byte_end":4964,"line_start":27,"line_end":27,"column_start":1,"column_end":82}},{"value":"/ - `Expires`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":4965,"byte_end":4980,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/   - A string that specifies when the resource becomes invalid.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":4981,"byte_end":5047,"line_start":29,"line_end":29,"column_start":1,"column_end":67}},{"value":"/ - `Last-Modified`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":5048,"byte_end":5069,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/   - Allows `cache.get()` to evaluate conditional requests with If-Modified-Since.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":5070,"byte_end":5155,"line_start":31,"line_end":31,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":5156,"byte_end":5159,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This differs from the web browser Cache API as they do not honor any headers on the request or response.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":5160,"byte_end":5268,"line_start":33,"line_end":33,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":5269,"byte_end":5272,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Responses with `Set-Cookie` headers are never cached, because this sometimes indicates that the response contains unique data. To store a response with a `Set-Cookie` header, either delete that header or set `Cache-Control: private=Set-Cookie` on the response before calling `cache.put()`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":5273,"byte_end":5566,"line_start":35,"line_end":35,"column_start":1,"column_end":294}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":5567,"byte_end":5570,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Use the `Cache-Control` method to store the response without the `Set-Cookie` header.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":5571,"byte_end":5660,"line_start":37,"line_end":37,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":5754,"byte_end":5761,"line_start":44,"line_end":44,"column_start":8,"column_end":15},"name":"default","qualname":"<Cache as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":6077,"byte_end":6081,"line_start":55,"line_end":55,"column_start":18,"column_end":22},"name":"open","qualname":"<Cache>::open","value":"async fn open(String) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a [`Cache`] by name. To access the default global cache, use [`Cache::default()`](`Default::default`).\n","sig":null,"attributes":[{"value":"/ Opens a [`Cache`] by name. To access the default global cache, use [`Cache::default()`](`Default::default`).","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":5947,"byte_end":6059,"line_start":54,"line_end":54,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":7447,"byte_end":7450,"line_start":79,"line_end":79,"column_start":18,"column_end":21},"name":"put","qualname":"<Cache>::put","value":"async fn put<'a, K, '_>(&'_ Self, K, Response) -> /*impl Trait*/ where\nK: Into<CacheKey>","parent":null,"children":[],"decl_id":null,"docs":" Adds to the cache a [`Response`] keyed to the given request.","sig":null,"attributes":[{"value":"/ Adds to the cache a [`Response`] keyed to the given request.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":6469,"byte_end":6533,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":6538,"byte_end":6541,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ The [`Response`] should include a `cache-control` header with `max-age` or `s-maxage` directives,","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":6546,"byte_end":6647,"line_start":68,"line_end":68,"column_start":5,"column_end":106}},{"value":"/ otherwise the Cache API will not cache the response.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":6652,"byte_end":6708,"line_start":69,"line_end":69,"column_start":5,"column_end":61}},{"value":"/ The `stale-while-revalidate` and `stale-if-error` directives are not supported","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":6713,"byte_end":6795,"line_start":70,"line_end":70,"column_start":5,"column_end":87}},{"value":"/ when using the `cache.put` or `cache.get` methods.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":6800,"byte_end":6854,"line_start":71,"line_end":71,"column_start":5,"column_end":59}},{"value":"/ For more information about how the Cache works, visit the documentation at [Cache API](https://developers.cloudflare.com/workers/runtime-apis/cache/)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":6859,"byte_end":7012,"line_start":72,"line_end":72,"column_start":5,"column_end":158}},{"value":"/ and [Cloudflare Cache-Control Directives](https://developers.cloudflare.com/cache/about/cache-control#cache-control-directives)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":7017,"byte_end":7148,"line_start":73,"line_end":73,"column_start":5,"column_end":136}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":7153,"byte_end":7156,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ The Cache API will throw an error if:","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":7161,"byte_end":7202,"line_start":75,"line_end":75,"column_start":5,"column_end":46}},{"value":"/ - the request passed is a method other than GET.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":7207,"byte_end":7259,"line_start":76,"line_end":76,"column_start":5,"column_end":57}},{"value":"/ - the response passed has a status of 206 Partial Content.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":7264,"byte_end":7326,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"/ - the response passed contains the header `Vary: *` (required by the Cache API specification).","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":7331,"byte_end":7429,"line_start":78,"line_end":78,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":9162,"byte_end":9165,"line_start":104,"line_end":104,"column_start":18,"column_end":21},"name":"get","qualname":"<Cache>::get","value":"async fn get<'a, K, '_>(&'_ Self, K, bool) -> /*impl Trait*/ where\nK: Into<CacheKey>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Response`] object keyed to that request. Never sends a subrequest to the origin. If no matching response is found in cache, returns `None`.","sig":null,"attributes":[{"value":"/ Returns the [`Response`] object keyed to that request. Never sends a subrequest to the origin. If no matching response is found in cache, returns `None`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":7881,"byte_end":8038,"line_start":90,"line_end":90,"column_start":5,"column_end":162}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":8043,"byte_end":8046,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Unlike the browser Cache API, Cloudflare Workers do not support the `ignoreSearch` or `ignoreVary` options on `get()`. You can accomplish this behavior by removing query strings or HTTP headers at `put()` time.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":8051,"byte_end":8265,"line_start":92,"line_end":92,"column_start":5,"column_end":219}},{"value":"/ In addition, the `stale-while-revalidate` and `stale-if-error` directives are not supported","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":8270,"byte_end":8365,"line_start":93,"line_end":93,"column_start":5,"column_end":100}},{"value":"/ when using the `cache.put` or `cache.get` methods.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":8370,"byte_end":8424,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":8429,"byte_end":8432,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Our implementation of the Cache API respects the following HTTP headers on the request passed to `get()`:","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":8437,"byte_end":8546,"line_start":96,"line_end":96,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":8551,"byte_end":8554,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ - Range","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":8559,"byte_end":8570,"line_start":98,"line_end":98,"column_start":5,"column_end":16}},{"value":"/   - Results in a `206` response if a matching response with a Content-Length header is found. Your Cloudflare cache always respects range requests, even if an `Accept-Ranges` header is on the response.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":8575,"byte_end":8780,"line_start":99,"line_end":99,"column_start":5,"column_end":210}},{"value":"/ - If-Modified-Since","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":8785,"byte_end":8808,"line_start":100,"line_end":100,"column_start":5,"column_end":28}},{"value":"/   - Results in a `304` response if a matching response is found with a `Last-Modified` header with a value after the time specified in `If-Modified-Since`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":8813,"byte_end":8972,"line_start":101,"line_end":101,"column_start":5,"column_end":164}},{"value":"/ - If-None-Match","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":8977,"byte_end":8996,"line_start":102,"line_end":102,"column_start":5,"column_end":24}},{"value":"/   - Results in a `304` response if a matching response is found with an `ETag` header with a value that matches a value in `If-None-Match.`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":9001,"byte_end":9144,"line_start":103,"line_end":103,"column_start":5,"column_end":148}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":10214,"byte_end":10220,"line_start":131,"line_end":131,"column_start":18,"column_end":24},"name":"delete","qualname":"<Cache>::delete","value":"async fn delete<'a, K, '_>(&'_ Self, K, bool) -> /*impl Trait*/ where\nK: Into<CacheKey>","parent":null,"children":[],"decl_id":null,"docs":" Deletes the [`Response`] object associated with the key.","sig":null,"attributes":[{"value":"/ Deletes the [`Response`] object associated with the key.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":9953,"byte_end":10013,"line_start":126,"line_end":126,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":10018,"byte_end":10021,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Returns:","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":10026,"byte_end":10038,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/   - Success, if the response was cached but is now deleted","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":10043,"byte_end":10105,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/   - ResponseNotFound, if the response was not in the cache at the time of deletion","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":10110,"byte_end":10196,"line_start":130,"line_end":130,"column_start":5,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":213},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11418,"byte_end":11421,"line_start":164,"line_end":164,"column_start":5,"column_end":8},"name":"Url","qualname":"::cache::CacheKey::Url","value":"CacheKey::Url(String)","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":215},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11422,"byte_end":11428,"line_start":164,"line_end":164,"column_start":9,"column_end":15},"name":"0","qualname":"::cache::CacheKey::Url::0","value":"std::string::String","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":216},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11435,"byte_end":11442,"line_start":165,"line_end":165,"column_start":5,"column_end":12},"name":"Request","qualname":"::cache::CacheKey::Request","value":"CacheKey::Request(&'a Request)","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":218},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11443,"byte_end":11454,"line_start":165,"line_end":165,"column_start":13,"column_end":24},"name":"0","qualname":"::cache::CacheKey::Request::0","value":"&'a request::Request","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":211},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11399,"byte_end":11407,"line_start":163,"line_end":163,"column_start":10,"column_end":18},"name":"CacheKey","qualname":"::cache::CacheKey","value":"enum CacheKey<'a> { Url(String), Request(&'a Request), }","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":216}],"decl_id":null,"docs":" The `String` or `Request` object used as the lookup key. `String`s are interpreted as the URL for a new `Request` object.\n","sig":null,"attributes":[{"value":"/ The `String` or `Request` object used as the lookup key. `String`s are interpreted as the URL for a new `Request` object.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11264,"byte_end":11389,"line_start":162,"line_end":162,"column_start":1,"column_end":126}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11502,"byte_end":11506,"line_start":169,"line_end":169,"column_start":8,"column_end":12},"name":"from","qualname":"<CacheKey as std::convert::From>::from","value":"fn from(&str) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11616,"byte_end":11620,"line_start":175,"line_end":175,"column_start":8,"column_end":12},"name":"from","qualname":"<CacheKey as std::convert::From>::from","value":"fn from(String) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11721,"byte_end":11725,"line_start":181,"line_end":181,"column_start":8,"column_end":12},"name":"from","qualname":"<CacheKey as std::convert::From>::from","value":"fn from(&String) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11843,"byte_end":11847,"line_start":187,"line_end":187,"column_start":8,"column_end":12},"name":"from","qualname":"<CacheKey as std::convert::From>::from","value":"fn from(&'a Request) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1607},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":12106,"byte_end":12113,"line_start":196,"line_end":196,"column_start":5,"column_end":12},"name":"Success","qualname":"::cache::CacheDeletionOutcome::Success","value":"CacheDeletionOutcome::Success","parent":{"krate":0,"index":1606},"children":[],"decl_id":null,"docs":" The response was cached but is now deleted\n","sig":null,"attributes":[{"value":"/ The response was cached but is now deleted","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":12055,"byte_end":12101,"line_start":195,"line_end":195,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1609},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":12186,"byte_end":12202,"line_start":198,"line_end":198,"column_start":5,"column_end":21},"name":"ResponseNotFound","qualname":"::cache::CacheDeletionOutcome::ResponseNotFound","value":"CacheDeletionOutcome::ResponseNotFound","parent":{"krate":0,"index":1606},"children":[],"decl_id":null,"docs":" The response was not in the cache at the time of deletion.\n","sig":null,"attributes":[{"value":"/ The response was not in the cache at the time of deletion.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":12119,"byte_end":12181,"line_start":197,"line_end":197,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":12028,"byte_end":12048,"line_start":194,"line_end":194,"column_start":10,"column_end":30},"name":"CacheDeletionOutcome","qualname":"::cache::CacheDeletionOutcome","value":"enum CacheDeletionOutcome { Success, ResponseNotFound, }","parent":null,"children":[{"krate":0,"index":1607},{"krate":0,"index":1609}],"decl_id":null,"docs":" Successful outcomes when attempting to delete a `Response` from the cache\n","sig":null,"attributes":[{"value":"/ Successful outcomes when attempting to delete a `Response` from the cache","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11920,"byte_end":11997,"line_start":192,"line_end":192,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1617},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":12600,"byte_end":12602,"line_start":8,"line_end":8,"column_start":12,"column_end":14},"name":"Cf","qualname":"::cf::Cf","value":"Cf {  }","parent":null,"children":[{"krate":0,"index":1618}],"decl_id":null,"docs":" In addition to the methods on the `Request` struct, the `Cf` struct on an inbound Request contains information about the request provided by Cloudflare’s edge.","sig":null,"attributes":[{"value":"/ In addition to the methods on the `Request` struct, the `Cf` struct on an inbound Request contains information about the request provided by Cloudflare’s edge.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":12296,"byte_end":12461,"line_start":4,"line_end":4,"column_start":1,"column_end":164}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":12462,"byte_end":12465,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [Details](https://developers.cloudflare.com/workers/runtime-apis/request#incomingrequestcfproperties)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":12466,"byte_end":12571,"line_start":6,"line_end":6,"column_start":1,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":12769,"byte_end":12773,"line_start":15,"line_end":15,"column_start":12,"column_end":16},"name":"colo","qualname":"<Cf>::colo","value":"fn colo(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The three-letter airport code (e.g. `ATX`, `LUX`) representing\n the colocation which processed the request\n","sig":null,"attributes":[{"value":"/ The three-letter airport code (e.g. `ATX`, `LUX`) representing","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":12640,"byte_end":12706,"line_start":13,"line_end":13,"column_start":5,"column_end":71}},{"value":"/ the colocation which processed the request","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":12711,"byte_end":12757,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":12910,"byte_end":12913,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"asn","qualname":"<Cf>::asn","value":"fn asn(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The Autonomous System Number (ASN) of the request, e.g. `395747`\n","sig":null,"attributes":[{"value":"/ The Autonomous System Number (ASN) of the request, e.g. `395747`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":12830,"byte_end":12898,"line_start":19,"line_end":19,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":13125,"byte_end":13132,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"country","qualname":"<Cf>::country","value":"fn country(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" The two-letter country code of origin for the request.\n This is the same value as that provided in the CF-IPCountry header, e.g.  `\"US\"`\n","sig":null,"attributes":[{"value":"/ The two-letter country code of origin for the request.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":12966,"byte_end":13024,"line_start":24,"line_end":24,"column_start":5,"column_end":63}},{"value":"/ This is the same value as that provided in the CF-IPCountry header, e.g.  `\"US\"`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":13029,"byte_end":13113,"line_start":25,"line_end":25,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":13269,"byte_end":13282,"line_start":31,"line_end":31,"column_start":12,"column_end":25},"name":"http_protocol","qualname":"<Cf>::http_protocol","value":"fn http_protocol(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The HTTP Protocol (e.g. \"HTTP/2\") used by the request\n","sig":null,"attributes":[{"value":"/ The HTTP Protocol (e.g. \"HTTP/2\") used by the request","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":13200,"byte_end":13257,"line_start":30,"line_end":30,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":13598,"byte_end":13614,"line_start":38,"line_end":38,"column_start":12,"column_end":28},"name":"request_priority","qualname":"<Cf>::request_priority","value":"fn request_priority(&Self) -> Option<RequestPriority>","parent":null,"children":[],"decl_id":null,"docs":" The browser-requested prioritization information in the request object,","sig":null,"attributes":[{"value":"/ The browser-requested prioritization information in the request object,","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":13348,"byte_end":13423,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":13428,"byte_end":13431,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ See [this blog post](https://blog.cloudflare.com/better-http-2-prioritization-for-a-faster-web/#customizingprioritizationwithworkers) for details.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":13436,"byte_end":13586,"line_start":37,"line_end":37,"column_start":5,"column_end":155}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":14975,"byte_end":14985,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"tls_cipher","qualname":"<Cf>::tls_cipher","value":"fn tls_cipher(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The cipher for the connection to Cloudflare, e.g. \"AEAD-AES128-GCM-SHA256\".\n","sig":null,"attributes":[{"value":"/ The cipher for the connection to Cloudflare, e.g. \"AEAD-AES128-GCM-SHA256\".","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":14884,"byte_end":14963,"line_start":76,"line_end":76,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":15170,"byte_end":15185,"line_start":83,"line_end":83,"column_start":12,"column_end":27},"name":"tls_client_auth","qualname":"<Cf>::tls_client_auth","value":"fn tls_client_auth(&Self) -> Option<TlsClientAuth>","parent":null,"children":[],"decl_id":null,"docs":" Information about the client's authorization.\n Only set when using Cloudflare Access or API Shield.\n","sig":null,"attributes":[{"value":"/ Information about the client's authorization.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":15048,"byte_end":15097,"line_start":81,"line_end":81,"column_start":5,"column_end":54}},{"value":"/ Only set when using Cloudflare Access or API Shield.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":15102,"byte_end":15158,"line_start":82,"line_end":82,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":15362,"byte_end":15373,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"tls_version","qualname":"<Cf>::tls_version","value":"fn tls_version(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The TLS version of the connection to Cloudflare, e.g. TLSv1.3.\n","sig":null,"attributes":[{"value":"/ The TLS version of the connection to Cloudflare, e.g. TLSv1.3.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":15284,"byte_end":15350,"line_start":87,"line_end":87,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":15566,"byte_end":15570,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"city","qualname":"<Cf>::city","value":"fn city(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" City of the incoming request, e.g. \"Austin\".\n","sig":null,"attributes":[{"value":"/ City of the incoming request, e.g. \"Austin\".","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":15506,"byte_end":15554,"line_start":93,"line_end":93,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":15695,"byte_end":15704,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"continent","qualname":"<Cf>::continent","value":"fn continent(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Continent of the incoming request, e.g. \"NA\"\n","sig":null,"attributes":[{"value":"/ Continent of the incoming request, e.g. \"NA\"","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":15635,"byte_end":15683,"line_start":98,"line_end":98,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":15864,"byte_end":15875,"line_start":104,"line_end":104,"column_start":12,"column_end":23},"name":"coordinates","qualname":"<Cf>::coordinates","value":"fn coordinates(&Self) -> Option<(f32, f32)>","parent":null,"children":[],"decl_id":null,"docs":" Latitude and longitude of the incoming request, e.g. (30.27130, -97.74260)\n","sig":null,"attributes":[{"value":"/ Latitude and longitude of the incoming request, e.g. (30.27130, -97.74260)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":15774,"byte_end":15852,"line_start":103,"line_end":103,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":16392,"byte_end":16403,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"postal_code","qualname":"<Cf>::postal_code","value":"fn postal_code(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Postal code of the incoming request, e.g. \"78701\"\n","sig":null,"attributes":[{"value":"/ Postal code of the incoming request, e.g. \"78701\"","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":16327,"byte_end":16380,"line_start":118,"line_end":118,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":16543,"byte_end":16553,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"metro_code","qualname":"<Cf>::metro_code","value":"fn metro_code(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Metro code (DMA) of the incoming request, e.g. \"635\"\n","sig":null,"attributes":[{"value":"/ Metro code (DMA) of the incoming request, e.g. \"635\"","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":16475,"byte_end":16531,"line_start":123,"line_end":123,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":16810,"byte_end":16816,"line_start":129,"line_end":129,"column_start":12,"column_end":18},"name":"region","qualname":"<Cf>::region","value":"fn region(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" If known, the [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) name for the first level region associated with the IP address of the incoming request, e.g. \"Texas\".\n","sig":null,"attributes":[{"value":"/ If known, the [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) name for the first level region associated with the IP address of the incoming request, e.g. \"Texas\".","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":16624,"byte_end":16798,"line_start":128,"line_end":128,"column_start":5,"column_end":179}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":17066,"byte_end":17077,"line_start":134,"line_end":134,"column_start":12,"column_end":23},"name":"region_code","qualname":"<Cf>::region_code","value":"fn region_code(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" If known, the [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) code for the first level region associated with the IP address of the incoming request, e.g. \"TX\".\n","sig":null,"attributes":[{"value":"/ If known, the [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) code for the first level region associated with the IP address of the incoming request, e.g. \"TX\".","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":16883,"byte_end":17054,"line_start":133,"line_end":133,"column_start":5,"column_end":176}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":17197,"byte_end":17205,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"timezone","qualname":"<Cf>::timezone","value":"fn timezone(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Timezone of the incoming request\n","sig":null,"attributes":[{"value":"/ Timezone of the incoming request","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":17149,"byte_end":17185,"line_start":138,"line_end":138,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1621},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":17425,"byte_end":17440,"line_start":147,"line_end":147,"column_start":12,"column_end":27},"name":"RequestPriority","qualname":"::cf::RequestPriority","value":"RequestPriority { weight, exclusive, group, group_weight }","parent":null,"children":[{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1625}],"decl_id":null,"docs":" Browser-requested prioritization information.\n","sig":null,"attributes":[{"value":"/ Browser-requested prioritization information.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":17334,"byte_end":17383,"line_start":145,"line_end":145,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1622},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":17518,"byte_end":17524,"line_start":149,"line_end":149,"column_start":9,"column_end":15},"name":"weight","qualname":"::cf::RequestPriority::weight","value":"usize","parent":{"krate":0,"index":1621},"children":[],"decl_id":null,"docs":" The browser-requested weight for the HTTP/2 prioritization\n","sig":null,"attributes":[{"value":"/ The browser-requested weight for the HTTP/2 prioritization","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":17447,"byte_end":17509,"line_start":148,"line_end":148,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":1623},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":17648,"byte_end":17657,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"name":"exclusive","qualname":"::cf::RequestPriority::exclusive","value":"bool","parent":{"krate":0,"index":1621},"children":[],"decl_id":null,"docs":" The browser-requested HTTP/2 exclusive flag (true for Chromium-based browsers, false for others).\n","sig":null,"attributes":[{"value":"/ The browser-requested HTTP/2 exclusive flag (true for Chromium-based browsers, false for others).","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":17538,"byte_end":17639,"line_start":151,"line_end":151,"column_start":5,"column_end":106}}]},{"kind":"Field","id":{"krate":0,"index":1624},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":17749,"byte_end":17754,"line_start":155,"line_end":155,"column_start":9,"column_end":14},"name":"group","qualname":"::cf::RequestPriority::group","value":"usize","parent":{"krate":0,"index":1621},"children":[],"decl_id":null,"docs":" HTTP/2 stream ID for the request group (only non-zero for Firefox)\n","sig":null,"attributes":[{"value":"/ HTTP/2 stream ID for the request group (only non-zero for Firefox)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":17670,"byte_end":17740,"line_start":154,"line_end":154,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1625},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":17844,"byte_end":17856,"line_start":158,"line_end":158,"column_start":9,"column_end":21},"name":"group_weight","qualname":"::cf::RequestPriority::group_weight","value":"usize","parent":{"krate":0,"index":1621},"children":[],"decl_id":null,"docs":" HTTP/2 weight for the request group (only non-zero for Firefox)\n","sig":null,"attributes":[{"value":"/ HTTP/2 weight for the request group (only non-zero for Firefox)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":17768,"byte_end":17835,"line_start":157,"line_end":157,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":17901,"byte_end":17905,"line_start":162,"line_end":162,"column_start":8,"column_end":12},"name":"from","qualname":"<Cf as std::convert::From>::from","value":"fn from(FfiCf) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1631},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":18046,"byte_end":18059,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"TlsClientAuth","qualname":"::cf::TlsClientAuth","value":"TlsClientAuth {  }","parent":null,"children":[{"krate":0,"index":1632}],"decl_id":null,"docs":" Only set when using Cloudflare Access or API Shield\n","sig":null,"attributes":[{"value":"/ Only set when using Cloudflare Access or API Shield","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":17962,"byte_end":18017,"line_start":167,"line_end":167,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":18126,"byte_end":18147,"line_start":174,"line_end":174,"column_start":12,"column_end":33},"name":"cert_issuer_dn_legacy","qualname":"<TlsClientAuth>::cert_issuer_dn_legacy","value":"fn cert_issuer_dn_legacy(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":18228,"byte_end":18242,"line_start":178,"line_end":178,"column_start":12,"column_end":26},"name":"cert_issuer_dn","qualname":"<TlsClientAuth>::cert_issuer_dn","value":"fn cert_issuer_dn(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":18316,"byte_end":18338,"line_start":182,"line_end":182,"column_start":12,"column_end":34},"name":"cert_issuer_dn_rfc2253","qualname":"<TlsClientAuth>::cert_issuer_dn_rfc2253","value":"fn cert_issuer_dn_rfc2253(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":18420,"byte_end":18442,"line_start":186,"line_end":186,"column_start":12,"column_end":34},"name":"cert_subject_dn_legacy","qualname":"<TlsClientAuth>::cert_subject_dn_legacy","value":"fn cert_subject_dn_legacy(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":18524,"byte_end":18537,"line_start":190,"line_end":190,"column_start":12,"column_end":25},"name":"cert_verified","qualname":"<TlsClientAuth>::cert_verified","value":"fn cert_verified(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":18610,"byte_end":18624,"line_start":194,"line_end":194,"column_start":12,"column_end":26},"name":"cert_not_after","qualname":"<TlsClientAuth>::cert_not_after","value":"fn cert_not_after(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":18698,"byte_end":18713,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"cert_subject_dn","qualname":"<TlsClientAuth>::cert_subject_dn","value":"fn cert_subject_dn(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":18788,"byte_end":18809,"line_start":202,"line_end":202,"column_start":12,"column_end":33},"name":"cert_fingerprint_sha1","qualname":"<TlsClientAuth>::cert_fingerprint_sha1","value":"fn cert_fingerprint_sha1(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":18890,"byte_end":18905,"line_start":206,"line_end":206,"column_start":12,"column_end":27},"name":"cert_not_before","qualname":"<TlsClientAuth>::cert_not_before","value":"fn cert_not_before(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":18980,"byte_end":18991,"line_start":210,"line_end":210,"column_start":12,"column_end":23},"name":"cert_serial","qualname":"<TlsClientAuth>::cert_serial","value":"fn cert_serial(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":19062,"byte_end":19076,"line_start":214,"line_end":214,"column_start":12,"column_end":26},"name":"cert_presented","qualname":"<TlsClientAuth>::cert_presented","value":"fn cert_presented(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":19150,"byte_end":19172,"line_start":218,"line_end":218,"column_start":12,"column_end":34},"name":"cert_subject_dn_rfc225","qualname":"<TlsClientAuth>::cert_subject_dn_rfc225","value":"fn cert_subject_dn_rfc225(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":19300,"byte_end":19304,"line_start":224,"line_end":224,"column_start":8,"column_end":12},"name":"from","qualname":"<TlsClientAuth as std::convert::From>::from","value":"fn from(FfiTlsClientAuth) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":19594,"byte_end":19601,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Context","qualname":"::context::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":1636}],"decl_id":null,"docs":" A context bound to a `fetch` event.\n","sig":null,"attributes":[{"value":"/ A context bound to a `fetch` event.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":19526,"byte_end":19565,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":19730,"byte_end":19733,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Context>::new","value":"fn new(JsContext) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a context from an underlying JavaScript context object.\n","sig":null,"attributes":[{"value":"/ Constructs a context from an underlying JavaScript context object.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":19648,"byte_end":19718,"line_start":15,"line_end":15,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":20246,"byte_end":20256,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"wait_until","qualname":"<Context>::wait_until","value":"fn wait_until<F>(&Self, F) where F: Future<Output = ()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Extends the lifetime of the \"fetch\" event which this context is bound to,\n until the given future has been completed. The future is executed before the handler\n terminates but does not block the response. For example, this is ideal for caching\n responses or handling logging.\n ```no_run\n context.wait_until(async move {\n     let _ = cache.put(request, response).await;\n });\n ```\n","sig":null,"attributes":[{"value":"/ Extends the lifetime of the \"fetch\" event which this context is bound to,","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":19796,"byte_end":19873,"line_start":20,"line_end":20,"column_start":5,"column_end":82}},{"value":"/ until the given future has been completed. The future is executed before the handler","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":19878,"byte_end":19966,"line_start":21,"line_end":21,"column_start":5,"column_end":93}},{"value":"/ terminates but does not block the response. For example, this is ideal for caching","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":19971,"byte_end":20057,"line_start":22,"line_end":22,"column_start":5,"column_end":91}},{"value":"/ responses or handling logging.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":20062,"byte_end":20096,"line_start":23,"line_end":23,"column_start":5,"column_end":39}},{"value":"/ ```no_run","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":20101,"byte_end":20114,"line_start":24,"line_end":24,"column_start":5,"column_end":18}},{"value":"/ context.wait_until(async move {","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":20119,"byte_end":20154,"line_start":25,"line_end":25,"column_start":5,"column_end":40}},{"value":"/     let _ = cache.put(request, response).await;","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":20159,"byte_end":20210,"line_start":26,"line_end":26,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":20215,"byte_end":20222,"line_start":27,"line_end":27,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":20227,"byte_end":20234,"line_start":28,"line_end":28,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":20724,"byte_end":20749,"line_start":42,"line_end":42,"column_start":12,"column_end":37},"name":"pass_through_on_exception","qualname":"<Context>::pass_through_on_exception","value":"fn pass_through_on_exception(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents a runtime error response when the Worker script throws an unhandled exception.\n Instead, the script will \"fail open\", which will proxy the request to the origin server\n as though the Worker was never invoked.\n","sig":null,"attributes":[{"value":"/ Prevents a runtime error response when the Worker script throws an unhandled exception.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":20477,"byte_end":20568,"line_start":39,"line_end":39,"column_start":5,"column_end":96}},{"value":"/ Instead, the script will \"fail open\", which will proxy the request to the origin server","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":20573,"byte_end":20664,"line_start":40,"line_end":40,"column_start":5,"column_end":96}},{"value":"/ as though the Worker was never invoked.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":20669,"byte_end":20712,"line_start":41,"line_end":41,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1639},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":20940,"byte_end":20944,"line_start":5,"line_end":5,"column_start":12,"column_end":16},"name":"Cors","qualname":"::cors::Cors","value":"Cors {  }","parent":null,"children":[{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645}],"decl_id":null,"docs":" Cors struct, holding cors configuration\n","sig":null,"attributes":[{"value":"/ Cors struct, holding cors configuration","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":20861,"byte_end":20904,"line_start":3,"line_end":3,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":21215,"byte_end":21222,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"default","qualname":"<Cors as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":21562,"byte_end":21565,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<Cors>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" `new` constructor for convenience; does the same as `Self::default()`.\n","sig":null,"attributes":[{"value":"/ `new` constructor for convenience; does the same as `Self::default()`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":21476,"byte_end":21550,"line_start":29,"line_end":29,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":21692,"byte_end":21708,"line_start":35,"line_end":35,"column_start":12,"column_end":28},"name":"with_credentials","qualname":"<Cors>::with_credentials","value":"fn with_credentials(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures whether cors is allowed to share credentials or not.\n","sig":null,"attributes":[{"value":"/ Configures whether cors is allowed to share credentials or not.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":21613,"byte_end":21680,"line_start":34,"line_end":34,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":21894,"byte_end":21906,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"with_max_age","qualname":"<Cors>::with_max_age","value":"fn with_max_age(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures how long cors is allowed to cache a preflight-response.\n","sig":null,"attributes":[{"value":"/ Configures how long cors is allowed to cache a preflight-response.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":21812,"byte_end":21882,"line_start":40,"line_end":40,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":22065,"byte_end":22077,"line_start":47,"line_end":47,"column_start":12,"column_end":24},"name":"with_origins","qualname":"<Cors>::with_origins","value":"fn with_origins<S, V>(Self, V) -> Self where S: Into<String>,\nV: IntoIterator<Item = S>","parent":null,"children":[],"decl_id":null,"docs":" Configures which origins are allowed for cors.\n","sig":null,"attributes":[{"value":"/ Configures which origins are allowed for cors.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":22003,"byte_end":22053,"line_start":46,"line_end":46,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":22372,"byte_end":22384,"line_start":56,"line_end":56,"column_start":12,"column_end":24},"name":"with_methods","qualname":"<Cors>::with_methods","value":"fn with_methods<V>(Self, V) -> Self where V: IntoIterator<Item = Method>","parent":null,"children":[],"decl_id":null,"docs":" Configures which methods are allowed for cors.\n","sig":null,"attributes":[{"value":"/ Configures which methods are allowed for cors.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":22310,"byte_end":22360,"line_start":55,"line_end":55,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":22589,"byte_end":22609,"line_start":62,"line_end":62,"column_start":12,"column_end":32},"name":"with_allowed_headers","qualname":"<Cors>::with_allowed_headers","value":"fn with_allowed_headers<S, V>(Self, V) -> Self where S: Into<String>,\nV: IntoIterator<Item = S>","parent":null,"children":[],"decl_id":null,"docs":" Configures which headers are allowed for cors.\n","sig":null,"attributes":[{"value":"/ Configures which headers are allowed for cors.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":22527,"byte_end":22577,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":22946,"byte_end":22966,"line_start":74,"line_end":74,"column_start":12,"column_end":32},"name":"with_exposed_headers","qualname":"<Cors>::with_exposed_headers","value":"fn with_exposed_headers<S, V>(Self, V) -> Self where S: Into<String>,\nV: IntoIterator<Item = S>","parent":null,"children":[],"decl_id":null,"docs":" Configures which headers the client is allowed to access.\n","sig":null,"attributes":[{"value":"/ Configures which headers the client is allowed to access.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":22873,"byte_end":22934,"line_start":73,"line_end":73,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":23297,"byte_end":23310,"line_start":86,"line_end":86,"column_start":12,"column_end":25},"name":"apply_headers","qualname":"<Cors>::apply_headers","value":"fn apply_headers(&Self, &mut Headers) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Applies the cors configuration to response headers.\n","sig":null,"attributes":[{"value":"/ Applies the cors configuration to response headers.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":23230,"byte_end":23285,"line_start":85,"line_end":85,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1650},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25391,"byte_end":25395,"line_start":15,"line_end":15,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":1651}],"decl_id":null,"docs":" The equivalent to a JavaScript `Date` Object.\n ```no_run\n let now = Date::now();\n let millis = now.as_millis();\n // or use a specific point in time:\n let t1: Date = DateInit::Millis(1630611511000).into();\n let t2: Date = DateInit::String(\"Thu, 02 Sep 2021 19:38:31 GMT\".to_string()).into();\n ```\n","sig":null,"attributes":[{"value":"/ The equivalent to a JavaScript `Date` Object.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25027,"byte_end":25076,"line_start":6,"line_end":6,"column_start":1,"column_end":50}},{"value":"/ ```no_run","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25077,"byte_end":25090,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/ let now = Date::now();","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25091,"byte_end":25117,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/ let millis = now.as_millis();","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25118,"byte_end":25151,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/ // or use a specific point in time:","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25152,"byte_end":25191,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/ let t1: Date = DateInit::Millis(1630611511000).into();","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25192,"byte_end":25250,"line_start":11,"line_end":11,"column_start":1,"column_end":59}},{"value":"/ let t2: Date = DateInit::String(\"Thu, 02 Sep 2021 19:38:31 GMT\".to_string()).into();","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25251,"byte_end":25339,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ ```","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25340,"byte_end":25347,"line_start":13,"line_end":13,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1662},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25684,"byte_end":25690,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Millis","qualname":"::date::DateInit::Millis","value":"DateInit::Millis(u64)","parent":{"krate":0,"index":1661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25691,"byte_end":25694,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"0","qualname":"::date::DateInit::Millis::0","value":"u64","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1665},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25701,"byte_end":25707,"line_start":27,"line_end":27,"column_start":5,"column_end":11},"name":"String","qualname":"::date::DateInit::String","value":"DateInit::String(String)","parent":{"krate":0,"index":1661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1667},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25708,"byte_end":25714,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"0","qualname":"::date::DateInit::String::0","value":"std::string::String","parent":{"krate":0,"index":1665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1661},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25669,"byte_end":25677,"line_start":25,"line_end":25,"column_start":10,"column_end":18},"name":"DateInit","qualname":"::date::DateInit","value":"enum DateInit { Millis(u64), String(String), }","parent":null,"children":[{"krate":0,"index":1662},{"krate":0,"index":1665}],"decl_id":null,"docs":" Initialize a `Date` by constructing this enum.\n ```no_run\n let t1: Date = DateInit::Millis(1630611511000).into();\n let t2: Date = DateInit::String(\"Thu, 02 Sep 2021 19:38:31 GMT\".to_string()).into();\n ```\n","sig":null,"attributes":[{"value":"/ Initialize a `Date` by constructing this enum.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25422,"byte_end":25472,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/ ```no_run","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25473,"byte_end":25486,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/ let t1: Date = DateInit::Millis(1630611511000).into();","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25487,"byte_end":25545,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/ let t2: Date = DateInit::String(\"Thu, 02 Sep 2021 19:38:31 GMT\".to_string()).into();","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25546,"byte_end":25634,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"/ ```","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25635,"byte_end":25642,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25758,"byte_end":25762,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"from","qualname":"<Date as std::convert::From>::from","value":"fn from(DateInit) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25934,"byte_end":25937,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<Date>::new","value":"fn new(DateInit) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Date, which requires being initialized from a known DateInit value.\n","sig":null,"attributes":[{"value":"/ Create a new Date, which requires being initialized from a known DateInit value.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25838,"byte_end":25922,"line_start":37,"line_end":37,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":26265,"byte_end":26268,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"now","qualname":"<Date>::now","value":"fn now() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the current time, represented by a Date.\n","sig":null,"attributes":[{"value":"/ Get the current time, represented by a Date.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":26205,"byte_end":26253,"line_start":49,"line_end":49,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":26439,"byte_end":26448,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"as_millis","qualname":"<Date>::as_millis","value":"fn as_millis(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Convert a Date into its number of milliseconds since the Unix epoch.\n","sig":null,"attributes":[{"value":"/ Convert a Date into its number of milliseconds since the Unix epoch.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":26355,"byte_end":26427,"line_start":56,"line_end":56,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":26545,"byte_end":26554,"line_start":63,"line_end":63,"column_start":8,"column_end":17},"name":"to_string","qualname":"<Date as std::string::ToString>::to_string","value":"fn to_string(&Self) -> String","parent":{"krate":5,"index":6071},"children":[],"decl_id":{"krate":5,"index":6072},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":26681,"byte_end":26685,"line_start":69,"line_end":69,"column_start":8,"column_end":12},"name":"from","qualname":"<Date as std::convert::From>::from","value":"fn from(chrono::Date<T>) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":26984,"byte_end":26988,"line_start":81,"line_end":81,"column_start":8,"column_end":12},"name":"from","qualname":"<Date as std::convert::From>::from","value":"fn from(chrono::DateTime<T>) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1699},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/delay.rs","byte_start":27644,"byte_end":27649,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"Delay","qualname":"::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703}],"decl_id":null,"docs":" A [Future] for asynchronously waiting.","sig":null,"attributes":[{"value":"pin(__private(PinnedDrop))","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/delay.rs","byte_start":27593,"byte_end":27632,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/delay.rs","byte_start":27644,"byte_end":27649,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"__Delay","qualname":"::delay::_::__Delay","value":"__Delay {  }","parent":null,"children":[{"krate":0,"index":1692}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/delay.rs","byte_start":27593,"byte_end":27632,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/delay.rs","byte_start":27620,"byte_end":27630,"line_start":27,"line_end":27,"column_start":28,"column_end":38},"name":"drop","qualname":"<Delay as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/delay.rs","byte_start":27830,"byte_end":27834,"line_start":38,"line_end":38,"column_start":8,"column_end":12},"name":"poll","qualname":"<Delay as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13330},"children":[],"decl_id":{"krate":2,"index":13332},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/delay.rs","byte_start":28808,"byte_end":28812,"line_start":67,"line_end":67,"column_start":8,"column_end":12},"name":"from","qualname":"<Delay as std::convert::From>::from","value":"fn from(Duration) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/delay.rs","byte_start":29308,"byte_end":29312,"line_start":82,"line_end":82,"column_start":8,"column_end":12},"name":"drop","qualname":"<Delay as delay::_::_pin_project::__private::PinnedDrop>::drop","value":"unsafe fn drop(Pin<&mut Self>)","parent":{"krate":69,"index":41},"children":[],"decl_id":{"krate":69,"index":42},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":396},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"durable","qualname":"::durable","value":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":488},{"krate":0,"index":492},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":1708},{"krate":0,"index":1710},{"krate":0,"index":1713},{"krate":0,"index":607},{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":1725}],"decl_id":null,"docs":" Durable Objects provide low-latency coordination and consistent storage for the Workers platform.\n A given namespace can support essentially unlimited Durable Objects, with each Object having\n access to a transactional, key-value storage API.","sig":null,"attributes":[{"value":"/ Durable Objects provide low-latency coordination and consistent storage for the Workers platform.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":29692,"byte_end":29793,"line_start":1,"line_end":1,"column_start":1,"column_end":102}},{"value":"/ A given namespace can support essentially unlimited Durable Objects, with each Object having","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":29794,"byte_end":29890,"line_start":2,"line_end":2,"column_start":1,"column_end":97}},{"value":"/ access to a transactional, key-value storage API.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":29891,"byte_end":29944,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":29945,"byte_end":29948,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Durable Objects consist of two components: a class that defines a template for creating Durable","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":29949,"byte_end":30048,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ Objects and a Workers script that instantiates and uses those Durable Objects.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":30049,"byte_end":30131,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":30132,"byte_end":30135,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The class and the Workers script are linked together with a binding.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":30136,"byte_end":30208,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":30209,"byte_end":30212,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [Learn more](https://developers.cloudflare.com/workers/learning/using-durable-objects) about","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":30213,"byte_end":30309,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ using Durable Objects.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":30310,"byte_end":30336,"line_start":11,"line_end":11,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":468},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":31041,"byte_end":31045,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"Stub","qualname":"::durable::Stub","value":"Stub {  }","parent":null,"children":[{"krate":0,"index":469}],"decl_id":null,"docs":" A Durable Object stub is a client object used to send requests to a remote Durable Object.\n","sig":null,"attributes":[{"value":"/ A Durable Object stub is a client object used to send requests to a remote Durable Object.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":30935,"byte_end":31029,"line_start":38,"line_end":38,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":31184,"byte_end":31202,"line_start":45,"line_end":45,"column_start":18,"column_end":36},"name":"fetch_with_request","qualname":"<Stub>::fetch_with_request","value":"async fn fetch_with_request<'_>(&'_ Self, Request) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Send an internal Request to the Durable Object to which the stub points.\n","sig":null,"attributes":[{"value":"/ Send an internal Request to the Durable Object to which the stub points.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":31090,"byte_end":31166,"line_start":44,"line_end":44,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":31543,"byte_end":31557,"line_start":52,"line_end":52,"column_start":18,"column_end":32},"name":"fetch_with_str","qualname":"<Stub>::fetch_with_str","value":"async fn fetch_with_str<'_, '_>(&'_ Self, &'_ str) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Construct a Request from a URL to the Durable Object to which the stub points.\n","sig":null,"attributes":[{"value":"/ Construct a Request from a URL to the Durable Object to which the stub points.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":31443,"byte_end":31525,"line_start":51,"line_end":51,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":477},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":32043,"byte_end":32058,"line_start":62,"line_end":62,"column_start":12,"column_end":27},"name":"ObjectNamespace","qualname":"::durable::ObjectNamespace","value":"ObjectNamespace {  }","parent":null,"children":[{"krate":0,"index":478}],"decl_id":null,"docs":" Use an ObjectNamespace to get access to Stubs for communication with a Durable Object instance.\n A given namespace can support essentially unlimited Durable Objects, with each Object having\n access to a transactional, key-value storage API.\n","sig":null,"attributes":[{"value":"/ Use an ObjectNamespace to get access to Stubs for communication with a Durable Object instance.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":31781,"byte_end":31880,"line_start":59,"line_end":59,"column_start":1,"column_end":100}},{"value":"/ A given namespace can support essentially unlimited Durable Objects, with each Object having","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":31881,"byte_end":31977,"line_start":60,"line_end":60,"column_start":1,"column_end":97}},{"value":"/ access to a transactional, key-value storage API.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":31978,"byte_end":32031,"line_start":61,"line_end":61,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":32282,"byte_end":32294,"line_start":69,"line_end":69,"column_start":12,"column_end":24},"name":"id_from_name","qualname":"<ObjectNamespace>::id_from_name","value":"fn id_from_name(&Self, &str) -> Result<ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" This method derives a unique object ID from the given name string. It will always return the\n same ID when given the same name as input.\n","sig":null,"attributes":[{"value":"/ This method derives a unique object ID from the given name string. It will always return the","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":32123,"byte_end":32219,"line_start":67,"line_end":67,"column_start":5,"column_end":101}},{"value":"/ same ID when given the same name as input.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":32224,"byte_end":32270,"line_start":68,"line_end":68,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":33123,"byte_end":33137,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"id_from_string","qualname":"<ObjectNamespace>::id_from_string","value":"fn id_from_string(&Self, &str) -> Result<ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" This method parses an ID that was previously stringified. This is useful in particular with\n IDs created using `unique_id(&self)`, as these IDs need to be stored somewhere, probably as","sig":null,"attributes":[{"value":"/ This method parses an ID that was previously stringified. This is useful in particular with","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":32555,"byte_end":32650,"line_start":79,"line_end":79,"column_start":5,"column_end":100}},{"value":"/ IDs created using `unique_id(&self)`, as these IDs need to be stored somewhere, probably as","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":32655,"byte_end":32750,"line_start":80,"line_end":80,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":32775,"byte_end":32778,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ A stringified object ID is a 64-digit hexadecimal number. However, not all 64-digit hex","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":32783,"byte_end":32874,"line_start":83,"line_end":83,"column_start":5,"column_end":96}},{"value":"/ numbers are valid IDs. This method will throw if it is passed an ID that was not originally","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":32879,"byte_end":32974,"line_start":84,"line_end":84,"column_start":5,"column_end":100}},{"value":"/ created by newUniqueId() or idFromName(). It will also throw if the ID was originally","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":32979,"byte_end":33068,"line_start":85,"line_end":85,"column_start":5,"column_end":94}},{"value":"/ created for a different namespace.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":33073,"byte_end":33111,"line_start":86,"line_end":86,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":33633,"byte_end":33642,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"unique_id","qualname":"<ObjectNamespace>::unique_id","value":"fn unique_id(&Self) -> Result<ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object ID randomly. This method will never return the same ID twice, and thus\n it is guaranteed that the object does not yet exist and has never existed at the time the\n method returns.\n","sig":null,"attributes":[{"value":"/ Creates a new object ID randomly. This method will never return the same ID twice, and thus","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":33404,"byte_end":33499,"line_start":97,"line_end":97,"column_start":5,"column_end":100}},{"value":"/ it is guaranteed that the object does not yet exist and has never existed at the time the","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":33504,"byte_end":33597,"line_start":98,"line_end":98,"column_start":5,"column_end":98}},{"value":"/ method returns.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":33602,"byte_end":33621,"line_start":99,"line_end":99,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":34488,"byte_end":34515,"line_start":119,"line_end":119,"column_start":12,"column_end":39},"name":"unique_id_with_jurisdiction","qualname":"<ObjectNamespace>::unique_id_with_jurisdiction","value":"fn unique_id_with_jurisdiction(&Self, &str) -> Result<ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" Durable Objects can be created so that they only run and store data within a specific\n jurisdiction to comply with local regulations. You must specify the jurisdiction when\n generating the Durable Object's id.","sig":null,"attributes":[{"value":"/ Durable Objects can be created so that they only run and store data within a specific","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":33888,"byte_end":33977,"line_start":110,"line_end":110,"column_start":5,"column_end":94}},{"value":"/ jurisdiction to comply with local regulations. You must specify the jurisdiction when","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":33982,"byte_end":34071,"line_start":111,"line_end":111,"column_start":5,"column_end":94}},{"value":"/ generating the Durable Object's id.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":34076,"byte_end":34115,"line_start":112,"line_end":112,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":34120,"byte_end":34123,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Jurisdiction constraints can only be used with ids created by `unique_id()` and are not","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":34128,"byte_end":34219,"line_start":114,"line_end":114,"column_start":5,"column_end":96}},{"value":"/ currently compatible with ids created by `id_from_name()`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":34224,"byte_end":34286,"line_start":115,"line_end":115,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":34291,"byte_end":34294,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ See supported jurisdictions and more documentation at:","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":34299,"byte_end":34357,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ <https://developers.cloudflare.com/workers/runtime-apis/durable-objects#restricting-objects-to-a-jurisdiction>","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":34362,"byte_end":34476,"line_start":118,"line_end":118,"column_start":5,"column_end":119}}]},{"kind":"Struct","id":{"krate":0,"index":488},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":35031,"byte_end":35039,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"ObjectId","qualname":"::durable::ObjectId","value":"ObjectId {  }","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491}],"decl_id":null,"docs":" An ObjectId is used to identify, locate, and access a Durable Object via interaction with its\n Stub.\n","sig":null,"attributes":[{"value":"/ An ObjectId is used to identify, locate, and access a Durable Object via interaction with its","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":34912,"byte_end":35009,"line_start":132,"line_end":132,"column_start":1,"column_end":98}},{"value":"/ Stub.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":35010,"byte_end":35019,"line_start":133,"line_end":133,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":35227,"byte_end":35235,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"get_stub","qualname":"<ObjectId>::get_stub","value":"fn get_stub(&Self) -> Result<Stub>","parent":null,"children":[],"decl_id":null,"docs":" Get a Stub for the Durable Object instance identified by this ObjectId.\n","sig":null,"attributes":[{"value":"/ Get a Stub for the Durable Object instance identified by this ObjectId.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":35140,"byte_end":35215,"line_start":140,"line_end":140,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":35608,"byte_end":35617,"line_start":154,"line_end":154,"column_start":8,"column_end":17},"name":"to_string","qualname":"<ObjectId as std::string::ToString>::to_string","value":"fn to_string(&Self) -> String","parent":{"krate":5,"index":6071},"children":[],"decl_id":{"krate":5,"index":6072},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":498},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":35823,"byte_end":35828,"line_start":161,"line_end":161,"column_start":12,"column_end":17},"name":"State","qualname":"::durable::State","value":"State {  }","parent":null,"children":[{"krate":0,"index":499}],"decl_id":null,"docs":" Passed from the runtime to provide access to the Durable Object's storage as well as various\n metadata about the Object.\n","sig":null,"attributes":[{"value":"/ Passed from the runtime to provide access to the Durable Object's storage as well as various","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":35684,"byte_end":35780,"line_start":159,"line_end":159,"column_start":1,"column_end":97}},{"value":"/ metadata about the Object.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":35781,"byte_end":35811,"line_start":160,"line_end":160,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":36001,"byte_end":36003,"line_start":168,"line_end":168,"column_start":12,"column_end":14},"name":"id","qualname":"<State>::id","value":"fn id(&Self) -> ObjectId","parent":null,"children":[],"decl_id":null,"docs":" The ID of this Durable Object which can be converted into a hex string using its `to_string()`\n method.\n","sig":null,"attributes":[{"value":"/ The ID of this Durable Object which can be converted into a hex string using its `to_string()`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":35875,"byte_end":35973,"line_start":166,"line_end":166,"column_start":5,"column_end":103}},{"value":"/ method.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":35978,"byte_end":35989,"line_start":167,"line_end":167,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":36407,"byte_end":36414,"line_start":177,"line_end":177,"column_start":12,"column_end":19},"name":"storage","qualname":"<State>::storage","value":"fn storage(&Self) -> Storage","parent":null,"children":[],"decl_id":null,"docs":" Contains methods for accessing persistent storage via the transactional storage API. See\n [Transactional Storage API](https://developers.cloudflare.com/workers/runtime-apis/durable-objects#transactional-storage-api) for a detailed reference.\n","sig":null,"attributes":[{"value":"/ Contains methods for accessing persistent storage via the transactional storage API. See","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":36143,"byte_end":36235,"line_start":175,"line_end":175,"column_start":5,"column_end":97}},{"value":"/ [Transactional Storage API](https://developers.cloudflare.com/workers/runtime-apis/durable-objects#transactional-storage-api) for a detailed reference.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":36240,"byte_end":36395,"line_start":176,"line_end":176,"column_start":5,"column_end":160}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":36610,"byte_end":36616,"line_start":184,"line_end":184,"column_start":12,"column_end":18},"name":"_inner","qualname":"<State>::_inner","value":"fn _inner(Self) -> ObjectState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":36710,"byte_end":36714,"line_start":190,"line_end":190,"column_start":8,"column_end":12},"name":"from","qualname":"<State as std::convert::From>::from","value":"fn from(ObjectState) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":506},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":37021,"byte_end":37028,"line_start":198,"line_end":198,"column_start":12,"column_end":19},"name":"Storage","qualname":"::durable::Storage","value":"Storage {  }","parent":null,"children":[{"krate":0,"index":507}],"decl_id":null,"docs":" Access a Durable Object's Storage API. Each method is implicitly wrapped inside a transaction,\n such that its results are atomic and isolated from all other storage operations, even when\n accessing multiple key-value pairs.\n","sig":null,"attributes":[{"value":"/ Access a Durable Object's Storage API. Each method is implicitly wrapped inside a transaction,","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":36776,"byte_end":36874,"line_start":195,"line_end":195,"column_start":1,"column_end":99}},{"value":"/ such that its results are atomic and isolated from all other storage operations, even when","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":36875,"byte_end":36969,"line_start":196,"line_end":196,"column_start":1,"column_end":95}},{"value":"/ accessing multiple key-value pairs.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":36970,"byte_end":37009,"line_start":197,"line_end":197,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":37283,"byte_end":37286,"line_start":205,"line_end":205,"column_start":18,"column_end":21},"name":"get","qualname":"<Storage>::get","value":"async fn get<T, '_, '_>(&'_ Self, &'_ str) -> /*impl Trait*/ where\nT: for<'a> Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the value associated with the given key. The type of the returned value will be\n whatever was previously written for the key, or undefined if the key does not exist.\n","sig":null,"attributes":[{"value":"/ Retrieves the value associated with the given key. The type of the returned value will be","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":37079,"byte_end":37172,"line_start":203,"line_end":203,"column_start":5,"column_end":98}},{"value":"/ whatever was previously written for the key, or undefined if the key does not exist.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":37177,"byte_end":37265,"line_start":204,"line_end":204,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":37826,"byte_end":37838,"line_start":219,"line_end":219,"column_start":18,"column_end":30},"name":"get_multiple","qualname":"<Storage>::get_multiple","value":"async fn get_multiple<'_,\nimpl Deref<Target = str>>(&'_ Self, Vec<impl Deref<Target = str>>)\n-> /*impl Trait*/ where impl Deref<Target = str>: Deref<Target = str>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the values associated with each of the provided keys.\n","sig":null,"attributes":[{"value":"/ Retrieves the values associated with each of the provided keys.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":37741,"byte_end":37808,"line_start":218,"line_end":218,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":38264,"byte_end":38267,"line_start":230,"line_end":230,"column_start":18,"column_end":21},"name":"put","qualname":"<Storage>::put","value":"async fn put<T, '_, '_>(&'_ mut Self, &'_ str, T) -> /*impl Trait*/ where\nT: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Stores the value and associates it with the given key.\n","sig":null,"attributes":[{"value":"/ Stores the value and associates it with the given key.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":38188,"byte_end":38246,"line_start":229,"line_end":229,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":38603,"byte_end":38615,"line_start":238,"line_end":238,"column_start":18,"column_end":30},"name":"put_multiple","qualname":"<Storage>::put_multiple","value":"async fn put_multiple<T, '_>(&'_ mut Self, T) -> /*impl Trait*/ where\nT: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Takes a serializable struct and stores each of its keys and values to storage.\n","sig":null,"attributes":[{"value":"/ Takes a serializable struct and stores each of its keys and values to storage.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":38503,"byte_end":38585,"line_start":237,"line_end":237,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":39105,"byte_end":39111,"line_start":250,"line_end":250,"column_start":18,"column_end":24},"name":"delete","qualname":"<Storage>::delete","value":"async fn delete<'_, '_>(&'_ mut Self, &'_ str) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Deletes the key and associated value. Returns true if the key existed or false if it didn't.\n","sig":null,"attributes":[{"value":"/ Deletes the key and associated value. Returns true if the key existed or false if it didn't.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":38991,"byte_end":39087,"line_start":249,"line_end":249,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":39582,"byte_end":39597,"line_start":262,"line_end":262,"column_start":18,"column_end":33},"name":"delete_multiple","qualname":"<Storage>::delete_multiple","value":"async fn delete_multiple<'_,\nimpl Deref<Target = str>>(&'_ mut Self, Vec<impl Deref<Target = str>>)\n-> /*impl Trait*/ where impl Deref<Target = str>: Deref<Target = str>","parent":null,"children":[],"decl_id":null,"docs":" Deletes the provided keys and their associated values. Returns a count of the number of\n key-value pairs deleted.\n","sig":null,"attributes":[{"value":"/ Deletes the provided keys and their associated values. Returns a count of the number of","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":39440,"byte_end":39531,"line_start":260,"line_end":260,"column_start":5,"column_end":96}},{"value":"/ key-value pairs deleted.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":39536,"byte_end":39564,"line_start":261,"line_end":261,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":40447,"byte_end":40457,"line_start":283,"line_end":283,"column_start":18,"column_end":28},"name":"delete_all","qualname":"<Storage>::delete_all","value":"async fn delete_all<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Deletes all keys and associated values, effectively deallocating all storage used by the\n Durable Object. In the event of a failure while the operation is still in flight, it may be\n that only a subset of the data is properly deleted.\n","sig":null,"attributes":[{"value":"/ Deletes all keys and associated values, effectively deallocating all storage used by the","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":40177,"byte_end":40269,"line_start":280,"line_end":280,"column_start":5,"column_end":97}},{"value":"/ Durable Object. In the event of a failure while the operation is still in flight, it may be","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":40274,"byte_end":40369,"line_start":281,"line_end":281,"column_start":5,"column_end":100}},{"value":"/ that only a subset of the data is properly deleted.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":40374,"byte_end":40429,"line_start":282,"line_end":282,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":41163,"byte_end":41167,"line_start":295,"line_end":295,"column_start":18,"column_end":22},"name":"list","qualname":"<Storage>::list","value":"async fn list<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns all keys and values associated with the current Durable Object in ascending\n lexicographic sorted order.","sig":null,"attributes":[{"value":"/ Returns all keys and values associated with the current Durable Object in ascending","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":40617,"byte_end":40704,"line_start":288,"line_end":288,"column_start":5,"column_end":92}},{"value":"/ lexicographic sorted order.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":40709,"byte_end":40740,"line_start":289,"line_end":289,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":40745,"byte_end":40748,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Be aware of how much data may be stored in your Durable Object before calling this version","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":40753,"byte_end":40847,"line_start":291,"line_end":291,"column_start":5,"column_end":99}},{"value":"/ of list without options, because it will all be loaded into the Durable Object's memory,","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":40852,"byte_end":40944,"line_start":292,"line_end":292,"column_start":5,"column_end":97}},{"value":"/ potentially hitting its [limit](https://developers.cloudflare.com/workers/platform/limits#durable-objects-limits).","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":40949,"byte_end":41067,"line_start":293,"line_end":293,"column_start":5,"column_end":123}},{"value":"/ If that is a concern, use the alternate `list_with_options()` method.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":41072,"byte_end":41145,"line_start":294,"line_end":294,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":41508,"byte_end":41525,"line_start":304,"line_end":304,"column_start":18,"column_end":35},"name":"list_with_options","qualname":"<Storage>::list_with_options","value":"async fn list_with_options<'_, '_>(&'_ Self, ListOptions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns keys associated with the current Durable Object according to the parameters in the\n provided options object.\n","sig":null,"attributes":[{"value":"/ Returns keys associated with the current Durable Object according to the parameters in the","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":41363,"byte_end":41457,"line_start":302,"line_end":302,"column_start":5,"column_end":99}},{"value":"/ provided options object.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":41462,"byte_end":41490,"line_start":303,"line_end":303,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1708},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":46151,"byte_end":46162,"line_start":441,"line_end":441,"column_start":12,"column_end":23},"name":"ListOptions","qualname":"::durable::ListOptions","value":"ListOptions {  }","parent":null,"children":[{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":47060,"byte_end":47063,"line_start":462,"line_end":462,"column_start":12,"column_end":15},"name":"new","qualname":"<ListOptions>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new ListOptions struct with no options set.\n","sig":null,"attributes":[{"value":"/ Create a new ListOptions struct with no options set.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":46992,"byte_end":47048,"line_start":461,"line_end":461,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":47184,"byte_end":47189,"line_start":467,"line_end":467,"column_start":12,"column_end":17},"name":"start","qualname":"<ListOptions>::start","value":"fn start(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Key at which the list results should start, inclusive.\n","sig":null,"attributes":[{"value":"/ Key at which the list results should start, inclusive.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":47114,"byte_end":47172,"line_start":466,"line_end":466,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":47348,"byte_end":47351,"line_start":473,"line_end":473,"column_start":12,"column_end":15},"name":"end","qualname":"<ListOptions>::end","value":"fn end(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Key at which the list results should end, exclusive.\n","sig":null,"attributes":[{"value":"/ Key at which the list results should end, exclusive.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":47280,"byte_end":47336,"line_start":472,"line_end":472,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":47539,"byte_end":47545,"line_start":479,"line_end":479,"column_start":12,"column_end":18},"name":"prefix","qualname":"<ListOptions>::prefix","value":"fn prefix(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restricts results to only include key-value pairs whose keys begin with the prefix.\n","sig":null,"attributes":[{"value":"/ Restricts results to only include key-value pairs whose keys begin with the prefix.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":47440,"byte_end":47527,"line_start":478,"line_end":478,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":47758,"byte_end":47765,"line_start":486,"line_end":486,"column_start":12,"column_end":19},"name":"reverse","qualname":"<ListOptions>::reverse","value":"fn reverse(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If true, return results in descending lexicographic order instead of the default ascending\n order.\n","sig":null,"attributes":[{"value":"/ If true, return results in descending lexicographic order instead of the default ascending","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":47637,"byte_end":47731,"line_start":484,"line_end":484,"column_start":5,"column_end":99}},{"value":"/ order.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":47736,"byte_end":47746,"line_start":485,"line_end":485,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":47915,"byte_end":47920,"line_start":492,"line_end":492,"column_start":12,"column_end":17},"name":"limit","qualname":"<ListOptions>::limit","value":"fn limit(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of key-value pairs to return.\n","sig":null,"attributes":[{"value":"/ Maximum number of key-value pairs to return.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":47855,"byte_end":47903,"line_start":491,"line_end":491,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":48151,"byte_end":48161,"line_start":503,"line_end":503,"column_start":8,"column_end":18},"name":"instanceof","qualname":"<ObjectNamespace as wasm_bindgen::JsCast>::instanceof","value":"fn instanceof(&JsValue) -> bool","parent":{"krate":22,"index":471},"children":[],"decl_id":{"krate":22,"index":484},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":48253,"byte_end":48270,"line_start":507,"line_end":507,"column_start":8,"column_end":25},"name":"unchecked_from_js","qualname":"<ObjectNamespace as wasm_bindgen::JsCast>::unchecked_from_js","value":"fn unchecked_from_js(JsValue) -> Self","parent":{"krate":22,"index":471},"children":[],"decl_id":{"krate":22,"index":486},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":48344,"byte_end":48365,"line_start":511,"line_end":511,"column_start":8,"column_end":29},"name":"unchecked_from_js_ref","qualname":"<ObjectNamespace as wasm_bindgen::JsCast>::unchecked_from_js_ref","value":"fn unchecked_from_js_ref(&JsValue) -> &Self","parent":{"krate":22,"index":471},"children":[],"decl_id":{"krate":22,"index":487},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":48509,"byte_end":48513,"line_start":517,"line_end":517,"column_start":8,"column_end":12},"name":"from","qualname":"<JsValue as std::convert::From>::from","value":"fn from(ObjectNamespace) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":48635,"byte_end":48641,"line_start":523,"line_end":523,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<ObjectNamespace as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &JsValue","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1725},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":49650,"byte_end":49663,"line_start":565,"line_end":565,"column_start":11,"column_end":24},"name":"DurableObject","qualname":"::durable::DurableObject","value":"DurableObject","parent":null,"children":[{"krate":0,"index":1726},{"krate":0,"index":1727}],"decl_id":null,"docs":"**Note:** Implement this trait with a standard `impl DurableObject for YourType` block, but in order to\nintegrate them with the Workers Runtime, you must also add the **`#[durable_object]`** attribute\nmacro to both the impl block and the struct type definition.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":49673,"byte_end":49676,"line_start":566,"line_end":566,"column_start":8,"column_end":11},"name":"new","qualname":"::durable::DurableObject::new","value":"fn new(State, Env) -> Self","parent":{"krate":0,"index":1725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":49723,"byte_end":49728,"line_start":567,"line_end":567,"column_start":14,"column_end":19},"name":"fetch","qualname":"::durable::DurableObject::fetch","value":"fn fetch<'life0, 'async_trait>(&'life0 mut Self, Request)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Response>> + 'async_trait>> where 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":1725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":49618,"byte_end":49639,"line_start":564,"line_end":564,"column_start":1,"column_end":22}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":49618,"byte_end":49639,"line_start":564,"line_end":564,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1730},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":50088,"byte_end":50091,"line_start":12,"line_end":12,"column_start":14,"column_end":17},"name":"Env","qualname":"::env::Env","value":"Env {  }","parent":null,"children":[{"krate":0,"index":1731}],"decl_id":null,"docs":" Env contains any bindings you have associated with the Worker when you uploaded it.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":49954,"byte_end":49969,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":49954,"byte_end":49969,"line_start":9,"line_end":9,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":50866,"byte_end":50872,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"secret","qualname":"<Env>::secret","value":"fn secret(&Self, &str) -> Result<Secret>","parent":null,"children":[],"decl_id":null,"docs":" Access Secret value bindings added to your Worker via the UI or `wrangler`:\n <https://developers.cloudflare.com/workers/cli-wrangler/commands#secret>\n","sig":null,"attributes":[{"value":"/ Access Secret value bindings added to your Worker via the UI or `wrangler`:","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":50694,"byte_end":50773,"line_start":28,"line_end":28,"column_start":5,"column_end":84}},{"value":"/ <https://developers.cloudflare.com/workers/cli-wrangler/commands#secret>","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":50778,"byte_end":50854,"line_start":29,"line_end":29,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":51118,"byte_end":51121,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"var","qualname":"<Env>::var","value":"fn var(&Self, &str) -> Result<Var>","parent":null,"children":[],"decl_id":null,"docs":" Environment variables are defined via the `[vars]` configuration in your wrangler.toml file\n and are always plaintext values.\n","sig":null,"attributes":[{"value":"/ Environment variables are defined via the `[vars]` configuration in your wrangler.toml file","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":50970,"byte_end":51065,"line_start":34,"line_end":34,"column_start":5,"column_end":100}},{"value":"/ and are always plaintext values.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":51070,"byte_end":51106,"line_start":35,"line_end":35,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":51317,"byte_end":51319,"line_start":41,"line_end":41,"column_start":12,"column_end":14},"name":"kv","qualname":"<Env>::kv","value":"fn kv(&Self, &str) -> Result<KvStore>","parent":null,"children":[],"decl_id":null,"docs":" Access a Workers KV namespace by the binding name configured in your wrangler.toml file.\n","sig":null,"attributes":[{"value":"/ Access a Workers KV namespace by the binding name configured in your wrangler.toml file.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":51213,"byte_end":51305,"line_start":40,"line_end":40,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":51544,"byte_end":51558,"line_start":46,"line_end":46,"column_start":12,"column_end":26},"name":"durable_object","qualname":"<Env>::durable_object","value":"fn durable_object(&Self, &str) -> Result<ObjectNamespace>","parent":null,"children":[],"decl_id":null,"docs":" Access a Durable Object namespace by the binding name configured in your wrangler.toml file.\n","sig":null,"attributes":[{"value":"/ Access a Durable Object namespace by the binding name configured in your wrangler.toml file.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":51436,"byte_end":51532,"line_start":45,"line_end":45,"column_start":5,"column_end":101}}]},{"kind":"Struct","id":{"krate":0,"index":660},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52039,"byte_end":52052,"line_start":64,"line_end":64,"column_start":12,"column_end":25},"name":"StringBinding","qualname":"::env::StringBinding","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52188,"byte_end":52198,"line_start":71,"line_end":71,"column_start":8,"column_end":18},"name":"instanceof","qualname":"<StringBinding as wasm_bindgen::JsCast>::instanceof","value":"fn instanceof(&JsValue) -> bool","parent":{"krate":22,"index":471},"children":[],"decl_id":{"krate":22,"index":484},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52262,"byte_end":52279,"line_start":75,"line_end":75,"column_start":8,"column_end":25},"name":"unchecked_from_js","qualname":"<StringBinding as wasm_bindgen::JsCast>::unchecked_from_js","value":"fn unchecked_from_js(JsValue) -> Self","parent":{"krate":22,"index":471},"children":[],"decl_id":{"krate":22,"index":486},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52345,"byte_end":52366,"line_start":79,"line_end":79,"column_start":8,"column_end":29},"name":"unchecked_from_js_ref","qualname":"<StringBinding as wasm_bindgen::JsCast>::unchecked_from_js_ref","value":"fn unchecked_from_js_ref(&JsValue) -> &Self","parent":{"krate":22,"index":471},"children":[],"decl_id":{"krate":22,"index":487},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52509,"byte_end":52515,"line_start":85,"line_end":85,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<StringBinding as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &wasm_bindgen::JsValue","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52655,"byte_end":52659,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"from","qualname":"<StringBinding as std::convert::From>::from","value":"fn from(JsValue) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52766,"byte_end":52770,"line_start":97,"line_end":97,"column_start":8,"column_end":12},"name":"from","qualname":"<JsValue as std::convert::From>::from","value":"fn from(StringBinding) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52865,"byte_end":52874,"line_start":103,"line_end":103,"column_start":8,"column_end":17},"name":"to_string","qualname":"<StringBinding as std::string::ToString>::to_string","value":"fn to_string(&Self) -> String","parent":{"krate":5,"index":6071},"children":[],"decl_id":{"krate":5,"index":6072},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":677},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":53026,"byte_end":53032,"line_start":109,"line_end":109,"column_start":10,"column_end":16},"name":"Secret","qualname":"::env::Secret","value":"StringBinding","parent":null,"children":[],"decl_id":null,"docs":" A string value representing a binding to a secret in a Worker.\n","sig":null,"attributes":[{"value":"/ A string value representing a binding to a secret in a Worker.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52950,"byte_end":53016,"line_start":108,"line_end":108,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":678},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":53141,"byte_end":53144,"line_start":111,"line_end":111,"column_start":10,"column_end":13},"name":"Var","qualname":"::env::Var","value":"StringBinding","parent":null,"children":[],"decl_id":null,"docs":" A string value representing a binding to an environment variable in a Worker.\n","sig":null,"attributes":[{"value":"/ A string value representing a binding to an environment variable in a Worker.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":53050,"byte_end":53131,"line_start":110,"line_end":110,"column_start":1,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1807},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53344,"byte_end":53355,"line_start":7,"line_end":7,"column_start":5,"column_end":16},"name":"BadEncoding","qualname":"::error::Error::BadEncoding","value":"Error::BadEncoding","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1809},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53361,"byte_end":53369,"line_start":8,"line_end":8,"column_start":5,"column_end":13},"name":"BodyUsed","qualname":"::error::Error::BodyUsed","value":"Error::BodyUsed","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1811},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53375,"byte_end":53379,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"Json","qualname":"::error::Error::Json","value":"Error::Json((String, u16))","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1813},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53380,"byte_end":53393,"line_start":9,"line_end":9,"column_start":10,"column_end":23},"name":"0","qualname":"::error::Error::Json::0","value":"(std::string::String, u16)","parent":{"krate":0,"index":1811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1814},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53400,"byte_end":53407,"line_start":10,"line_end":10,"column_start":5,"column_end":12},"name":"JsError","qualname":"::error::Error::JsError","value":"Error::JsError(String)","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1816},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53408,"byte_end":53414,"line_start":10,"line_end":10,"column_start":13,"column_end":19},"name":"0","qualname":"::error::Error::JsError::0","value":"std::string::String","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1817},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53421,"byte_end":53429,"line_start":11,"line_end":11,"column_start":5,"column_end":13},"name":"Internal","qualname":"::error::Error::Internal","value":"Error::Internal(JsValue)","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1819},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53430,"byte_end":53437,"line_start":11,"line_end":11,"column_start":14,"column_end":21},"name":"0","qualname":"::error::Error::Internal::0","value":"wasm_bindgen::JsValue","parent":{"krate":0,"index":1817},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1820},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53444,"byte_end":53456,"line_start":12,"line_end":12,"column_start":5,"column_end":17},"name":"BindingError","qualname":"::error::Error::BindingError","value":"Error::BindingError(String)","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1822},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53457,"byte_end":53463,"line_start":12,"line_end":12,"column_start":18,"column_end":24},"name":"0","qualname":"::error::Error::BindingError::0","value":"std::string::String","parent":{"krate":0,"index":1820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1823},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53470,"byte_end":53486,"line_start":13,"line_end":13,"column_start":5,"column_end":21},"name":"RouteInsertError","qualname":"::error::Error::RouteInsertError","value":"Error::RouteInsertError(matchit::InsertError)","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1825},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53487,"byte_end":53507,"line_start":13,"line_end":13,"column_start":22,"column_end":42},"name":"0","qualname":"::error::Error::RouteInsertError::0","value":"matchit::InsertError","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1826},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53514,"byte_end":53530,"line_start":14,"line_end":14,"column_start":5,"column_end":21},"name":"RouteNoDataError","qualname":"::error::Error::RouteNoDataError","value":"Error::RouteNoDataError","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1828},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53536,"byte_end":53545,"line_start":15,"line_end":15,"column_start":5,"column_end":14},"name":"RustError","qualname":"::error::Error::RustError","value":"Error::RustError(String)","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1830},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53546,"byte_end":53552,"line_start":15,"line_end":15,"column_start":15,"column_end":21},"name":"0","qualname":"::error::Error::RustError::0","value":"std::string::String","parent":{"krate":0,"index":1828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1831},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53559,"byte_end":53573,"line_start":16,"line_end":16,"column_start":5,"column_end":19},"name":"SerdeJsonError","qualname":"::error::Error::SerdeJsonError","value":"Error::SerdeJsonError(serde_json::Error)","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1833},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53574,"byte_end":53591,"line_start":16,"line_end":16,"column_start":20,"column_end":37},"name":"0","qualname":"::error::Error::SerdeJsonError::0","value":"serde_json::Error","parent":{"krate":0,"index":1831},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1806},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53332,"byte_end":53337,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"enum Error {\n    BadEncoding,\n    BodyUsed,\n    Json((String, u16)),\n    JsError(String),\n    Internal(JsValue),\n    BindingError(String),\n    RouteInsertError(matchit::InsertError),\n    RouteNoDataError,\n    RustError(String),\n    SerdeJsonError(serde_json::Error),\n}","parent":null,"children":[{"krate":0,"index":1807},{"krate":0,"index":1809},{"krate":0,"index":1811},{"krate":0,"index":1814},{"krate":0,"index":1817},{"krate":0,"index":1820},{"krate":0,"index":1823},{"krate":0,"index":1826},{"krate":0,"index":1828},{"krate":0,"index":1831}],"decl_id":null,"docs":" All possible Error variants that might be encountered while working with a Worker.\n","sig":null,"attributes":[{"value":"/ All possible Error variants that might be encountered while working with a Worker.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53201,"byte_end":53287,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"non_exhaustive","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53305,"byte_end":53322,"line_start":5,"line_end":5,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53646,"byte_end":53650,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(worker_kv::KvError) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53795,"byte_end":53799,"line_start":27,"line_end":27,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(url::ParseError) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53920,"byte_end":53923,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut std::fmt::Formatter) -> std::fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":54851,"byte_end":54855,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(JsValue) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":55150,"byte_end":55154,"line_start":65,"line_end":65,"column_start":8,"column_end":12},"name":"from","qualname":"<JsValue as std::convert::From>::from","value":"fn from(Error) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":55261,"byte_end":55265,"line_start":71,"line_end":71,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(&str) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":55371,"byte_end":55375,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(String) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":55485,"byte_end":55489,"line_start":83,"line_end":83,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(matchit::InsertError) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":55617,"byte_end":55621,"line_start":89,"line_end":89,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(serde_json::Error) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":745},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":56110,"byte_end":56115,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"Field","qualname":"::formdata::FormEntry::Field","value":"FormEntry::Field(String)","parent":{"krate":0,"index":744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":747},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":56116,"byte_end":56122,"line_start":18,"line_end":18,"column_start":11,"column_end":17},"name":"0","qualname":"::formdata::FormEntry::Field::0","value":"std::string::String","parent":{"krate":0,"index":745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":748},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":56129,"byte_end":56133,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"File","qualname":"::formdata::FormEntry::File","value":"FormEntry::File(File)","parent":{"krate":0,"index":744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":750},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":56134,"byte_end":56138,"line_start":19,"line_end":19,"column_start":10,"column_end":14},"name":"0","qualname":"::formdata::FormEntry::File::0","value":"formdata::File","parent":{"krate":0,"index":748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":744},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":56094,"byte_end":56103,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"name":"FormEntry","qualname":"::formdata::FormEntry","value":"enum FormEntry { Field(String), File(File), }","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":748}],"decl_id":null,"docs":" Representing the options any FormData value can be, a field or a file.\n","sig":null,"attributes":[{"value":"/ Representing the options any FormData value can be, a field or a file.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":56010,"byte_end":56084,"line_start":16,"line_end":16,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1836},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":56339,"byte_end":56347,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"FormData","qualname":"::formdata::FormData","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) representation of the\n request body, providing access to form encoded fields and files.\n","sig":null,"attributes":[{"value":"/ A [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) representation of the","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":56144,"byte_end":56241,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ request body, providing access to form encoded fields and files.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":56242,"byte_end":56310,"line_start":23,"line_end":23,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":56391,"byte_end":56394,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<FormData>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":56561,"byte_end":56564,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"get","qualname":"<FormData>::get","value":"fn get(&Self, &str) -> Option<FormEntry>","parent":null,"children":[],"decl_id":null,"docs":" Returns the first value associated with a given key from within a `FormData` object.\n","sig":null,"attributes":[{"value":"/ Returns the first value associated with a given key from within a `FormData` object.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":56461,"byte_end":56549,"line_start":32,"line_end":32,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":57068,"byte_end":57075,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_all","qualname":"<FormData>::get_all","value":"fn get_all(&Self, &str) -> Option<Vec<FormEntry>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a vec of all the values associated with a given key from within a `FormData` object.\n","sig":null,"attributes":[{"value":"/ Returns a vec of all the values associated with a given key from within a `FormData` object.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":56960,"byte_end":57056,"line_start":50,"line_end":50,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":57821,"byte_end":57824,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"has","qualname":"<FormData>::has","value":"fn has(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns a boolean stating whether a `FormData` object contains a certain key.\n","sig":null,"attributes":[{"value":"/ Returns a boolean stating whether a `FormData` object contains a certain key.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":57728,"byte_end":57809,"line_start":75,"line_end":75,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":58028,"byte_end":58034,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"append","qualname":"<FormData>::append","value":"fn append(&mut Self, &str, &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends a new value onto an existing key inside a `FormData` object, or adds the key if it\n does not already exist.\n","sig":null,"attributes":[{"value":"/ Appends a new value onto an existing key inside a `FormData` object, or adds the key if it","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":57890,"byte_end":57984,"line_start":80,"line_end":80,"column_start":5,"column_end":99}},{"value":"/ does not already exist.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":57989,"byte_end":58016,"line_start":81,"line_end":81,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":58303,"byte_end":58306,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"set","qualname":"<FormData>::set","value":"fn set(&mut Self, &str, &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets a new value for an existing key inside a `FormData` object, or adds the key/value if it\n does not already exist.\n","sig":null,"attributes":[{"value":"/ Sets a new value for an existing key inside a `FormData` object, or adds the key/value if it","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":58163,"byte_end":58259,"line_start":86,"line_end":86,"column_start":5,"column_end":101}},{"value":"/ does not already exist.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":58264,"byte_end":58291,"line_start":87,"line_end":87,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":58498,"byte_end":58504,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"delete","qualname":"<FormData>::delete","value":"fn delete(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Deletes a key/value pair from a `FormData` object.\n","sig":null,"attributes":[{"value":"/ Deletes a key/value pair from a `FormData` object.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":58432,"byte_end":58486,"line_start":92,"line_end":92,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":58608,"byte_end":58612,"line_start":99,"line_end":99,"column_start":8,"column_end":12},"name":"from","qualname":"<FormData as std::convert::From>::from","value":"fn from(JsValue) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":58752,"byte_end":58756,"line_start":105,"line_end":105,"column_start":8,"column_end":12},"name":"from","qualname":"<FormData as std::convert::From>::from","value":"fn from(HashMap<&dyn AsRef<&str>, &dyn AsRef<&str>>) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":764},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":59169,"byte_end":59173,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"File","qualname":"::formdata::File","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [File](https://developer.mozilla.org/en-US/docs/Web/API/File) representation used with\n `FormData`.\n","sig":null,"attributes":[{"value":"/ A [File](https://developer.mozilla.org/en-US/docs/Web/API/File) representation used with","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":59049,"byte_end":59141,"line_start":115,"line_end":115,"column_start":1,"column_end":93}},{"value":"/ `FormData`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":59142,"byte_end":59157,"line_start":116,"line_end":116,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":59259,"byte_end":59262,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"new","qualname":"<File>::new","value":"fn new<impl AsRef<[u8]>>(impl AsRef<[u8]>, &str) -> Self where\nimpl AsRef<[u8]>: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new named file from a buffer.\n","sig":null,"attributes":[{"value":"/ Construct a new named file from a buffer.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":59202,"byte_end":59247,"line_start":120,"line_end":120,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":59795,"byte_end":59799,"line_start":135,"line_end":135,"column_start":12,"column_end":16},"name":"name","qualname":"<File>::name","value":"fn name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the file name.\n","sig":null,"attributes":[{"value":"/ Get the file name.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":59761,"byte_end":59783,"line_start":134,"line_end":134,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":59886,"byte_end":59890,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"size","qualname":"<File>::size","value":"fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the file size.\n","sig":null,"attributes":[{"value":"/ Get the file size.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":59852,"byte_end":59874,"line_start":139,"line_end":139,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":59985,"byte_end":59990,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"type_","qualname":"<File>::type_","value":"fn type_(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the file type.\n","sig":null,"attributes":[{"value":"/ Get the file type.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":59951,"byte_end":59973,"line_start":144,"line_end":144,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":60132,"byte_end":60137,"line_start":150,"line_end":150,"column_start":18,"column_end":23},"name":"bytes","qualname":"<File>::bytes","value":"async fn bytes<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Read the file from an internal buffer and get the resulting bytes.\n","sig":null,"attributes":[{"value":"/ Read the file from an internal buffer and get the resulting bytes.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":60044,"byte_end":60114,"line_start":149,"line_end":149,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":60591,"byte_end":60604,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"last_modified","qualname":"<File>::last_modified","value":"fn last_modified(&Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the last_modified metadata property of the file.\n","sig":null,"attributes":[{"value":"/ Get the last_modified metadata property of the file.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":60523,"byte_end":60579,"line_start":162,"line_end":162,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":60732,"byte_end":60736,"line_start":169,"line_end":169,"column_start":8,"column_end":12},"name":"from","qualname":"<File as std::convert::From>::from","value":"fn from(EdgeFile) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":816},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/global.rs","byte_start":61225,"byte_end":61228,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Url","qualname":"::global::Fetch::Url","value":"Fetch::Url(url::Url)","parent":{"krate":0,"index":815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":818},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/global.rs","byte_start":61229,"byte_end":61237,"line_start":15,"line_end":15,"column_start":9,"column_end":17},"name":"0","qualname":"::global::Fetch::Url::0","value":"url::Url","parent":{"krate":0,"index":816},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":819},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/global.rs","byte_start":61244,"byte_end":61251,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"name":"Request","qualname":"::global::Fetch::Request","value":"Fetch::Request(WorkerRequest)","parent":{"krate":0,"index":815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":821},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/global.rs","byte_start":61252,"byte_end":61265,"line_start":16,"line_end":16,"column_start":13,"column_end":26},"name":"0","qualname":"::global::Fetch::Request::0","value":"request::Request","parent":{"krate":0,"index":819},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":815},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/global.rs","byte_start":61213,"byte_end":61218,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Fetch","qualname":"::global::Fetch","value":"enum Fetch { Url(url::Url), Request(WorkerRequest), }","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":819}],"decl_id":null,"docs":" Construct a Fetch call from a URL string or a Request object. Call its `send` method to execute\n the request.\n","sig":null,"attributes":[{"value":"/ Construct a Fetch call from a URL string or a Request object. Call its `send` method to execute","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/global.rs","byte_start":61087,"byte_end":61186,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ the request.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/global.rs","byte_start":61187,"byte_end":61203,"line_start":13,"line_end":13,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/global.rs","byte_start":61354,"byte_end":61358,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"name":"send","qualname":"<Fetch>::send","value":"async fn send<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Execute a Fetch call and receive a Response.\n","sig":null,"attributes":[{"value":"/ Execute a Fetch call and receive a Response.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/global.rs","byte_start":61288,"byte_end":61336,"line_start":20,"line_end":20,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/global.rs","byte_start":61647,"byte_end":61663,"line_start":29,"line_end":29,"column_start":18,"column_end":34},"name":"send_with_signal","qualname":"<Fetch>::send_with_signal","value":"async fn send_with_signal<'_, '_>(&'_ Self, &'_ AbortSignal) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Execute a Fetch call and receive a Response.\n","sig":null,"attributes":[{"value":"/ Execute a Fetch call and receive a Response.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/global.rs","byte_start":61581,"byte_end":61629,"line_start":28,"line_end":28,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":878},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":63284,"byte_end":63291,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Headers","qualname":"::headers::Headers","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers) representation used in\n Request and Response objects.\n","sig":null,"attributes":[{"value":"/ A [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers) representation used in","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":63142,"byte_end":63238,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ Request and Response objects.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":63239,"byte_end":63272,"line_start":15,"line_end":15,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":880},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":63292,"byte_end":63307,"line_start":16,"line_end":16,"column_start":20,"column_end":35},"name":"0","qualname":"::headers::Headers::0","value":"worker_sys::Headers","parent":{"krate":0,"index":878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":63353,"byte_end":63356,"line_start":19,"line_end":19,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Headers as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut std::fmt::Formatter) -> std::fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":63664,"byte_end":63667,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<Headers>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Headers` struct.\n","sig":null,"attributes":[{"value":"/ Construct a new `Headers` struct.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":63615,"byte_end":63652,"line_start":29,"line_end":29,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":63884,"byte_end":63887,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"get","qualname":"<Headers>::get","value":"fn get(&Self, &str) -> Result<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Returns all the values of a header within a `Headers` object with a given name.\n Returns an error if the name is invalid (e.g. contains spaces)\n","sig":null,"attributes":[{"value":"/ Returns all the values of a header within a `Headers` object with a given name.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":63718,"byte_end":63801,"line_start":34,"line_end":34,"column_start":5,"column_end":88}},{"value":"/ Returns an error if the name is invalid (e.g. contains spaces)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":63806,"byte_end":63872,"line_start":35,"line_end":35,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":64158,"byte_end":64161,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"has","qualname":"<Headers>::has","value":"fn has(&Self, &str) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns a boolean stating whether a `Headers` object contains a certain header.\n Returns an error if the name is invalid (e.g. contains spaces)\n","sig":null,"attributes":[{"value":"/ Returns a boolean stating whether a `Headers` object contains a certain header.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":63992,"byte_end":64075,"line_start":40,"line_end":40,"column_start":5,"column_end":88}},{"value":"/ Returns an error if the name is invalid (e.g. contains spaces)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":64080,"byte_end":64146,"line_start":41,"line_end":41,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":64334,"byte_end":64340,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"append","qualname":"<Headers>::append","value":"fn append(&mut Self, &str, &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Returns an error if the name is invalid (e.g. contains spaces)\n","sig":null,"attributes":[{"value":"/ Returns an error if the name is invalid (e.g. contains spaces)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":64256,"byte_end":64322,"line_start":46,"line_end":46,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":64662,"byte_end":64665,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"set","qualname":"<Headers>::set","value":"fn set(&mut Self, &str, &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets a new value for an existing header inside a `Headers` object, or adds the header if it does not already exist.\n Returns an error if the name is invalid (e.g. contains spaces)\n","sig":null,"attributes":[{"value":"/ Sets a new value for an existing header inside a `Headers` object, or adds the header if it does not already exist.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":64460,"byte_end":64579,"line_start":51,"line_end":51,"column_start":5,"column_end":124}},{"value":"/ Returns an error if the name is invalid (e.g. contains spaces)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":64584,"byte_end":64650,"line_start":52,"line_end":52,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":64999,"byte_end":65005,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"delete","qualname":"<Headers>::delete","value":"fn delete(&mut Self, &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Deletes a header from a `Headers` object.\n Returns an error if the name is invalid (e.g. contains spaces)\n or if the JS Headers objects's guard is immutable (e.g. for an incoming request)\n","sig":null,"attributes":[{"value":"/ Deletes a header from a `Headers` object.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":64782,"byte_end":64827,"line_start":57,"line_end":57,"column_start":5,"column_end":50}},{"value":"/ Returns an error if the name is invalid (e.g. contains spaces)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":64832,"byte_end":64898,"line_start":58,"line_end":58,"column_start":5,"column_end":71}},{"value":"/ or if the JS Headers objects's guard is immutable (e.g. for an incoming request)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":64903,"byte_end":64987,"line_start":59,"line_end":59,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":65209,"byte_end":65216,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"entries","qualname":"<Headers>::entries","value":"fn entries(&Self) -> HeaderIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator allowing to go through all key/value pairs contained in this object.\n","sig":null,"attributes":[{"value":"/ Returns an iterator allowing to go through all key/value pairs contained in this object.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":65105,"byte_end":65197,"line_start":64,"line_end":64,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":65958,"byte_end":65962,"line_start":79,"line_end":79,"column_start":12,"column_end":16},"name":"keys","qualname":"<Headers>::keys","value":"fn keys(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator allowing you to go through all keys of the key/value pairs contained in\n this object.\n","sig":null,"attributes":[{"value":"/ Returns an iterator allowing you to go through all keys of the key/value pairs contained in","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":65830,"byte_end":65925,"line_start":77,"line_end":77,"column_start":5,"column_end":100}},{"value":"/ this object.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":65930,"byte_end":65946,"line_start":78,"line_end":78,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":66481,"byte_end":66487,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"values","qualname":"<Headers>::values","value":"fn values(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator allowing you to go through all values of the key/value pairs contained\n in this object.\n","sig":null,"attributes":[{"value":"/ Returns an iterator allowing you to go through all values of the key/value pairs contained","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":66351,"byte_end":66445,"line_start":89,"line_end":89,"column_start":5,"column_end":99}},{"value":"/ in this object.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":66450,"byte_end":66469,"line_start":90,"line_end":90,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":66916,"byte_end":66923,"line_start":103,"line_end":103,"column_start":8,"column_end":15},"name":"default","qualname":"<Headers as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":67344,"byte_end":67353,"line_start":117,"line_end":117,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'_ Headers as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":7991},"children":[],"decl_id":{"krate":2,"index":7994},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":67474,"byte_end":67483,"line_start":123,"line_end":123,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<Headers as std::iter::FromIterator>::from_iter","value":"fn from_iter<U>(U) -> Self where U: IntoIterator<Item = (T, T)>","parent":{"krate":2,"index":7987},"children":[],"decl_id":{"krate":2,"index":7989},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":67800,"byte_end":67809,"line_start":133,"line_end":133,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<Headers as std::iter::FromIterator>::from_iter","value":"fn from_iter<U>(U) -> Self where U: IntoIterator<Item = &'a (T, T)>","parent":{"krate":2,"index":7987},"children":[],"decl_id":{"krate":2,"index":7989},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":68101,"byte_end":68107,"line_start":143,"line_end":143,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Headers as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &JsValue","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":68197,"byte_end":68201,"line_start":149,"line_end":149,"column_start":8,"column_end":12},"name":"from","qualname":"<Headers as std::convert::From>::from","value":"fn from(&HeaderMap) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":68529,"byte_end":68533,"line_start":161,"line_end":161,"column_start":8,"column_end":12},"name":"from","qualname":"<Headers as std::convert::From>::from","value":"fn from(HeaderMap) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":68634,"byte_end":68638,"line_start":167,"line_end":167,"column_start":8,"column_end":12},"name":"from","qualname":"<HeaderMap as std::convert::From>::from","value":"fn from(&Headers) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":68987,"byte_end":68991,"line_start":181,"line_end":181,"column_start":8,"column_end":12},"name":"from","qualname":"<HeaderMap as std::convert::From>::from","value":"fn from(Headers) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":69087,"byte_end":69092,"line_start":187,"line_end":187,"column_start":8,"column_end":13},"name":"clone","qualname":"<Headers as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1842},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":69431,"byte_end":69435,"line_start":5,"line_end":5,"column_start":5,"column_end":9},"name":"Head","qualname":"::http::Method::Head","value":"Method::Head","parent":{"krate":0,"index":1841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1845},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":69445,"byte_end":69448,"line_start":6,"line_end":6,"column_start":5,"column_end":8},"name":"Get","qualname":"::http::Method::Get","value":"Method::Get","parent":{"krate":0,"index":1841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1847},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":69454,"byte_end":69458,"line_start":7,"line_end":7,"column_start":5,"column_end":9},"name":"Post","qualname":"::http::Method::Post","value":"Method::Post","parent":{"krate":0,"index":1841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1849},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":69464,"byte_end":69467,"line_start":8,"line_end":8,"column_start":5,"column_end":8},"name":"Put","qualname":"::http::Method::Put","value":"Method::Put","parent":{"krate":0,"index":1841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1851},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":69473,"byte_end":69478,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"Patch","qualname":"::http::Method::Patch","value":"Method::Patch","parent":{"krate":0,"index":1841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1853},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":69484,"byte_end":69490,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Delete","qualname":"::http::Method::Delete","value":"Method::Delete","parent":{"krate":0,"index":1841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1855},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":69496,"byte_end":69503,"line_start":11,"line_end":11,"column_start":5,"column_end":12},"name":"Options","qualname":"::http::Method::Options","value":"Method::Options","parent":{"krate":0,"index":1841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1857},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":69509,"byte_end":69516,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"Connect","qualname":"::http::Method::Connect","value":"Method::Connect","parent":{"krate":0,"index":1841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1859},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":69522,"byte_end":69527,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Trace","qualname":"::http::Method::Trace","value":"Method::Trace","parent":{"krate":0,"index":1841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1841},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":69418,"byte_end":69424,"line_start":4,"line_end":4,"column_start":10,"column_end":16},"name":"Method","qualname":"::http::Method","value":"enum Method {\n    Head = ,\n    Get,\n    Post,\n    Put,\n    Patch,\n    Delete,\n    Options,\n    Connect,\n    Trace,\n}","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":1847},{"krate":0,"index":1849},{"krate":0,"index":1851},{"krate":0,"index":1853},{"krate":0,"index":1855},{"krate":0,"index":1857},{"krate":0,"index":1859}],"decl_id":null,"docs":" A [`Method`](https://developer.mozilla.org/en-US/docs/Web/API/Request/method) representation\n used on Request objects.\n","sig":null,"attributes":[{"value":"/ A [`Method`](https://developer.mozilla.org/en-US/docs/Web/API/Request/method) representation","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":69238,"byte_end":69334,"line_start":1,"line_end":1,"column_start":1,"column_end":97}},{"value":"/ used on Request objects.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":69335,"byte_end":69363,"line_start":2,"line_end":2,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":69557,"byte_end":69560,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"all","qualname":"<Method>::all","value":"fn all() -> Vec<Method>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":69893,"byte_end":69897,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"from","qualname":"<Method as std::convert::From>::from","value":"fn from(String) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":70360,"byte_end":70364,"line_start":49,"line_end":49,"column_start":8,"column_end":12},"name":"from","qualname":"<String as std::convert::From>::from","value":"fn from(Method) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":70466,"byte_end":70472,"line_start":55,"line_end":55,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Method as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &'static str","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":70912,"byte_end":70921,"line_start":71,"line_end":71,"column_start":8,"column_end":17},"name":"to_string","qualname":"<Method as std::string::ToString>::to_string","value":"fn to_string(&Self) -> String","parent":{"krate":5,"index":6071},"children":[],"decl_id":{"krate":5,"index":6072},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":71014,"byte_end":71021,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"default","qualname":"<Method as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1874},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":71621,"byte_end":71628,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"Request","qualname":"::request::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881}],"decl_id":null,"docs":" A [Request](https://developer.mozilla.org/en-US/docs/Web/API/Request) representation for\n handling incoming and creating outbound HTTP requests.\n","sig":null,"attributes":[{"value":"/ A [Request](https://developer.mozilla.org/en-US/docs/Web/API/Request) representation for","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":71441,"byte_end":71533,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/ handling incoming and creating outbound HTTP requests.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":71534,"byte_end":71592,"line_start":15,"line_end":15,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":71823,"byte_end":71827,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"from","qualname":"<Request as std::convert::From>::from","value":"fn from(EdgeRequest) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":72492,"byte_end":72500,"line_start":51,"line_end":51,"column_start":8,"column_end":16},"name":"try_from","qualname":"<EdgeRequest as std::convert::TryFrom>::try_from","value":"fn try_from(Request) -> Result<Self>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":72663,"byte_end":72671,"line_start":58,"line_end":58,"column_start":8,"column_end":16},"name":"try_from","qualname":"<EdgeRequest as std::convert::TryFrom>::try_from","value":"fn try_from(&Request) -> Result<Self>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":72844,"byte_end":72847,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Request>::new","value":"fn new(&str, Method) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Request` with an HTTP Method.\n","sig":null,"attributes":[{"value":"/ Construct a new `Request` with an HTTP Method.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":72782,"byte_end":72832,"line_start":64,"line_end":64,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":73450,"byte_end":73463,"line_start":81,"line_end":81,"column_start":12,"column_end":25},"name":"new_with_init","qualname":"<Request>::new_with_init","value":"fn new_with_init(&str, &RequestInit) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Request` with a `RequestInit` configuration.\n","sig":null,"attributes":[{"value":"/ Construct a new `Request` with a `RequestInit` configuration.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":73373,"byte_end":73438,"line_start":80,"line_end":80,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":74021,"byte_end":74025,"line_start":97,"line_end":97,"column_start":18,"column_end":22},"name":"json","qualname":"<Request>::json","value":"async fn json<B, '_>(&'_ mut Self) -> /*impl Trait*/ where B: DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" Access this request's body encoded as JSON.\n","sig":null,"attributes":[{"value":"/ Access this request's body encoded as JSON.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":73956,"byte_end":74003,"line_start":96,"line_end":96,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":74644,"byte_end":74648,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"text","qualname":"<Request>::text","value":"async fn text<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Access this request's body as plaintext.\n","sig":null,"attributes":[{"value":"/ Access this request's body as plaintext.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":74582,"byte_end":74626,"line_start":114,"line_end":114,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":75233,"byte_end":75238,"line_start":133,"line_end":133,"column_start":18,"column_end":23},"name":"bytes","qualname":"<Request>::bytes","value":"async fn bytes<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Access this request's body as raw bytes.\n","sig":null,"attributes":[{"value":"/ Access this request's body as raw bytes.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":75171,"byte_end":75215,"line_start":132,"line_end":132,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":75896,"byte_end":75905,"line_start":151,"line_end":151,"column_start":18,"column_end":27},"name":"form_data","qualname":"<Request>::form_data","value":"async fn form_data<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Access this request's body as a form-encoded payload and pull out fields and files.\n","sig":null,"attributes":[{"value":"/ Access this request's body as a form-encoded payload and pull out fields and files.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":75791,"byte_end":75878,"line_start":150,"line_end":150,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":76517,"byte_end":76523,"line_start":169,"line_end":169,"column_start":12,"column_end":18},"name":"stream","qualname":"<Request>::stream","value":"fn stream(&mut Self) -> Result<ByteStream>","parent":null,"children":[],"decl_id":null,"docs":" Access this request's body as a [`Stream`](futures::stream::Stream) of bytes.\n","sig":null,"attributes":[{"value":"/ Access this request's body as a [`Stream`](futures::stream::Stream) of bytes.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":76424,"byte_end":76505,"line_start":168,"line_end":168,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":77048,"byte_end":77055,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"headers","qualname":"<Request>::headers","value":"fn headers(&Self) -> &Headers","parent":null,"children":[],"decl_id":null,"docs":" Get the `Headers` for this request.\n","sig":null,"attributes":[{"value":"/ Get the `Headers` for this request.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":76997,"byte_end":77036,"line_start":187,"line_end":187,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":77273,"byte_end":77284,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"headers_mut","qualname":"<Request>::headers_mut","value":"fn headers_mut(&mut Self) -> Result<&mut Headers>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this request's `Headers`.\n **Note:** they can only be modified if the request was created from scratch or cloned.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this request's `Headers`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":77110,"byte_end":77166,"line_start":192,"line_end":192,"column_start":5,"column_end":61}},{"value":"/ **Note:** they can only be modified if the request was created from scratch or cloned.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":77171,"byte_end":77261,"line_start":193,"line_end":193,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":77614,"byte_end":77616,"line_start":204,"line_end":204,"column_start":12,"column_end":14},"name":"cf","qualname":"<Request>::cf","value":"fn cf(&Self) -> &Cf","parent":null,"children":[],"decl_id":null,"docs":" Access this request's Cloudflare-specific properties.\n","sig":null,"attributes":[{"value":"/ Access this request's Cloudflare-specific properties.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":77545,"byte_end":77602,"line_start":203,"line_end":203,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":77724,"byte_end":77730,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"method","qualname":"<Request>::method","value":"fn method(&Self) -> Method","parent":null,"children":[],"decl_id":null,"docs":" The HTTP Method associated with this `Request`.\n","sig":null,"attributes":[{"value":"/ The HTTP Method associated with this `Request`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":77661,"byte_end":77712,"line_start":208,"line_end":208,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":77836,"byte_end":77840,"line_start":214,"line_end":214,"column_start":12,"column_end":16},"name":"path","qualname":"<Request>::path","value":"fn path(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The URL Path of this `Request`.\n","sig":null,"attributes":[{"value":"/ The URL Path of this `Request`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":77789,"byte_end":77824,"line_start":213,"line_end":213,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":78055,"byte_end":78063,"line_start":220,"line_end":220,"column_start":12,"column_end":20},"name":"path_mut","qualname":"<Request>::path_mut","value":"fn path_mut(&mut Self) -> Result<&mut String>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this request's path.\n **Note:** they can only be modified if the request was created from scratch or cloned.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this request's path.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":77897,"byte_end":77948,"line_start":218,"line_end":218,"column_start":5,"column_end":56}},{"value":"/ **Note:** they can only be modified if the request was created from scratch or cloned.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":77953,"byte_end":78043,"line_start":219,"line_end":219,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":78368,"byte_end":78371,"line_start":230,"line_end":230,"column_start":12,"column_end":15},"name":"url","qualname":"<Request>::url","value":"fn url(&Self) -> Result<Url>","parent":null,"children":[],"decl_id":null,"docs":" The parsed [`url::Url`] of this `Request`.\n","sig":null,"attributes":[{"value":"/ The parsed [`url::Url`] of this `Request`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":78310,"byte_end":78356,"line_start":229,"line_end":229,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":78617,"byte_end":78622,"line_start":237,"line_end":237,"column_start":12,"column_end":17},"name":"clone","qualname":"<Request>::clone","value":"fn clone(&Self) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":78565,"byte_end":78605,"line_start":236,"line_end":236,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":78782,"byte_end":78787,"line_start":244,"line_end":244,"column_start":12,"column_end":17},"name":"inner","qualname":"<Request>::inner","value":"fn inner(&Self) -> &EdgeRequest","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":80510,"byte_end":80521,"line_start":10,"line_end":10,"column_start":12,"column_end":23},"name":"RequestInit","qualname":"::request_init::RequestInit","value":"RequestInit { body, headers, cf, method, redirect }","parent":null,"children":[{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102}],"decl_id":null,"docs":" Optional options struct that contains settings to apply to the `Request`.\n","sig":null,"attributes":[{"value":"/ Optional options struct that contains settings to apply to the `Request`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":80421,"byte_end":80498,"line_start":9,"line_end":9,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1098},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":80628,"byte_end":80632,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"name":"body","qualname":"::request_init::RequestInit::body","value":"std::option::Option<wasm_bindgen::JsValue>","parent":{"krate":0,"index":1097},"children":[],"decl_id":null,"docs":" Currently requires a manual conversion from your data into a [`wasm_bindgen::JsValue`].\n","sig":null,"attributes":[{"value":"/ Currently requires a manual conversion from your data into a [`wasm_bindgen::JsValue`].","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":80528,"byte_end":80619,"line_start":11,"line_end":11,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":80715,"byte_end":80722,"line_start":14,"line_end":14,"column_start":9,"column_end":16},"name":"headers","qualname":"::request_init::RequestInit::headers","value":"headers::Headers","parent":{"krate":0,"index":1097},"children":[],"decl_id":null,"docs":" Headers associated with the outbound `Request`.\n","sig":null,"attributes":[{"value":"/ Headers associated with the outbound `Request`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":80655,"byte_end":80706,"line_start":13,"line_end":13,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":80879,"byte_end":80881,"line_start":17,"line_end":17,"column_start":9,"column_end":11},"name":"cf","qualname":"::request_init::RequestInit::cf","value":"request_init::CfProperties","parent":{"krate":0,"index":1097},"children":[],"decl_id":null,"docs":" Cloudflare-specific properties that can be set on the `Request` that control how Cloudflare’s\n edge handles the request.\n","sig":null,"attributes":[{"value":"/ Cloudflare-specific properties that can be set on the `Request` that control how Cloudflare’s","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":80737,"byte_end":80836,"line_start":15,"line_end":15,"column_start":5,"column_end":102}},{"value":"/ edge handles the request.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":80841,"byte_end":80870,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":80954,"byte_end":80960,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"name":"method","qualname":"::request_init::RequestInit::method","value":"http::Method","parent":{"krate":0,"index":1097},"children":[],"decl_id":null,"docs":" The HTTP Method used for this `Request`.\n","sig":null,"attributes":[{"value":"/ The HTTP Method used for this `Request`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":80901,"byte_end":80945,"line_start":18,"line_end":18,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":81200,"byte_end":81208,"line_start":23,"line_end":23,"column_start":9,"column_end":17},"name":"redirect","qualname":"::request_init::RequestInit::redirect","value":"request_init::RequestRedirect","parent":{"krate":0,"index":1097},"children":[],"decl_id":null,"docs":" The redirect mode to use: follow, error, or manual. The default for a new Request object is\n follow. Note, however, that the incoming Request property of a FetchEvent will have redirect\n mode manual.\n","sig":null,"attributes":[{"value":"/ The redirect mode to use: follow, error, or manual. The default for a new Request object is","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":80974,"byte_end":81069,"line_start":20,"line_end":20,"column_start":5,"column_end":100}},{"value":"/ follow. Note, however, that the incoming Request property of a FetchEvent will have redirect","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":81074,"byte_end":81170,"line_start":21,"line_end":21,"column_start":5,"column_end":101}},{"value":"/ mode manual.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":81175,"byte_end":81191,"line_start":22,"line_end":22,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":81260,"byte_end":81263,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<RequestInit>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":81321,"byte_end":81333,"line_start":31,"line_end":31,"column_start":12,"column_end":24},"name":"with_headers","qualname":"<RequestInit>::with_headers","value":"fn with_headers(&mut Self, Headers) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":81441,"byte_end":81452,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"with_method","qualname":"<RequestInit>::with_method","value":"fn with_method(&mut Self, Method) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":81556,"byte_end":81569,"line_start":41,"line_end":41,"column_start":12,"column_end":25},"name":"with_redirect","qualname":"<RequestInit>::with_redirect","value":"fn with_redirect(&mut Self, RequestRedirect) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":81688,"byte_end":81697,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"with_body","qualname":"<RequestInit>::with_body","value":"fn with_body(&mut Self, Option<JsValue>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":81804,"byte_end":81822,"line_start":51,"line_end":51,"column_start":12,"column_end":30},"name":"with_cf_properties","qualname":"<RequestInit>::with_cf_properties","value":"fn with_cf_properties(&mut Self, CfProperties) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":81978,"byte_end":81982,"line_start":58,"line_end":58,"column_start":8,"column_end":12},"name":"from","qualname":"<worker_sys::RequestInit as std::convert::From>::from","value":"fn from(&RequestInit) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":82682,"byte_end":82689,"line_start":82,"line_end":82,"column_start":8,"column_end":15},"name":"default","qualname":"<RequestInit as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1114},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":83025,"byte_end":83037,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"CfProperties","qualname":"::request_init::CfProperties","value":"CfProperties { apps, cache_everything, cache_key, cache_ttl, cache_ttl_by_status, minify, mirage, polish, resolve_override, scrape_shield }","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124}],"decl_id":null,"docs":" <https://developers.cloudflare.com/workers/runtime-apis/request#requestinitcfproperties>\n","sig":null,"attributes":[{"value":"/ <https://developers.cloudflare.com/workers/runtime-apis/request#requestinitcfproperties>","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":82921,"byte_end":83013,"line_start":93,"line_end":93,"column_start":1,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":83136,"byte_end":83140,"line_start":96,"line_end":96,"column_start":9,"column_end":13},"name":"apps","qualname":"::request_init::CfProperties::apps","value":"std::option::Option<bool>","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" Whether Cloudflare Apps should be enabled for this request. Defaults to `true`.\n","sig":null,"attributes":[{"value":"/ Whether Cloudflare Apps should be enabled for this request. Defaults to `true`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":83044,"byte_end":83127,"line_start":95,"line_end":95,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":83423,"byte_end":83439,"line_start":100,"line_end":100,"column_start":9,"column_end":25},"name":"cache_everything","qualname":"::request_init::CfProperties::cache_everything","value":"std::option::Option<bool>","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" This option forces Cloudflare to cache the response for this request, regardless of what\n headers are seen on the response. This is equivalent to setting the page rule “Cache Level”\n (to “Cache Everything”). Defaults to `false`.\n","sig":null,"attributes":[{"value":"/ This option forces Cloudflare to cache the response for this request, regardless of what","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":83160,"byte_end":83252,"line_start":97,"line_end":97,"column_start":5,"column_end":97}},{"value":"/ headers are seen on the response. This is equivalent to setting the page rule “Cache Level”","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":83257,"byte_end":83356,"line_start":98,"line_end":98,"column_start":5,"column_end":100}},{"value":"/ (to “Cache Everything”). Defaults to `false`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":83361,"byte_end":83414,"line_start":99,"line_end":99,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":83702,"byte_end":83711,"line_start":104,"line_end":104,"column_start":9,"column_end":18},"name":"cache_key","qualname":"::request_init::CfProperties::cache_key","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" A request’s cache key is what determines if two requests are “the same” for caching\n purposes. If a request has the same cache key as some previous request, then we can serve\n the same cached response for both.\n","sig":null,"attributes":[{"value":"/ A request’s cache key is what determines if two requests are “the same” for caching","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":83459,"byte_end":83552,"line_start":101,"line_end":101,"column_start":5,"column_end":92}},{"value":"/ purposes. If a request has the same cache key as some previous request, then we can serve","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":83557,"byte_end":83650,"line_start":102,"line_end":102,"column_start":5,"column_end":98}},{"value":"/ the same cached response for both.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":83655,"byte_end":83693,"line_start":103,"line_end":103,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1118},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":84120,"byte_end":84129,"line_start":109,"line_end":109,"column_start":9,"column_end":18},"name":"cache_ttl","qualname":"::request_init::CfProperties::cache_ttl","value":"std::option::Option<u32>","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" This option forces Cloudflare to cache the response for this request, regardless of what\n headers are seen on the response. This is equivalent to setting two page rules: “Edge Cache\n TTL” and “Cache Level” (to “Cache Everything”). The value must be zero or a positive number.\n A value of 0 indicates that the cache asset expires immediately.\n","sig":null,"attributes":[{"value":"/ This option forces Cloudflare to cache the response for this request, regardless of what","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":83733,"byte_end":83825,"line_start":105,"line_end":105,"column_start":5,"column_end":97}},{"value":"/ headers are seen on the response. This is equivalent to setting two page rules: “Edge Cache","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":83830,"byte_end":83927,"line_start":106,"line_end":106,"column_start":5,"column_end":100}},{"value":"/ TTL” and “Cache Level” (to “Cache Everything”). The value must be zero or a positive number.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":83932,"byte_end":84038,"line_start":107,"line_end":107,"column_start":5,"column_end":101}},{"value":"/ A value of 0 indicates that the cache asset expires immediately.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":84043,"byte_end":84111,"line_start":108,"line_end":108,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":84722,"byte_end":84741,"line_start":116,"line_end":116,"column_start":9,"column_end":28},"name":"cache_ttl_by_status","qualname":"::request_init::CfProperties::cache_ttl_by_status","value":"std::option::Option<std::collections::HashMap<std::string::String, i32>>","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" This option is a version of the cacheTtl feature which chooses a TTL based on the response’s\n status code. If the response to this request has a status code that matches, Cloudflare will\n cache for the instructed time, and override cache instructives sent by the origin. For\n example: { \"200-299\": 86400, 404: 1, \"500-599\": 0 }. The value can be any integer, including\n zero and negative integers. A value of 0 indicates that the cache asset expires immediately.\n Any negative value instructs Cloudflare not to cache at all.\n","sig":null,"attributes":[{"value":"/ This option is a version of the cacheTtl feature which chooses a TTL based on the response’s","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":84148,"byte_end":84246,"line_start":110,"line_end":110,"column_start":5,"column_end":101}},{"value":"/ status code. If the response to this request has a status code that matches, Cloudflare will","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":84251,"byte_end":84347,"line_start":111,"line_end":111,"column_start":5,"column_end":101}},{"value":"/ cache for the instructed time, and override cache instructives sent by the origin. For","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":84352,"byte_end":84442,"line_start":112,"line_end":112,"column_start":5,"column_end":95}},{"value":"/ example: { \"200-299\": 86400, 404: 1, \"500-599\": 0 }. The value can be any integer, including","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":84447,"byte_end":84543,"line_start":113,"line_end":113,"column_start":5,"column_end":101}},{"value":"/ zero and negative integers. A value of 0 indicates that the cache asset expires immediately.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":84548,"byte_end":84644,"line_start":114,"line_end":114,"column_start":5,"column_end":101}},{"value":"/ Any negative value instructs Cloudflare not to cache at all.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":84649,"byte_end":84713,"line_start":115,"line_end":115,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":84913,"byte_end":84919,"line_start":119,"line_end":119,"column_start":9,"column_end":15},"name":"minify","qualname":"::request_init::CfProperties::minify","value":"std::option::Option<request_init::MinifyConfig>","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" Enables or disables AutoMinify for various file types.\n For example: `{ javascript: true, css: true, html: false }`.\n","sig":null,"attributes":[{"value":"/ Enables or disables AutoMinify for various file types.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":84777,"byte_end":84835,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ For example: `{ javascript: true, css: true, html: false }`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":84840,"byte_end":84904,"line_start":118,"line_end":118,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1121},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":85075,"byte_end":85081,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"name":"mirage","qualname":"::request_init::CfProperties::mirage","value":"std::option::Option<bool>","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" Whether Mirage should be enabled for this request, if otherwise configured for this zone.\n Defaults to true.\n","sig":null,"attributes":[{"value":"/ Whether Mirage should be enabled for this request, if otherwise configured for this zone.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":84947,"byte_end":85040,"line_start":120,"line_end":120,"column_start":5,"column_end":98}},{"value":"/ Defaults to true.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":85045,"byte_end":85066,"line_start":121,"line_end":121,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":85179,"byte_end":85185,"line_start":124,"line_end":124,"column_start":9,"column_end":15},"name":"polish","qualname":"::request_init::CfProperties::polish","value":"std::option::Option<request_init::PolishConfig>","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" Sets Polish mode. The possible values are lossy, lossless or off.\n","sig":null,"attributes":[{"value":"/ Sets Polish mode. The possible values are lossy, lossless or off.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":85101,"byte_end":85170,"line_start":123,"line_end":123,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1123},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":86444,"byte_end":86460,"line_start":139,"line_end":139,"column_start":9,"column_end":25},"name":"resolve_override","qualname":"::request_init::CfProperties::resolve_override","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" Directs the request to an alternate origin server by overriding the DNS lookup. The value of\n `resolve_override` specifies an alternate hostname which will be used when determining the\n origin IP address, instead of using the hostname specified in the URL. The Host header of\n the request will still match what is in the URL. Thus, `resolve_override` allows a request  \n to be sent to a different server than the URL / Host header specifies. However,\n `resolve_override` will only take effect if both the URL host and the host specified by\n `resolve_override` are within your zone. If either specifies a host from a different zone /\n domain, then the option will be ignored for security reasons. If you need to direct a\n request to a host outside your zone (while keeping the Host header pointing within your\n zone), first create a CNAME record within your zone pointing to the outside host, and then\n set `resolve_override` to point at the CNAME record.","sig":null,"attributes":[{"value":"/ Directs the request to an alternate origin server by overriding the DNS lookup. The value of","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":85213,"byte_end":85309,"line_start":125,"line_end":125,"column_start":5,"column_end":101}},{"value":"/ `resolve_override` specifies an alternate hostname which will be used when determining the","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":85314,"byte_end":85408,"line_start":126,"line_end":126,"column_start":5,"column_end":99}},{"value":"/ origin IP address, instead of using the hostname specified in the URL. The Host header of","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":85413,"byte_end":85506,"line_start":127,"line_end":127,"column_start":5,"column_end":98}},{"value":"/ the request will still match what is in the URL. Thus, `resolve_override` allows a request  ","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":85511,"byte_end":85607,"line_start":128,"line_end":128,"column_start":5,"column_end":101}},{"value":"/ to be sent to a different server than the URL / Host header specifies. However,","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":85612,"byte_end":85695,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/ `resolve_override` will only take effect if both the URL host and the host specified by","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":85700,"byte_end":85791,"line_start":130,"line_end":130,"column_start":5,"column_end":96}},{"value":"/ `resolve_override` are within your zone. If either specifies a host from a different zone /","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":85796,"byte_end":85891,"line_start":131,"line_end":131,"column_start":5,"column_end":100}},{"value":"/ domain, then the option will be ignored for security reasons. If you need to direct a","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":85896,"byte_end":85985,"line_start":132,"line_end":132,"column_start":5,"column_end":94}},{"value":"/ request to a host outside your zone (while keeping the Host header pointing within your","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":85990,"byte_end":86081,"line_start":133,"line_end":133,"column_start":5,"column_end":96}},{"value":"/ zone), first create a CNAME record within your zone pointing to the outside host, and then","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":86086,"byte_end":86180,"line_start":134,"line_end":134,"column_start":5,"column_end":99}},{"value":"/ set `resolve_override` to point at the CNAME record.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":86185,"byte_end":86241,"line_start":135,"line_end":135,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":86246,"byte_end":86249,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Note that, for security reasons, it is not possible to set the Host header to specify a host","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":86254,"byte_end":86350,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ outside of your zone unless the request is actually being sent to that host.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":86355,"byte_end":86435,"line_start":138,"line_end":138,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":1124},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":86618,"byte_end":86631,"line_start":142,"line_end":142,"column_start":9,"column_end":22},"name":"scrape_shield","qualname":"::request_init::CfProperties::scrape_shield","value":"std::option::Option<bool>","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" Whether ScrapeShield should be enabled for this request, if otherwise configured for this\n zone. Defaults to `true`.\n","sig":null,"attributes":[{"value":"/ Whether ScrapeShield should be enabled for this request, if otherwise configured for this","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":86482,"byte_end":86575,"line_start":140,"line_end":140,"column_start":5,"column_end":98}},{"value":"/ zone. Defaults to `true`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":86580,"byte_end":86609,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":86696,"byte_end":86700,"line_start":146,"line_end":146,"column_start":8,"column_end":12},"name":"from","qualname":"<JsValue as std::convert::From>::from","value":"fn from(&CfProperties) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":89591,"byte_end":89594,"line_start":250,"line_end":250,"column_start":12,"column_end":15},"name":"new","qualname":"<CfProperties>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":89682,"byte_end":89689,"line_start":256,"line_end":256,"column_start":8,"column_end":15},"name":"default","qualname":"<CfProperties as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1969},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":90245,"byte_end":90257,"line_start":276,"line_end":276,"column_start":12,"column_end":24},"name":"MinifyConfig","qualname":"::request_init::MinifyConfig","value":"MinifyConfig { js, html, css }","parent":null,"children":[{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972}],"decl_id":null,"docs":" Configuration options for Cloudflare's minification features:\n <https://www.cloudflare.com/website-optimization/>\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1970},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":90268,"byte_end":90270,"line_start":277,"line_end":277,"column_start":9,"column_end":11},"name":"js","qualname":"::request_init::MinifyConfig::js","value":"bool","parent":{"krate":0,"index":1969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1971},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":90286,"byte_end":90290,"line_start":278,"line_end":278,"column_start":9,"column_end":13},"name":"html","qualname":"::request_init::MinifyConfig::html","value":"bool","parent":{"krate":0,"index":1969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1972},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":90306,"byte_end":90309,"line_start":279,"line_end":279,"column_start":9,"column_end":12},"name":"css","qualname":"::request_init::MinifyConfig::css","value":"bool","parent":{"krate":0,"index":1969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1992},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":90539,"byte_end":90542,"line_start":287,"line_end":287,"column_start":5,"column_end":8},"name":"Off","qualname":"::request_init::PolishConfig::Off","value":"PolishConfig::Off","parent":{"krate":0,"index":1991},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1994},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":90548,"byte_end":90553,"line_start":288,"line_end":288,"column_start":5,"column_end":10},"name":"Lossy","qualname":"::request_init::PolishConfig::Lossy","value":"PolishConfig::Lossy","parent":{"krate":0,"index":1991},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1996},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":90559,"byte_end":90567,"line_start":289,"line_end":289,"column_start":5,"column_end":13},"name":"Lossless","qualname":"::request_init::PolishConfig::Lossless","value":"PolishConfig::Lossless","parent":{"krate":0,"index":1991},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1991},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":90520,"byte_end":90532,"line_start":286,"line_end":286,"column_start":10,"column_end":22},"name":"PolishConfig","qualname":"::request_init::PolishConfig","value":"enum PolishConfig { Off, Lossy, Lossless, }","parent":null,"children":[{"krate":0,"index":1992},{"krate":0,"index":1994},{"krate":0,"index":1996}],"decl_id":null,"docs":" Configuration options for Cloudflare's image optimization feature:\n <https://blog.cloudflare.com/introducing-polish-automatic-image-optimizati/>\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":90611,"byte_end":90618,"line_start":293,"line_end":293,"column_start":8,"column_end":15},"name":"default","qualname":"<PolishConfig as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":90700,"byte_end":90704,"line_start":299,"line_end":299,"column_start":8,"column_end":12},"name":"from","qualname":"<&'_ str as std::convert::From>::from","value":"fn from(PolishConfig) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2015},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":90979,"byte_end":90984,"line_start":311,"line_end":311,"column_start":5,"column_end":10},"name":"Error","qualname":"::request_init::RequestRedirect::Error","value":"RequestRedirect::Error","parent":{"krate":0,"index":2014},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2017},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":90990,"byte_end":90996,"line_start":312,"line_end":312,"column_start":5,"column_end":11},"name":"Follow","qualname":"::request_init::RequestRedirect::Follow","value":"RequestRedirect::Follow","parent":{"krate":0,"index":2014},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2019},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":91002,"byte_end":91008,"line_start":313,"line_end":313,"column_start":5,"column_end":11},"name":"Manual","qualname":"::request_init::RequestRedirect::Manual","value":"RequestRedirect::Manual","parent":{"krate":0,"index":2014},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2014},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":90957,"byte_end":90972,"line_start":310,"line_end":310,"column_start":10,"column_end":25},"name":"RequestRedirect","qualname":"::request_init::RequestRedirect","value":"enum RequestRedirect { Error, Follow, Manual, }","parent":null,"children":[{"krate":0,"index":2015},{"krate":0,"index":2017},{"krate":0,"index":2019}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":91055,"byte_end":91062,"line_start":317,"line_end":317,"column_start":8,"column_end":15},"name":"default","qualname":"<RequestRedirect as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":91161,"byte_end":91165,"line_start":323,"line_end":323,"column_start":8,"column_end":12},"name":"from","qualname":"<&'_ str as std::convert::From>::from","value":"fn from(RequestRedirect) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":91460,"byte_end":91464,"line_start":333,"line_end":333,"column_start":8,"column_end":12},"name":"from","qualname":"<worker_sys::RequestRedirect as std::convert::From>::from","value":"fn from(RequestRedirect) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2025},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":92251,"byte_end":92256,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"Empty","qualname":"::response::ResponseBody::Empty","value":"ResponseBody::Empty","parent":{"krate":0,"index":2024},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2027},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":92262,"byte_end":92266,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Body","qualname":"::response::ResponseBody::Body","value":"ResponseBody::Body(Vec<u8>)","parent":{"krate":0,"index":2024},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2029},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":92267,"byte_end":92274,"line_start":19,"line_end":19,"column_start":10,"column_end":17},"name":"0","qualname":"::response::ResponseBody::Body::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2030},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":92281,"byte_end":92287,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Stream","qualname":"::response::ResponseBody::Stream","value":"ResponseBody::Stream(ReadableStream)","parent":{"krate":0,"index":2024},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2032},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":92288,"byte_end":92302,"line_start":20,"line_end":20,"column_start":12,"column_end":26},"name":"0","qualname":"::response::ResponseBody::Stream::0","value":"web_sys::ReadableStream","parent":{"krate":0,"index":2030},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2024},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":92232,"byte_end":92244,"line_start":17,"line_end":17,"column_start":10,"column_end":22},"name":"ResponseBody","qualname":"::response::ResponseBody","value":"enum ResponseBody { Empty, Body(Vec<u8>), Stream(ReadableStream), }","parent":null,"children":[{"krate":0,"index":2025},{"krate":0,"index":2027},{"krate":0,"index":2030}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2037},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":92532,"byte_end":92540,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"Response","qualname":"::response::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041}],"decl_id":null,"docs":" A [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) representation for\n working with or returning a response to a `Request`.\n","sig":null,"attributes":[{"value":"/ A [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) representation for","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":92352,"byte_end":92446,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ working with or returning a response to a `Request`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":92447,"byte_end":92503,"line_start":26,"line_end":26,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":92834,"byte_end":92843,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"name":"from_json","qualname":"<Response>::from_json","value":"fn from_json<B>(&B) -> Result<Self> where B: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Create a `Response` using `B` as the body encoded as JSON. Sets the associated\n `Content-Type` header for the `Response` as `application/json`.\n","sig":null,"attributes":[{"value":"/ Create a `Response` using `B` as the body encoded as JSON. Sets the associated","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":92668,"byte_end":92750,"line_start":36,"line_end":36,"column_start":5,"column_end":87}},{"value":"/ `Content-Type` header for the `Response` as `application/json`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":92755,"byte_end":92822,"line_start":37,"line_end":37,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":93495,"byte_end":93504,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"from_html","qualname":"<Response>::from_html","value":"fn from_html<impl AsRef<str>>(impl AsRef<str>) -> Result<Self> where\nimpl AsRef<str>: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Response` using the body encoded as HTML. Sets the associated `Content-Type`\n header for the `Response` as `text/html`.\n","sig":null,"attributes":[{"value":"/ Create a `Response` using the body encoded as HTML. Sets the associated `Content-Type`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":93343,"byte_end":93433,"line_start":54,"line_end":54,"column_start":5,"column_end":95}},{"value":"/ header for the `Response` as `text/html`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":93438,"byte_end":93483,"line_start":55,"line_end":55,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":94025,"byte_end":94035,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Response>::from_bytes","value":"fn from_bytes(Vec<u8>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Response` using unprocessed bytes provided. Sets the associated `Content-Type`\n header for the `Response` as `application/octet-stream`.\n","sig":null,"attributes":[{"value":"/ Create a `Response` using unprocessed bytes provided. Sets the associated `Content-Type`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":93856,"byte_end":93948,"line_start":69,"line_end":69,"column_start":5,"column_end":97}},{"value":"/ header for the `Response` as `application/octet-stream`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":93953,"byte_end":94013,"line_start":70,"line_end":70,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1201},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":94547,"byte_end":94556,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"from_body","qualname":"<Response>::from_body","value":"fn from_body(ResponseBody) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Response` using a `ResponseBody` variant. Sets a status code of 200 and an empty\n set of Headers. Modify the Response with methods such as `with_status` and `with_headers`.\n","sig":null,"attributes":[{"value":"/ Create a `Response` using a `ResponseBody` variant. Sets a status code of 200 and an empty","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":94342,"byte_end":94436,"line_start":83,"line_end":83,"column_start":5,"column_end":99}},{"value":"/ set of Headers. Modify the Response with methods such as `with_status` and `with_headers`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":94441,"byte_end":94535,"line_start":84,"line_end":84,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":94914,"byte_end":94928,"line_start":96,"line_end":96,"column_start":12,"column_end":26},"name":"from_websocket","qualname":"<Response>::from_websocket","value":"fn from_websocket(WebSocket) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Response` using a `WebSocket` client. Configures the browser to switch protocols\n (using status code 101) and returns the websocket.\n","sig":null,"attributes":[{"value":"/ Create a `Response` using a `WebSocket` client. Configures the browser to switch protocols","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":94749,"byte_end":94843,"line_start":94,"line_end":94,"column_start":5,"column_end":99}},{"value":"/ (using status code 101) and returns the websocket.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":94848,"byte_end":94902,"line_start":95,"line_end":95,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":95394,"byte_end":95405,"line_start":108,"line_end":108,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<Response>::from_stream","value":"fn from_stream<S>(S) -> Result<Self> where S: TryStream + 'static,\nS::Ok: Into<Vec<u8>>, S::Error: Into<Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Response` using a [`Stream`](futures::stream::Stream) for the body. Sets a status\n code of 200 and an empty set of Headers. Modify the Response with methods such as\n `with_status` and `with_headers`.\n","sig":null,"attributes":[{"value":"/ Create a `Response` using a [`Stream`](futures::stream::Stream) for the body. Sets a status","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":95155,"byte_end":95250,"line_start":105,"line_end":105,"column_start":5,"column_end":100}},{"value":"/ code of 200 and an empty set of Headers. Modify the Response with methods such as","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":95255,"byte_end":95340,"line_start":106,"line_end":106,"column_start":5,"column_end":90}},{"value":"/ `with_status` and `with_headers`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":95345,"byte_end":95382,"line_start":107,"line_end":107,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":96362,"byte_end":96364,"line_start":134,"line_end":134,"column_start":12,"column_end":14},"name":"ok","qualname":"<Response>::ok","value":"fn ok<impl Into<String>>(impl Into<String>) -> Result<Self> where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Response` using unprocessed text provided. Sets the associated `Content-Type`\n header for the `Response` as `text/plain`.\n","sig":null,"attributes":[{"value":"/ Create a `Response` using unprocessed text provided. Sets the associated `Content-Type`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":96208,"byte_end":96299,"line_start":132,"line_end":132,"column_start":5,"column_end":96}},{"value":"/ header for the `Response` as `text/plain`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":96304,"byte_end":96350,"line_start":133,"line_end":133,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":96751,"byte_end":96756,"line_start":147,"line_end":147,"column_start":12,"column_end":17},"name":"empty","qualname":"<Response>::empty","value":"fn empty() -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `Response` with a 200 status code.\n","sig":null,"attributes":[{"value":"/ Create an empty `Response` with a 200 status code.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":96685,"byte_end":96739,"line_start":146,"line_end":146,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":97125,"byte_end":97130,"line_start":158,"line_end":158,"column_start":12,"column_end":17},"name":"error","qualname":"<Response>::error","value":"fn error<impl Into<String>>(impl Into<String>, u16) -> Result<Self> where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" A helper method to send an error message to a client. Will return `Err` if the status code\n provided is outside the valid HTTP error range of 400-599.\n","sig":null,"attributes":[{"value":"/ A helper method to send an error message to a client. Will return `Err` if the status code","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":96952,"byte_end":97046,"line_start":156,"line_end":156,"column_start":5,"column_end":99}},{"value":"/ provided is outside the valid HTTP error range of 400-599.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":97051,"byte_end":97113,"line_start":157,"line_end":157,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":97748,"byte_end":97756,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"redirect","qualname":"<Response>::redirect","value":"fn redirect(url::Url) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Response` which redirects to the specified URL with default status_code of 302\n","sig":null,"attributes":[{"value":"/ Create a `Response` which redirects to the specified URL with default status_code of 302","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":97644,"byte_end":97736,"line_start":173,"line_end":173,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":98077,"byte_end":98097,"line_start":182,"line_end":182,"column_start":12,"column_end":32},"name":"redirect_with_status","qualname":"<Response>::redirect_with_status","value":"fn redirect_with_status(url::Url, u16) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Response` which redirects to the specified URL with a custom status_code\n","sig":null,"attributes":[{"value":"/ Create a `Response` which redirects to the specified URL with a custom status_code","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":97979,"byte_end":98065,"line_start":181,"line_end":181,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":98719,"byte_end":98730,"line_start":195,"line_end":195,"column_start":12,"column_end":23},"name":"status_code","qualname":"<Response>::status_code","value":"fn status_code(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the HTTP Status code of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get the HTTP Status code of this `Response`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":98659,"byte_end":98707,"line_start":194,"line_end":194,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":98826,"byte_end":98830,"line_start":200,"line_end":200,"column_start":12,"column_end":16},"name":"body","qualname":"<Response>::body","value":"fn body(&Self) -> &ResponseBody","parent":null,"children":[],"decl_id":null,"docs":" Access this response's body\n","sig":null,"attributes":[{"value":"/ Access this response's body","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":98783,"byte_end":98814,"line_start":199,"line_end":199,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":98950,"byte_end":98954,"line_start":205,"line_end":205,"column_start":18,"column_end":22},"name":"text","qualname":"<Response>::text","value":"async fn text<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Access this response's body as plaintext.\n","sig":null,"attributes":[{"value":"/ Access this response's body as plaintext.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":98887,"byte_end":98932,"line_start":204,"line_end":204,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":99495,"byte_end":99499,"line_start":219,"line_end":219,"column_start":18,"column_end":22},"name":"json","qualname":"<Response>::json","value":"async fn json<B, '_>(&'_ mut Self) -> /*impl Trait*/ where B: DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" Access this response's body encoded as JSON.\n","sig":null,"attributes":[{"value":"/ Access this response's body encoded as JSON.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":99429,"byte_end":99477,"line_start":218,"line_end":218,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":99892,"byte_end":99897,"line_start":228,"line_end":228,"column_start":18,"column_end":23},"name":"bytes","qualname":"<Response>::bytes","value":"async fn bytes<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Access this response's body encoded as raw bytes.\n","sig":null,"attributes":[{"value":"/ Access this response's body encoded as raw bytes.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":99821,"byte_end":99874,"line_start":227,"line_end":227,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":100481,"byte_end":100487,"line_start":244,"line_end":244,"column_start":12,"column_end":18},"name":"stream","qualname":"<Response>::stream","value":"fn stream(&mut Self) -> Result<ByteStream>","parent":null,"children":[],"decl_id":null,"docs":" Access this response's body as a [`Stream`](futures::stream::Stream) of bytes.\n","sig":null,"attributes":[{"value":"/ Access this response's body as a [`Stream`](futures::stream::Stream) of bytes.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":100387,"byte_end":100469,"line_start":243,"line_end":243,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":100964,"byte_end":100973,"line_start":258,"line_end":258,"column_start":12,"column_end":21},"name":"websocket","qualname":"<Response>::websocket","value":"fn websocket(Self) -> Option<WebSocket>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":101083,"byte_end":101095,"line_start":263,"line_end":263,"column_start":12,"column_end":24},"name":"with_headers","qualname":"<Response>::with_headers","value":"fn with_headers(Self, Headers) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set this response's `Headers`.\n","sig":null,"attributes":[{"value":"/ Set this response's `Headers`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":101037,"byte_end":101071,"line_start":262,"line_end":262,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":101439,"byte_end":101450,"line_start":271,"line_end":271,"column_start":12,"column_end":23},"name":"with_status","qualname":"<Response>::with_status","value":"fn with_status(Self, u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set this response's status code.\n The Workers platform will reject HTTP status codes outside the range of 200..599 inclusive,\n and will throw a JavaScript `RangeError`, returning a response with an HTTP 500 status code.\n","sig":null,"attributes":[{"value":"/ Set this response's status code.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":101190,"byte_end":101226,"line_start":268,"line_end":268,"column_start":5,"column_end":41}},{"value":"/ The Workers platform will reject HTTP status codes outside the range of 200..599 inclusive,","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":101231,"byte_end":101326,"line_start":269,"line_end":269,"column_start":5,"column_end":100}},{"value":"/ and will throw a JavaScript `RangeError`, returning a response with an HTTP 500 status code.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":101331,"byte_end":101427,"line_start":270,"line_end":270,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":101860,"byte_end":101869,"line_start":286,"line_end":286,"column_start":12,"column_end":21},"name":"with_cors","qualname":"<Response>::with_cors","value":"fn with_cors(Self, &Cors) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Sets this response's cors headers from the `Cors` struct.\n Example usage:\n ```\n use worker::*;\n fn fetch() -> worker::Result<Response> {\n     let cors = Cors::default();\n     Response::empty()?\n         .with_cors(&cors)\n }\n ```\n","sig":null,"attributes":[{"value":"/ Sets this response's cors headers from the `Cors` struct.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":101553,"byte_end":101614,"line_start":276,"line_end":276,"column_start":5,"column_end":66}},{"value":"/ Example usage:","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":101619,"byte_end":101637,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":101642,"byte_end":101649,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use worker::*;","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":101654,"byte_end":101672,"line_start":279,"line_end":279,"column_start":5,"column_end":23}},{"value":"/ fn fetch() -> worker::Result<Response> {","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":101677,"byte_end":101721,"line_start":280,"line_end":280,"column_start":5,"column_end":49}},{"value":"/     let cors = Cors::default();","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":101726,"byte_end":101761,"line_start":281,"line_end":281,"column_start":5,"column_end":40}},{"value":"/     Response::empty()?","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":101766,"byte_end":101792,"line_start":282,"line_end":282,"column_start":5,"column_end":31}},{"value":"/         .with_cors(&cors)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":101797,"byte_end":101826,"line_start":283,"line_end":283,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":101831,"byte_end":101836,"line_start":284,"line_end":284,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":101841,"byte_end":101848,"line_start":285,"line_end":285,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":102157,"byte_end":102171,"line_start":294,"line_end":294,"column_start":12,"column_end":26},"name":"with_websocket","qualname":"<Response>::with_websocket","value":"fn with_websocket(Self, Option<WebSocket>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets this response's `webSocket` option.\n This will require a status code 101 to work.\n","sig":null,"attributes":[{"value":"/ Sets this response's `webSocket` option.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":102048,"byte_end":102092,"line_start":292,"line_end":292,"column_start":5,"column_end":49}},{"value":"/ This will require a status code 101 to work.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":102097,"byte_end":102145,"line_start":293,"line_end":293,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":102334,"byte_end":102341,"line_start":300,"line_end":300,"column_start":12,"column_end":19},"name":"headers","qualname":"<Response>::headers","value":"fn headers(&Self) -> &Headers","parent":null,"children":[],"decl_id":null,"docs":" Read the `Headers` on this response.\n","sig":null,"attributes":[{"value":"/ Read the `Headers` on this response.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":102282,"byte_end":102322,"line_start":299,"line_end":299,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":102470,"byte_end":102481,"line_start":305,"line_end":305,"column_start":12,"column_end":23},"name":"headers_mut","qualname":"<Response>::headers_mut","value":"fn headers_mut(&mut Self) -> &mut Headers","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the `Headers` on this response.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the `Headers` on this response.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":102396,"byte_end":102458,"line_start":304,"line_end":304,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":102617,"byte_end":102623,"line_start":310,"line_end":310,"column_start":12,"column_end":18},"name":"cloned","qualname":"<Response>::cloned","value":"fn cloned(&mut Self) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Clones the response so it can be used multiple times.\n","sig":null,"attributes":[{"value":"/ Clones the response so it can be used multiple times.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":102548,"byte_end":102605,"line_start":309,"line_end":309,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1241},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":103396,"byte_end":103408,"line_start":336,"line_end":336,"column_start":12,"column_end":24},"name":"ResponseInit","qualname":"::response::ResponseInit","value":"ResponseInit { status, headers, websocket }","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1242},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":103419,"byte_end":103425,"line_start":337,"line_end":337,"column_start":9,"column_end":15},"name":"status","qualname":"::response::ResponseInit::status","value":"u16","parent":{"krate":0,"index":1241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":103440,"byte_end":103447,"line_start":338,"line_end":338,"column_start":9,"column_end":16},"name":"headers","qualname":"::response::ResponseInit::headers","value":"headers::Headers","parent":{"krate":0,"index":1241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":103466,"byte_end":103475,"line_start":339,"line_end":339,"column_start":9,"column_end":18},"name":"websocket","qualname":"::response::ResponseInit::websocket","value":"std::option::Option<websocket::WebSocket>","parent":{"krate":0,"index":1241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":103553,"byte_end":103557,"line_start":343,"line_end":343,"column_start":8,"column_end":12},"name":"from","qualname":"<EdgeResponseInit as std::convert::From>::from","value":"fn from(ResponseInit) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":103911,"byte_end":103915,"line_start":355,"line_end":355,"column_start":8,"column_end":12},"name":"from","qualname":"<EdgeResponse as std::convert::From>::from","value":"fn from(Response) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":105285,"byte_end":105289,"line_start":397,"line_end":397,"column_start":8,"column_end":12},"name":"from","qualname":"<EdgeResponse as std::convert::From>::from","value":"fn from(&Response) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":106715,"byte_end":106719,"line_start":439,"line_end":439,"column_start":8,"column_end":12},"name":"from","qualname":"<Response as std::convert::From>::from","value":"fn from(EdgeResponse) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1309},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":107720,"byte_end":107731,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"RouteParams","qualname":"::router::RouteParams","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the URL parameters parsed from the path, e.g. a route with \"/user/:id\" pattern would\n contain a single \"id\" key.\n","sig":null,"attributes":[{"value":"/ Represents the URL parameters parsed from the path, e.g. a route with \"/user/:id\" pattern would","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":107578,"byte_end":107677,"line_start":20,"line_end":20,"column_start":1,"column_end":100}},{"value":"/ contain a single \"id\" key.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":107678,"byte_end":107708,"line_start":21,"line_end":21,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":108261,"byte_end":108267,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"Router","qualname":"::router::Router","value":"Router {  }","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331}],"decl_id":null,"docs":" A path-based HTTP router supporting exact-match or wildcard placeholders and shared data.\n","sig":null,"attributes":[{"value":"/ A path-based HTTP router supporting exact-match or wildcard placeholders and shared data.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":108156,"byte_end":108249,"line_start":44,"line_end":44,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":1332},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":108564,"byte_end":108576,"line_start":53,"line_end":53,"column_start":12,"column_end":24},"name":"RouteContext","qualname":"::router::RouteContext","value":"RouteContext { data, env }","parent":null,"children":[{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336}],"decl_id":null,"docs":" Container for a route's parsed parameters, data, and environment bindings from the Runtime (such\n as KV Stores, Durable Objects, Variables, and Secrets).\n","sig":null,"attributes":[{"value":"/ Container for a route's parsed parameters, data, and environment bindings from the Runtime (such","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":108392,"byte_end":108492,"line_start":51,"line_end":51,"column_start":1,"column_end":101}},{"value":"/ as KV Stores, Durable Objects, Variables, and Secrets).","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":108493,"byte_end":108552,"line_start":52,"line_end":52,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1334},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":108590,"byte_end":108594,"line_start":54,"line_end":54,"column_start":9,"column_end":13},"name":"data","qualname":"::router::RouteContext::data","value":"D","parent":{"krate":0,"index":1332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":108607,"byte_end":108610,"line_start":55,"line_end":55,"column_start":9,"column_end":12},"name":"env","qualname":"::router::RouteContext::env","value":"env::Env","parent":{"krate":0,"index":1332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":108845,"byte_end":108849,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"data","qualname":"<RouteContext<D>>::data","value":"fn data(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the generic associated data provided to the `Router`.\n","sig":null,"attributes":[{"value":"/ Get a reference to the generic associated data provided to the `Router`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":108675,"byte_end":108751,"line_start":60,"line_end":60,"column_start":5,"column_end":81}},{"value":"deprecated(since = \"0.0.8\", note = \"please use the `data` field directly\")","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":108756,"byte_end":108833,"line_start":61,"line_end":61,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":109147,"byte_end":109154,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_env","qualname":"<RouteContext<D>>::get_env","value":"fn get_env(Self) -> Env","parent":null,"children":[],"decl_id":null,"docs":" Get the `Env` for this Worker. Typically users should opt for the `secret`, `var`, `kv` and\n `durable_object` methods on the `RouteContext` instead.\n","sig":null,"attributes":[{"value":"/ Get the `Env` for this Worker. Typically users should opt for the `secret`, `var`, `kv` and","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":108895,"byte_end":108990,"line_start":66,"line_end":66,"column_start":5,"column_end":100}},{"value":"/ `durable_object` methods on the `RouteContext` instead.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":108995,"byte_end":109054,"line_start":67,"line_end":67,"column_start":5,"column_end":64}},{"value":"deprecated(since = \"0.0.8\", note = \"please use the `env` field directly\")","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":109059,"byte_end":109135,"line_start":68,"line_end":68,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":109279,"byte_end":109285,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"secret","qualname":"<RouteContext<D>>::secret","value":"fn secret(&Self, &str) -> Result<Secret>","parent":null,"children":[],"decl_id":null,"docs":" Get a Secret value associated with this Worker, should one exist.\n","sig":null,"attributes":[{"value":"/ Get a Secret value associated with this Worker, should one exist.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":109198,"byte_end":109267,"line_start":73,"line_end":73,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":109468,"byte_end":109471,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"var","qualname":"<RouteContext<D>>::var","value":"fn var(&Self, &str) -> Result<Var>","parent":null,"children":[],"decl_id":null,"docs":" Get an Environment Variable value associated with this Worker, should one exist.\n","sig":null,"attributes":[{"value":"/ Get an Environment Variable value associated with this Worker, should one exist.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":109372,"byte_end":109456,"line_start":78,"line_end":78,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":109633,"byte_end":109635,"line_start":84,"line_end":84,"column_start":12,"column_end":14},"name":"kv","qualname":"<RouteContext<D>>::kv","value":"fn kv(&Self, &str) -> Result<KvStore>","parent":null,"children":[],"decl_id":null,"docs":" Get a KV Namespace associated with this Worker, should one exist.\n","sig":null,"attributes":[{"value":"/ Get a KV Namespace associated with this Worker, should one exist.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":109552,"byte_end":109621,"line_start":83,"line_end":83,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":109850,"byte_end":109864,"line_start":89,"line_end":89,"column_start":12,"column_end":26},"name":"durable_object","qualname":"<RouteContext<D>>::durable_object","value":"fn durable_object(&Self, &str) -> Result<ObjectNamespace>","parent":null,"children":[],"decl_id":null,"docs":" Get a Durable Object Namespace associated with this Worker, should one exist.\n","sig":null,"attributes":[{"value":"/ Get a Durable Object Namespace associated with this Worker, should one exist.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":109757,"byte_end":109838,"line_start":88,"line_end":88,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":110076,"byte_end":110081,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"param","qualname":"<RouteContext<D>>::param","value":"fn param(&Self, &str) -> Option<&String>","parent":null,"children":[],"decl_id":null,"docs":" Get a URL parameter parsed by the router, by the name of its match or wildecard placeholder.\n","sig":null,"attributes":[{"value":"/ Get a URL parameter parsed by the router, by the name of its match or wildecard placeholder.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":109968,"byte_end":110064,"line_start":93,"line_end":93,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":110339,"byte_end":110342,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<Router>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Router`. Or, call `Router::with_data(D)` to add arbitrary data that will be\n available to your various routes.\n","sig":null,"attributes":[{"value":"/ Construct a new `Router`. Or, call `Router::with_data(D)` to add arbitrary data that will be","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":110189,"byte_end":110285,"line_start":100,"line_end":100,"column_start":5,"column_end":101}},{"value":"/ available to your various routes.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":110290,"byte_end":110327,"line_start":101,"line_end":101,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":110535,"byte_end":110544,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"with_data","qualname":"<Router>::with_data","value":"fn with_data(D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Router` with arbitrary data that will be available to your various routes.\n","sig":null,"attributes":[{"value":"/ Construct a new `Router` with arbitrary data that will be available to your various routes.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":110428,"byte_end":110523,"line_start":108,"line_end":108,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":110789,"byte_end":110793,"line_start":118,"line_end":118,"column_start":12,"column_end":16},"name":"head","qualname":"<Router>::head","value":"fn head(Self, &str, HandlerFn<D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to HEAD requests.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to HEAD requests.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":110701,"byte_end":110777,"line_start":117,"line_end":117,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":111036,"byte_end":111039,"line_start":124,"line_end":124,"column_start":12,"column_end":15},"name":"get","qualname":"<Router>::get","value":"fn get(Self, &str, HandlerFn<D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to GET requests.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to GET requests.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":110949,"byte_end":111024,"line_start":123,"line_end":123,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":111282,"byte_end":111286,"line_start":130,"line_end":130,"column_start":12,"column_end":16},"name":"post","qualname":"<Router>::post","value":"fn post(Self, &str, HandlerFn<D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to POST requests.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to POST requests.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":111194,"byte_end":111270,"line_start":129,"line_end":129,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":111529,"byte_end":111532,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"put","qualname":"<Router>::put","value":"fn put(Self, &str, HandlerFn<D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to PUT requests.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to PUT requests.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":111442,"byte_end":111517,"line_start":135,"line_end":135,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":111776,"byte_end":111781,"line_start":142,"line_end":142,"column_start":12,"column_end":17},"name":"patch","qualname":"<Router>::patch","value":"fn patch(Self, &str, HandlerFn<D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to PATCH requests.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to PATCH requests.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":111687,"byte_end":111764,"line_start":141,"line_end":141,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":112028,"byte_end":112034,"line_start":148,"line_end":148,"column_start":12,"column_end":18},"name":"delete","qualname":"<Router>::delete","value":"fn delete(Self, &str, HandlerFn<D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to DELETE requests.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to DELETE requests.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":111938,"byte_end":112016,"line_start":147,"line_end":147,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":112283,"byte_end":112290,"line_start":154,"line_end":154,"column_start":12,"column_end":19},"name":"options","qualname":"<Router>::options","value":"fn options(Self, &str, HandlerFn<D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to OPTIONS requests.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to OPTIONS requests.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":112192,"byte_end":112271,"line_start":153,"line_end":153,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":112524,"byte_end":112526,"line_start":160,"line_end":160,"column_start":12,"column_end":14},"name":"on","qualname":"<Router>::on","value":"fn on(Self, &str, HandlerFn<D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will respond to any requests.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will respond to any requests.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":112449,"byte_end":112512,"line_start":159,"line_end":159,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":112809,"byte_end":112827,"line_start":167,"line_end":167,"column_start":12,"column_end":30},"name":"or_else_any_method","qualname":"<Router>::or_else_any_method","value":"fn or_else_any_method(Self, &str, HandlerFn<D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will respond to all methods that are not handled explicitly by\n other handlers.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will respond to all methods that are not handled explicitly by","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":112677,"byte_end":112773,"line_start":165,"line_end":165,"column_start":5,"column_end":101}},{"value":"/ other handlers.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":112778,"byte_end":112797,"line_start":166,"line_end":166,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":113242,"byte_end":113252,"line_start":176,"line_end":176,"column_start":12,"column_end":22},"name":"head_async","qualname":"<Router>::head_async","value":"fn head_async<T>(Self, &str, fn(: Request, : RouteContext<D>) -> T) -> Self\nwhere T: Future<Output = Result<Response>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to HEAD requests. Enables the use of\n `async/await` syntax in the callback.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to HEAD requests. Enables the use of","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":113089,"byte_end":113184,"line_start":174,"line_end":174,"column_start":5,"column_end":100}},{"value":"/ `async/await` syntax in the callback.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":113189,"byte_end":113230,"line_start":175,"line_end":175,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":113744,"byte_end":113753,"line_start":190,"line_end":190,"column_start":12,"column_end":21},"name":"get_async","qualname":"<Router>::get_async","value":"fn get_async<T>(Self, &str, fn(: Request, : RouteContext<D>) -> T) -> Self\nwhere T: Future<Output = Result<Response>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to GET requests. Enables the use of\n `async/await` syntax in the callback.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to GET requests. Enables the use of","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":113592,"byte_end":113686,"line_start":188,"line_end":188,"column_start":5,"column_end":99}},{"value":"/ `async/await` syntax in the callback.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":113691,"byte_end":113732,"line_start":189,"line_end":189,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":114245,"byte_end":114255,"line_start":204,"line_end":204,"column_start":12,"column_end":22},"name":"post_async","qualname":"<Router>::post_async","value":"fn post_async<T>(Self, &str, fn(: Request, : RouteContext<D>) -> T) -> Self\nwhere T: Future<Output = Result<Response>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to POST requests. Enables the use of\n `async/await` syntax in the callback.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to POST requests. Enables the use of","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":114092,"byte_end":114187,"line_start":202,"line_end":202,"column_start":5,"column_end":100}},{"value":"/ `async/await` syntax in the callback.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":114192,"byte_end":114233,"line_start":203,"line_end":203,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":114747,"byte_end":114756,"line_start":218,"line_end":218,"column_start":12,"column_end":21},"name":"put_async","qualname":"<Router>::put_async","value":"fn put_async<T>(Self, &str, fn(: Request, : RouteContext<D>) -> T) -> Self\nwhere T: Future<Output = Result<Response>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to PUT requests. Enables the use of\n `async/await` syntax in the callback.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to PUT requests. Enables the use of","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":114595,"byte_end":114689,"line_start":216,"line_end":216,"column_start":5,"column_end":99}},{"value":"/ `async/await` syntax in the callback.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":114694,"byte_end":114735,"line_start":217,"line_end":217,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":115249,"byte_end":115260,"line_start":232,"line_end":232,"column_start":12,"column_end":23},"name":"patch_async","qualname":"<Router>::patch_async","value":"fn patch_async<T>(Self, &str, fn(: Request, : RouteContext<D>) -> T) -> Self\nwhere T: Future<Output = Result<Response>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to PATCH requests. Enables the use of\n `async/await` syntax in the callback.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to PATCH requests. Enables the use of","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":115095,"byte_end":115191,"line_start":230,"line_end":230,"column_start":5,"column_end":101}},{"value":"/ `async/await` syntax in the callback.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":115196,"byte_end":115237,"line_start":231,"line_end":231,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":115756,"byte_end":115768,"line_start":246,"line_end":246,"column_start":12,"column_end":24},"name":"delete_async","qualname":"<Router>::delete_async","value":"fn delete_async<T>(Self, &str, fn(: Request, : RouteContext<D>) -> T) -> Self\nwhere T: Future<Output = Result<Response>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to DELETE requests. Enables the use\n of `async/await` syntax in the callback.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to DELETE requests. Enables the use","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":115601,"byte_end":115695,"line_start":244,"line_end":244,"column_start":5,"column_end":99}},{"value":"/ of `async/await` syntax in the callback.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":115700,"byte_end":115744,"line_start":245,"line_end":245,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":116266,"byte_end":116279,"line_start":260,"line_end":260,"column_start":12,"column_end":25},"name":"options_async","qualname":"<Router>::options_async","value":"fn options_async<T>(Self, &str, fn(: Request, : RouteContext<D>) -> T) -> Self\nwhere T: Future<Output = Result<Response>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will exclusively respond to OPTIONS requests. Enables the use\n of `async/await` syntax in the callback.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will exclusively respond to OPTIONS requests. Enables the use","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":116110,"byte_end":116205,"line_start":258,"line_end":258,"column_start":5,"column_end":100}},{"value":"/ of `async/await` syntax in the callback.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":116210,"byte_end":116254,"line_start":259,"line_end":259,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":116793,"byte_end":116801,"line_start":278,"line_end":278,"column_start":12,"column_end":20},"name":"on_async","qualname":"<Router>::on_async","value":"fn on_async<T>(Self, &str, fn(: Request, : RouteContext<D>) -> T) -> Self\nwhere T: Future<Output = Result<Response>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will respond to any requests. Enables the use of `async/await`\n syntax in the callback.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will respond to any requests. Enables the use of `async/await`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":116653,"byte_end":116749,"line_start":276,"line_end":276,"column_start":5,"column_end":101}},{"value":"/ syntax in the callback.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":116754,"byte_end":116781,"line_start":277,"line_end":277,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":117327,"byte_end":117351,"line_start":292,"line_end":292,"column_start":12,"column_end":36},"name":"or_else_any_method_async","qualname":"<Router>::or_else_any_method_async","value":"fn or_else_any_method_async<T>(Self, &str,\nfn(: Request, : RouteContext<D>) -> T) -> Self where T: Future<Output =\nResult<Response>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Register an HTTP handler that will respond to all methods that are not handled explicitly by\n other handlers. Enables the use of `async/await` syntax in the callback.\n","sig":null,"attributes":[{"value":"/ Register an HTTP handler that will respond to all methods that are not handled explicitly by","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":117138,"byte_end":117234,"line_start":290,"line_end":290,"column_start":5,"column_end":101}},{"value":"/ other handlers. Enables the use of `async/await` syntax in the callback.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":117239,"byte_end":117315,"line_start":291,"line_end":291,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":118440,"byte_end":118443,"line_start":325,"line_end":325,"column_start":18,"column_end":21},"name":"run","qualname":"<Router>::run","value":"async fn run(Self, Request, Env) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Handle the request provided to the `Router` and return a `Future`.\n","sig":null,"attributes":[{"value":"/ Handle the request provided to the `Router` and return a `Future`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":118352,"byte_end":118422,"line_start":324,"line_end":324,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":120342,"byte_end":120346,"line_start":384,"line_end":384,"column_start":8,"column_end":12},"name":"from","qualname":"<RouteParams as std::convert::From>::from","value":"fn from(matchit::Params) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2044},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":120922,"byte_end":120936,"line_start":8,"line_end":8,"column_start":12,"column_end":26},"name":"ScheduledEvent","qualname":"::schedule::ScheduledEvent","value":"ScheduledEvent {  }","parent":null,"children":[{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2047}],"decl_id":null,"docs":" [Schedule](https://developers.cloudflare.com/workers/runtime-apis/scheduled-event#syntax-module-worker)\n","sig":null,"attributes":[{"value":"/ [Schedule](https://developers.cloudflare.com/workers/runtime-apis/scheduled-event#syntax-module-worker)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":120779,"byte_end":120886,"line_start":6,"line_end":6,"column_start":1,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":121059,"byte_end":121063,"line_start":15,"line_end":15,"column_start":8,"column_end":12},"name":"from","qualname":"<ScheduledEvent as std::convert::From>::from","value":"fn from(EdgeScheduledEvent) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":121329,"byte_end":121333,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"cron","qualname":"<ScheduledEvent>::cron","value":"fn cron(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" get cron trigger\n","sig":null,"attributes":[{"value":"/ get cron trigger","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":121297,"byte_end":121317,"line_start":25,"line_end":25,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":121414,"byte_end":121416,"line_start":31,"line_end":31,"column_start":12,"column_end":14},"name":"ty","qualname":"<ScheduledEvent>::ty","value":"fn ty(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" get type\n","sig":null,"attributes":[{"value":"/ get type","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":121390,"byte_end":121402,"line_start":30,"line_end":30,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":121510,"byte_end":121518,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"schedule","qualname":"<ScheduledEvent>::schedule","value":"fn schedule(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" get trigger time as f64\n","sig":null,"attributes":[{"value":"/ get trigger time as f64","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":121471,"byte_end":121498,"line_start":35,"line_end":35,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2052},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":121600,"byte_end":121615,"line_start":42,"line_end":42,"column_start":12,"column_end":27},"name":"ScheduleContext","qualname":"::schedule::ScheduleContext","value":"ScheduleContext {  }","parent":null,"children":[{"krate":0,"index":2053}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":121712,"byte_end":121716,"line_start":47,"line_end":47,"column_start":8,"column_end":12},"name":"from","qualname":"<ScheduleContext as std::convert::From>::from","value":"fn from(EdgeScheduleContext) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":121819,"byte_end":121829,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"wait_until","qualname":"<ScheduleContext>::wait_until","value":"fn wait_until<T>(&Self, T) where T: Future<Output = ()> + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2086},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/streams.rs","byte_start":122294,"byte_end":122304,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"ByteStream","qualname":"::streams::ByteStream","value":"ByteStream {  }","parent":null,"children":[{"krate":0,"index":2087}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/streams.rs","byte_start":122251,"byte_end":122265,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/streams.rs","byte_start":122294,"byte_end":122304,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"__ByteStream","qualname":"::streams::_::__ByteStream","value":"__ByteStream {  }","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2075}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/streams.rs","byte_start":122251,"byte_end":122265,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/streams.rs","byte_start":122434,"byte_end":122443,"line_start":23,"line_end":23,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<ByteStream as futures_util::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":58,"index":96},"children":[],"decl_id":{"krate":58,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2088},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":123449,"byte_end":123462,"line_start":18,"line_end":18,"column_start":12,"column_end":25},"name":"WebSocketPair","qualname":"::websocket::WebSocketPair","value":"WebSocketPair { client, server }","parent":null,"children":[{"krate":0,"index":2089},{"krate":0,"index":2090}],"decl_id":null,"docs":" Struct holding the values for a JavaScript `WebSocketPair`\n","sig":null,"attributes":[{"value":"/ Struct holding the values for a JavaScript `WebSocketPair`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":123336,"byte_end":123398,"line_start":16,"line_end":16,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":2089},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":123473,"byte_end":123479,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"name":"client","qualname":"::websocket::WebSocketPair::client","value":"websocket::WebSocket","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2090},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":123500,"byte_end":123506,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"name":"server","qualname":"::websocket::WebSocketPair::server","value":"websocket::WebSocket","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":123593,"byte_end":123596,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<WebSocketPair>::new","value":"fn new() -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `WebSocketPair`.\n","sig":null,"attributes":[{"value":"/ Creates a new `WebSocketPair`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":123547,"byte_end":123581,"line_start":24,"line_end":24,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2102},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":123914,"byte_end":123923,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"WebSocket","qualname":"::websocket::WebSocket","value":"WebSocket {  }","parent":null,"children":[{"krate":0,"index":2103}],"decl_id":null,"docs":" Wrapper struct for underlying worker-sys `WebSocket`\n","sig":null,"attributes":[{"value":"/ Wrapper struct for underlying worker-sys `WebSocket`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":123807,"byte_end":123863,"line_start":33,"line_end":33,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124913,"byte_end":124920,"line_start":65,"line_end":65,"column_start":18,"column_end":25},"name":"connect","qualname":"<WebSocket>::connect","value":"async fn connect(Url) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to establish a [`WebSocket`] connection to the provided [`Url`].","sig":null,"attributes":[{"value":"/ Attempts to establish a [`WebSocket`] connection to the provided [`Url`].","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":123985,"byte_end":124062,"line_start":40,"line_end":40,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124067,"byte_end":124070,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124075,"byte_end":124089,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124094,"byte_end":124112,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/ let ws = WebSocket::connect(\"wss://echo.zeb.workers.dev/\".parse()?).await?;","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124117,"byte_end":124196,"line_start":44,"line_end":44,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124201,"byte_end":124204,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // It's important that we call this before we send our first message, otherwise we will","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124209,"byte_end":124300,"line_start":46,"line_end":46,"column_start":5,"column_end":96}},{"value":"/ // not have any event listeners on the socket to receive the echoed message.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124305,"byte_end":124385,"line_start":47,"line_end":47,"column_start":5,"column_end":85}},{"value":"/ let mut event_stream = ws.events()?;","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124390,"byte_end":124430,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124435,"byte_end":124438,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ws.accept()?;","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124443,"byte_end":124460,"line_start":50,"line_end":50,"column_start":5,"column_end":22}},{"value":"/ ws.send_with_str(\"Hello, world!\")?;","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124465,"byte_end":124504,"line_start":51,"line_end":51,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124509,"byte_end":124512,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ while let Some(event) = event_stream.next().await {","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124517,"byte_end":124572,"line_start":53,"line_end":53,"column_start":5,"column_end":60}},{"value":"/     let event = event?;","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124577,"byte_end":124604,"line_start":54,"line_end":54,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124609,"byte_end":124612,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/     if let WebsocketEvent::Message(msg) = event {","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124617,"byte_end":124670,"line_start":56,"line_end":56,"column_start":5,"column_end":58}},{"value":"/         if let Some(text) = msg.text() {","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124675,"byte_end":124719,"line_start":57,"line_end":57,"column_start":5,"column_end":49}},{"value":"/             return Response::ok(text);","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124724,"byte_end":124766,"line_start":58,"line_end":58,"column_start":5,"column_end":47}},{"value":"/         }","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124771,"byte_end":124784,"line_start":59,"line_end":59,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124789,"byte_end":124798,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124803,"byte_end":124808,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124813,"byte_end":124816,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Response::error(\"never got a message echoed back :(\", 500)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124821,"byte_end":124883,"line_start":63,"line_end":63,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":124888,"byte_end":124895,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":125788,"byte_end":125794,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"accept","qualname":"<WebSocket>::accept","value":"fn accept(&Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Accepts the connection, allowing for messages to be sent to and from the `WebSocket`.\n","sig":null,"attributes":[{"value":"/ Accepts the connection, allowing for messages to be sent to and from the `WebSocket`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":125687,"byte_end":125776,"line_start":87,"line_end":87,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":125971,"byte_end":125975,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"send","qualname":"<WebSocket>::send","value":"fn send<T>(&Self, &T) -> Result<()> where T: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize data into a string using serde and send it through the `WebSocket`\n","sig":null,"attributes":[{"value":"/ Serialize data into a string using serde and send it through the `WebSocket`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":125879,"byte_end":125959,"line_start":92,"line_end":92,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":126185,"byte_end":126198,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"send_with_str","qualname":"<WebSocket>::send_with_str","value":"fn send_with_str<S>(&Self, S) -> Result<()> where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Sends a raw string through the `WebSocket`\n","sig":null,"attributes":[{"value":"/ Sends a raw string through the `WebSocket`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":126127,"byte_end":126173,"line_start":98,"line_end":98,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":126415,"byte_end":126430,"line_start":106,"line_end":106,"column_start":12,"column_end":27},"name":"send_with_bytes","qualname":"<WebSocket>::send_with_bytes","value":"fn send_with_bytes<D>(&Self, D) -> Result<()> where D: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Sends raw binary data through the `WebSocket`.\n","sig":null,"attributes":[{"value":"/ Sends raw binary data through the `WebSocket`.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":126353,"byte_end":126403,"line_start":105,"line_end":105,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":127157,"byte_end":127162,"line_start":123,"line_end":123,"column_start":12,"column_end":17},"name":"close","qualname":"<WebSocket>::close","value":"fn close<S>(&Self, Option<u16>, Option<S>) -> Result<()> where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel.\n This method translates to three different underlying method calls based of the\n parameters passed.","sig":null,"attributes":[{"value":"/ Closes this channel.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":126703,"byte_end":126727,"line_start":113,"line_end":113,"column_start":5,"column_end":29}},{"value":"/ This method translates to three different underlying method calls based of the","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":126732,"byte_end":126814,"line_start":114,"line_end":114,"column_start":5,"column_end":87}},{"value":"/ parameters passed.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":126819,"byte_end":126841,"line_start":115,"line_end":115,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":126846,"byte_end":126849,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ If the following parameters are Some:","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":126854,"byte_end":126895,"line_start":117,"line_end":117,"column_start":5,"column_end":46}},{"value":"/ * `code` and `reason` -> `close_with_code_and_reason`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":126900,"byte_end":126957,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/ * `code`              -> `close_with_code`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":126962,"byte_end":127008,"line_start":119,"line_end":119,"column_start":5,"column_end":51}},{"value":"/ * `reason` or `none`  -> `close`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":127013,"byte_end":127049,"line_start":120,"line_end":120,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":127054,"byte_end":127057,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Effectively, if only `reason` is `Some`, the `reason` argument will be ignored.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":127062,"byte_end":127145,"line_start":122,"line_end":122,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":129181,"byte_end":129187,"line_start":176,"line_end":176,"column_start":12,"column_end":18},"name":"events","qualname":"<WebSocket>::events","value":"fn events(&Self) -> Result<EventStream>","parent":null,"children":[],"decl_id":null,"docs":" Gets an implementation [`Stream`](futures::Stream) that yields events from the inner\n WebSocket.\n","sig":null,"attributes":[{"value":"/ Gets an implementation [`Stream`](futures::Stream) that yields events from the inner","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":129062,"byte_end":129150,"line_start":174,"line_end":174,"column_start":5,"column_end":93}},{"value":"/ WebSocket.","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":129155,"byte_end":129169,"line_start":175,"line_end":175,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":2154},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":131367,"byte_end":131378,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"EventStream","qualname":"::websocket::EventStream","value":"EventStream {  }","parent":null,"children":[{"krate":0,"index":2156},{"krate":0,"index":2159},{"krate":0,"index":2157},{"krate":0,"index":2158}],"decl_id":null,"docs":" A [`Stream`](futures::Stream) that yields [`WebsocketEvent`](crate::ws_events::WebsocketEvent)s\n emitted by the inner [`WebSocket`](crate::WebSocket). The stream is guranteed to always yield a\n `WebsocketEvent::Close` as the final non-none item.","sig":null,"attributes":[{"value":"pin(__private(PinnedDrop))","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":131316,"byte_end":131355,"line_start":236,"line_end":236,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2139},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":131367,"byte_end":131378,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"__EventStream","qualname":"::websocket::_::__EventStream","value":"__EventStream {  }","parent":null,"children":[{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2144}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":131316,"byte_end":131355,"line_start":236,"line_end":236,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":131343,"byte_end":131353,"line_start":236,"line_end":236,"column_start":28,"column_end":38},"name":"drop","qualname":"<EventStream as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":131879,"byte_end":131888,"line_start":254,"line_end":254,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<EventStream as futures_util::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":58,"index":96},"children":[],"decl_id":{"krate":58,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":132730,"byte_end":132734,"line_start":279,"line_end":279,"column_start":8,"column_end":12},"name":"drop","qualname":"<EventStream as delay::_::_pin_project::__private::PinnedDrop>::drop","value":"unsafe fn drop(Pin<&mut Self>)","parent":{"krate":69,"index":41},"children":[],"decl_id":{"krate":69,"index":42},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":133604,"byte_end":133608,"line_start":300,"line_end":300,"column_start":8,"column_end":12},"name":"from","qualname":"<WebSocket as std::convert::From>::from","value":"fn from(worker_sys::WebSocket) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":133740,"byte_end":133746,"line_start":306,"line_end":306,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<WebSocket as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &worker_sys::WebSocket","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1556},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":133820,"byte_end":133829,"line_start":311,"line_end":311,"column_start":9,"column_end":18},"name":"ws_events","qualname":"::websocket::ws_events","value":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","parent":null,"children":[{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":2164},{"krate":0,"index":2171},{"krate":0,"index":2173},{"krate":0,"index":2175},{"krate":0,"index":2177},{"krate":0,"index":2179},{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2185},{"krate":0,"index":2186},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":2188},{"krate":0,"index":2190},{"krate":0,"index":2192},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":1576},{"krate":0,"index":1580},{"krate":0,"index":1582}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2165},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":134067,"byte_end":134074,"line_start":320,"line_end":320,"column_start":9,"column_end":16},"name":"Message","qualname":"::websocket::ws_events::WebsocketEvent::Message","value":"WebsocketEvent::Message(MessageEvent)","parent":{"krate":0,"index":2164},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2167},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":134075,"byte_end":134087,"line_start":320,"line_end":320,"column_start":17,"column_end":29},"name":"0","qualname":"::websocket::ws_events::WebsocketEvent::Message::0","value":"websocket::ws_events::MessageEvent","parent":{"krate":0,"index":2165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2168},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":134098,"byte_end":134103,"line_start":321,"line_end":321,"column_start":9,"column_end":14},"name":"Close","qualname":"::websocket::ws_events::WebsocketEvent::Close","value":"WebsocketEvent::Close(CloseEvent)","parent":{"krate":0,"index":2164},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2170},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":134104,"byte_end":134114,"line_start":321,"line_end":321,"column_start":15,"column_end":25},"name":"0","qualname":"::websocket::ws_events::WebsocketEvent::Close::0","value":"websocket::ws_events::CloseEvent","parent":{"krate":0,"index":2168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2164},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":134042,"byte_end":134056,"line_start":319,"line_end":319,"column_start":14,"column_end":28},"name":"WebsocketEvent","qualname":"::websocket::ws_events::WebsocketEvent","value":"enum WebsocketEvent { Message(MessageEvent), Close(CloseEvent), }","parent":null,"children":[{"krate":0,"index":2165},{"krate":0,"index":2168}],"decl_id":null,"docs":" Events that can be yielded by a [`EventStream`](crate::EventStream).\n","sig":null,"attributes":[{"value":"/ Events that can be yielded by a [`EventStream`](crate::EventStream).","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":133928,"byte_end":134000,"line_start":317,"line_end":317,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":2175},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":134245,"byte_end":134257,"line_start":326,"line_end":326,"column_start":16,"column_end":28},"name":"MessageEvent","qualname":"::websocket::ws_events::MessageEvent","value":"MessageEvent {  }","parent":null,"children":[{"krate":0,"index":2176}],"decl_id":null,"docs":" Wrapper/Utility struct for the `web_sys::MessageEvent`\n","sig":null,"attributes":[{"value":"/ Wrapper/Utility struct for the `web_sys::MessageEvent`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":134128,"byte_end":134186,"line_start":324,"line_end":324,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":134378,"byte_end":134382,"line_start":331,"line_end":331,"column_start":12,"column_end":16},"name":"from","qualname":"<MessageEvent as std::convert::From>::from","value":"fn from(worker_sys::MessageEvent) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":134541,"byte_end":134547,"line_start":337,"line_end":337,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<MessageEvent as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &worker_sys::MessageEvent","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":134795,"byte_end":134799,"line_start":348,"line_end":348,"column_start":16,"column_end":20},"name":"text","qualname":"<MessageEvent>::text","value":"fn text(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":134920,"byte_end":134925,"line_start":353,"line_end":353,"column_start":16,"column_end":21},"name":"bytes","qualname":"<MessageEvent>::bytes","value":"fn bytes(&Self) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":135171,"byte_end":135175,"line_start":362,"line_end":362,"column_start":16,"column_end":20},"name":"json","qualname":"<MessageEvent>::json","value":"fn json<T>(&Self) -> crate::Result<T> where T: DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2188},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":135604,"byte_end":135614,"line_start":374,"line_end":374,"column_start":16,"column_end":26},"name":"CloseEvent","qualname":"::websocket::ws_events::CloseEvent","value":"CloseEvent {  }","parent":null,"children":[{"krate":0,"index":2189}],"decl_id":null,"docs":" Wrapper/Utility struct for the `web_sys::CloseEvent`\n","sig":null,"attributes":[{"value":"/ Wrapper/Utility struct for the `web_sys::CloseEvent`","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":135489,"byte_end":135545,"line_start":372,"line_end":372,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":135700,"byte_end":135706,"line_start":379,"line_end":379,"column_start":16,"column_end":22},"name":"reason","qualname":"<CloseEvent>::reason","value":"fn reason(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":135784,"byte_end":135788,"line_start":383,"line_end":383,"column_start":16,"column_end":20},"name":"code","qualname":"<CloseEvent>::code","value":"fn code(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":135861,"byte_end":135870,"line_start":387,"line_end":387,"column_start":16,"column_end":25},"name":"was_clean","qualname":"<CloseEvent>::was_clean","value":"fn was_clean(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":136006,"byte_end":136010,"line_start":393,"line_end":393,"column_start":12,"column_end":16},"name":"from","qualname":"<CloseEvent as std::convert::From>::from","value":"fn from(worker_sys::CloseEvent) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1583},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":136163,"byte_end":136169,"line_start":399,"line_end":399,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<CloseEvent as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &worker_sys::CloseEvent","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1584},"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":1449,"byte_end":1455,"line_start":67,"line_end":67,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"StdResult<T, error::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":1805,"byte_end":1820,"line_start":13,"line_end":13,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":2401,"byte_end":2416,"line_start":31,"line_end":31,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":2735,"byte_end":2746,"line_start":46,"line_end":46,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":3495,"byte_end":3506,"line_start":69,"line_end":69,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":3601,"byte_end":3612,"line_start":75,"line_end":75,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":5739,"byte_end":5744,"line_start":43,"line_end":43,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":5935,"byte_end":5940,"line_start":53,"line_end":53,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":201},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11480,"byte_end":11488,"line_start":168,"line_end":168,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11594,"byte_end":11602,"line_start":174,"line_end":174,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11699,"byte_end":11707,"line_start":180,"line_end":180,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11821,"byte_end":11829,"line_start":186,"line_end":186,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":12631,"byte_end":12633,"line_start":12,"line_end":12,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":17889,"byte_end":17891,"line_start":161,"line_end":161,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":18099,"byte_end":18112,"line_start":173,"line_end":173,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":19277,"byte_end":19290,"line_start":223,"line_end":223,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":19634,"byte_end":19641,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":21201,"byte_end":21205,"line_start":15,"line_end":15,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":21465,"byte_end":21469,"line_start":28,"line_end":28,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":321},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25744,"byte_end":25748,"line_start":30,"line_end":30,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25827,"byte_end":25831,"line_start":36,"line_end":36,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":26531,"byte_end":26535,"line_start":62,"line_end":62,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":26667,"byte_end":26671,"line_start":68,"line_end":68,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":26970,"byte_end":26974,"line_start":80,"line_end":80,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/delay.rs","byte_start":27644,"byte_end":27649,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/delay.rs","byte_start":27792,"byte_end":27797,"line_start":35,"line_end":35,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/delay.rs","byte_start":28793,"byte_end":28798,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/delay.rs","byte_start":29293,"byte_end":29298,"line_start":81,"line_end":81,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":31079,"byte_end":31083,"line_start":43,"line_end":43,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":32101,"byte_end":32116,"line_start":66,"line_end":66,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":35121,"byte_end":35129,"line_start":139,"line_end":139,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":35586,"byte_end":35594,"line_start":153,"line_end":153,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":35863,"byte_end":35868,"line_start":165,"line_end":165,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":36695,"byte_end":36700,"line_start":189,"line_end":189,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":37065,"byte_end":37072,"line_start":202,"line_end":202,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":516},{"krate":0,"index":521},{"krate":0,"index":526},{"krate":0,"index":531},{"krate":0,"index":536},{"krate":0,"index":544},{"krate":0,"index":548},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":42753,"byte_end":42764,"line_start":342,"line_end":342,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":566},{"krate":0,"index":571},{"krate":0,"index":576},{"krate":0,"index":581},{"krate":0,"index":586},{"krate":0,"index":594},{"krate":0,"index":598},{"krate":0,"index":602},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":46970,"byte_end":46981,"line_start":460,"line_end":460,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":48027,"byte_end":48042,"line_start":498,"line_end":498,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":48126,"byte_end":48141,"line_start":502,"line_end":502,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":48492,"byte_end":48499,"line_start":516,"line_end":516,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":48610,"byte_end":48625,"line_start":522,"line_end":522,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":50101,"byte_end":50104,"line_start":15,"line_end":15,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52084,"byte_end":52097,"line_start":66,"line_end":66,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52165,"byte_end":52178,"line_start":70,"line_end":70,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52486,"byte_end":52499,"line_start":84,"line_end":84,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52632,"byte_end":52645,"line_start":90,"line_end":90,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52749,"byte_end":52756,"line_start":96,"line_end":96,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52842,"byte_end":52855,"line_start":102,"line_end":102,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53631,"byte_end":53636,"line_start":19,"line_end":19,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53780,"byte_end":53785,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53905,"byte_end":53910,"line_start":32,"line_end":32,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":54803,"byte_end":54808,"line_start":50,"line_end":50,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":54836,"byte_end":54841,"line_start":52,"line_end":52,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":55133,"byte_end":55140,"line_start":64,"line_end":64,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":55246,"byte_end":55251,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":55356,"byte_end":55361,"line_start":76,"line_end":76,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":55470,"byte_end":55475,"line_start":82,"line_end":82,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":55602,"byte_end":55607,"line_start":88,"line_end":88,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":56369,"byte_end":56377,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":58590,"byte_end":58598,"line_start":98,"line_end":98,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":58734,"byte_end":58742,"line_start":104,"line_end":104,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":59191,"byte_end":59195,"line_start":119,"line_end":119,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":60718,"byte_end":60722,"line_start":168,"line_end":168,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/global.rs","byte_start":61276,"byte_end":61281,"line_start":19,"line_end":19,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":63336,"byte_end":63343,"line_start":18,"line_end":18,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":63601,"byte_end":63608,"line_start":28,"line_end":28,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":66899,"byte_end":66906,"line_start":102,"line_end":102,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":67457,"byte_end":67464,"line_start":122,"line_end":122,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":67783,"byte_end":67790,"line_start":132,"line_end":132,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":68084,"byte_end":68091,"line_start":142,"line_end":142,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":68180,"byte_end":68187,"line_start":148,"line_end":148,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":68512,"byte_end":68519,"line_start":160,"line_end":160,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":68615,"byte_end":68624,"line_start":166,"line_end":166,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":68968,"byte_end":68977,"line_start":180,"line_end":180,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":69070,"byte_end":69077,"line_start":186,"line_end":186,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":69537,"byte_end":69543,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":69877,"byte_end":69883,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":70344,"byte_end":70350,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":70450,"byte_end":70456,"line_start":54,"line_end":54,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":70896,"byte_end":70902,"line_start":70,"line_end":70,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":70998,"byte_end":71004,"line_start":76,"line_end":76,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":71806,"byte_end":71813,"line_start":27,"line_end":27,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":72447,"byte_end":72458,"line_start":49,"line_end":49,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":72618,"byte_end":72629,"line_start":56,"line_end":56,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1009},{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":72768,"byte_end":72775,"line_start":63,"line_end":63,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1016},{"krate":0,"index":1020},{"krate":0,"index":1027},{"krate":0,"index":1033},{"krate":0,"index":1039},{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1055},{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":79346,"byte_end":79349,"line_start":261,"line_end":261,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":79604,"byte_end":79613,"line_start":275,"line_end":275,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":81235,"byte_end":81246,"line_start":26,"line_end":26,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":81957,"byte_end":81968,"line_start":57,"line_end":57,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":82661,"byte_end":82672,"line_start":81,"line_end":81,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":86679,"byte_end":86686,"line_start":145,"line_end":145,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":89565,"byte_end":89577,"line_start":249,"line_end":249,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":89660,"byte_end":89672,"line_start":255,"line_end":255,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":90589,"byte_end":90601,"line_start":292,"line_end":292,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":91030,"byte_end":91045,"line_start":316,"line_end":316,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":91435,"byte_end":91450,"line_start":332,"line_end":332,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":92653,"byte_end":92661,"line_start":35,"line_end":35,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1209},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1223},{"krate":0,"index":1227},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":103527,"byte_end":103543,"line_start":342,"line_end":342,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":103889,"byte_end":103901,"line_start":354,"line_end":354,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1248}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":105263,"byte_end":105275,"line_start":396,"line_end":396,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":106697,"byte_end":106705,"line_start":438,"line_end":438,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":107764,"byte_end":107775,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":107962,"byte_end":107969,"line_start":35,"line_end":35,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":108653,"byte_end":108665,"line_start":59,"line_end":59,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":110168,"byte_end":110174,"line_start":99,"line_end":99,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":110408,"byte_end":110414,"line_start":107,"line_end":107,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1363},{"krate":0,"index":1366},{"krate":0,"index":1369},{"krate":0,"index":1372},{"krate":0,"index":1375},{"krate":0,"index":1378},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1387},{"krate":0,"index":1391},{"krate":0,"index":1393}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":120056,"byte_end":120062,"line_start":371,"line_end":371,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":120321,"byte_end":120332,"line_start":383,"line_end":383,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":121035,"byte_end":121049,"line_start":14,"line_end":14,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1421}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":121276,"byte_end":121290,"line_start":24,"line_end":24,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":121687,"byte_end":121702,"line_start":46,"line_end":46,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":121790,"byte_end":121805,"line_start":52,"line_end":52,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/streams.rs","byte_start":122380,"byte_end":122390,"line_start":20,"line_end":20,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":123527,"byte_end":123540,"line_start":23,"line_end":23,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":123969,"byte_end":123978,"line_start":39,"line_end":39,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1525},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1531},{"krate":0,"index":1533},{"krate":0,"index":1535},{"krate":0,"index":1537},{"krate":0,"index":1540},{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":131367,"byte_end":131378,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2153}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":131812,"byte_end":131823,"line_start":251,"line_end":251,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1550},{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":132705,"byte_end":132716,"line_start":278,"line_end":278,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":133585,"byte_end":133594,"line_start":299,"line_end":299,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":133721,"byte_end":133730,"line_start":305,"line_end":305,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":134352,"byte_end":134364,"line_start":330,"line_end":330,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":134515,"byte_end":134527,"line_start":336,"line_end":336,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":134636,"byte_end":134648,"line_start":342,"line_end":342,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":135672,"byte_end":135682,"line_start":378,"line_end":378,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":135982,"byte_end":135992,"line_start":392,"line_end":392,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":136139,"byte_end":136149,"line_start":398,"line_end":398,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/lib.rs","byte_start":1262,"byte_end":1269,"line_start":52,"line_end":52,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":396}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":1805,"byte_end":1820,"line_start":13,"line_end":13,"column_start":6,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":2401,"byte_end":2416,"line_start":31,"line_end":31,"column_start":18,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1586},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":2735,"byte_end":2746,"line_start":46,"line_end":46,"column_start":6,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":3495,"byte_end":3506,"line_start":69,"line_end":69,"column_start":31,"column_end":42},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1590},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/abort.rs","byte_start":3601,"byte_end":3612,"line_start":75,"line_end":75,"column_start":16,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1590},"to":{"krate":2,"index":3369}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":5739,"byte_end":5744,"line_start":43,"line_end":43,"column_start":18,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1594},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":5935,"byte_end":5940,"line_start":53,"line_end":53,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11480,"byte_end":11488,"line_start":168,"line_end":168,"column_start":21,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11594,"byte_end":11602,"line_start":174,"line_end":174,"column_start":23,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11699,"byte_end":11707,"line_start":180,"line_end":180,"column_start":24,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cache.rs","byte_start":11821,"byte_end":11829,"line_start":186,"line_end":186,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":12631,"byte_end":12633,"line_start":12,"line_end":12,"column_start":6,"column_end":8},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":17889,"byte_end":17891,"line_start":161,"line_end":161,"column_start":22,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1617},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":18099,"byte_end":18112,"line_start":173,"line_end":173,"column_start":6,"column_end":19},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cf.rs","byte_start":19277,"byte_end":19290,"line_start":223,"line_end":223,"column_start":33,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1631},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/context.rs","byte_start":19634,"byte_end":19641,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":21201,"byte_end":21205,"line_start":15,"line_end":15,"column_start":18,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1639},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/cors.rs","byte_start":21465,"byte_end":21469,"line_start":28,"line_end":28,"column_start":6,"column_end":10},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25744,"byte_end":25748,"line_start":30,"line_end":30,"column_start":25,"column_end":29},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1650},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":25827,"byte_end":25831,"line_start":36,"line_end":36,"column_start":6,"column_end":10},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":26531,"byte_end":26535,"line_start":62,"line_end":62,"column_start":19,"column_end":23},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1650},"to":{"krate":5,"index":6071}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":26667,"byte_end":26671,"line_start":68,"line_end":68,"column_start":45,"column_end":49},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1650},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/date.rs","byte_start":26970,"byte_end":26974,"line_start":80,"line_end":80,"column_start":49,"column_end":53},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1650},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/delay.rs","byte_start":27644,"byte_end":27649,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1699},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/delay.rs","byte_start":27792,"byte_end":27797,"line_start":35,"line_end":35,"column_start":17,"column_end":22},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1699},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/delay.rs","byte_start":28793,"byte_end":28798,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1699},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/delay.rs","byte_start":29293,"byte_end":29298,"line_start":81,"line_end":81,"column_start":21,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1699},"to":{"krate":69,"index":41}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":31079,"byte_end":31083,"line_start":43,"line_end":43,"column_start":6,"column_end":10},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":32101,"byte_end":32116,"line_start":66,"line_end":66,"column_start":6,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":35121,"byte_end":35129,"line_start":139,"line_end":139,"column_start":6,"column_end":14},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":35586,"byte_end":35594,"line_start":153,"line_end":153,"column_start":19,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":488},"to":{"krate":5,"index":6071}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":35863,"byte_end":35868,"line_start":165,"line_end":165,"column_start":6,"column_end":11},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":36695,"byte_end":36700,"line_start":189,"line_end":189,"column_start":28,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":498},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":37065,"byte_end":37072,"line_start":202,"line_end":202,"column_start":6,"column_end":13},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":42753,"byte_end":42764,"line_start":342,"line_end":342,"column_start":6,"column_end":17},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":46970,"byte_end":46981,"line_start":460,"line_end":460,"column_start":10,"column_end":21},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":48027,"byte_end":48042,"line_start":498,"line_end":498,"column_start":21,"column_end":36},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":477},"to":{"krate":0,"index":657}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":48126,"byte_end":48141,"line_start":502,"line_end":502,"column_start":17,"column_end":32},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":477},"to":{"krate":22,"index":471}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":48492,"byte_end":48499,"line_start":516,"line_end":516,"column_start":32,"column_end":39},"kind":{"Impl":{"id":44}},"from":{"krate":22,"index":496},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/durable.rs","byte_start":48610,"byte_end":48625,"line_start":522,"line_end":522,"column_start":25,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":477},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":50101,"byte_end":50104,"line_start":15,"line_end":15,"column_start":6,"column_end":9},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":51675,"byte_end":51680,"line_start":51,"line_end":51,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":3155},"to":{"krate":0,"index":657}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":51683,"byte_end":51689,"line_start":51,"line_end":51,"column_start":31,"column_end":37},"kind":"SuperTrait","from":{"krate":22,"index":471},"to":{"krate":0,"index":657}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52084,"byte_end":52097,"line_start":66,"line_end":66,"column_start":21,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":660},"to":{"krate":0,"index":657}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52165,"byte_end":52178,"line_start":70,"line_end":70,"column_start":17,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":660},"to":{"krate":22,"index":471}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52486,"byte_end":52499,"line_start":84,"line_end":84,"column_start":25,"column_end":38},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52632,"byte_end":52645,"line_start":90,"line_end":90,"column_start":24,"column_end":37},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52749,"byte_end":52756,"line_start":96,"line_end":96,"column_start":30,"column_end":37},"kind":{"Impl":{"id":63}},"from":{"krate":22,"index":496},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/env.rs","byte_start":52842,"byte_end":52855,"line_start":102,"line_end":102,"column_start":19,"column_end":32},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":660},"to":{"krate":5,"index":6071}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53631,"byte_end":53636,"line_start":19,"line_end":19,"column_start":35,"column_end":40},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53780,"byte_end":53785,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":53905,"byte_end":53910,"line_start":32,"line_end":32,"column_start":28,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":54803,"byte_end":54808,"line_start":50,"line_end":50,"column_start":28,"column_end":33},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1806},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":54836,"byte_end":54841,"line_start":52,"line_end":52,"column_start":24,"column_end":29},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":55133,"byte_end":55140,"line_start":64,"line_end":64,"column_start":22,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":22,"index":496},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":55246,"byte_end":55251,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":55356,"byte_end":55361,"line_start":76,"line_end":76,"column_start":23,"column_end":28},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":55470,"byte_end":55475,"line_start":82,"line_end":82,"column_start":37,"column_end":42},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/error.rs","byte_start":55602,"byte_end":55607,"line_start":88,"line_end":88,"column_start":34,"column_end":39},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":56369,"byte_end":56377,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":58590,"byte_end":58598,"line_start":98,"line_end":98,"column_start":24,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1836},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":58734,"byte_end":58742,"line_start":104,"line_end":104,"column_start":60,"column_end":68},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1836},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":59191,"byte_end":59195,"line_start":119,"line_end":119,"column_start":6,"column_end":10},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/formdata.rs","byte_start":60718,"byte_end":60722,"line_start":168,"line_end":168,"column_start":25,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":764},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/global.rs","byte_start":61276,"byte_end":61281,"line_start":19,"line_end":19,"column_start":6,"column_end":11},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":63336,"byte_end":63343,"line_start":18,"line_end":18,"column_start":26,"column_end":33},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":878},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":63601,"byte_end":63608,"line_start":28,"line_end":28,"column_start":6,"column_end":13},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":66899,"byte_end":66906,"line_start":102,"line_end":102,"column_start":18,"column_end":25},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":878},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":67457,"byte_end":67464,"line_start":122,"line_end":122,"column_start":46,"column_end":53},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":878},"to":{"krate":2,"index":7987}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":67783,"byte_end":67790,"line_start":132,"line_end":132,"column_start":54,"column_end":61},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":878},"to":{"krate":2,"index":7987}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":68084,"byte_end":68091,"line_start":142,"line_end":142,"column_start":25,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":878},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":68180,"byte_end":68187,"line_start":148,"line_end":148,"column_start":27,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":878},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":68512,"byte_end":68519,"line_start":160,"line_end":160,"column_start":26,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":878},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":68615,"byte_end":68624,"line_start":166,"line_end":166,"column_start":25,"column_end":34},"kind":{"Impl":{"id":89}},"from":{"krate":54,"index":2392},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":68968,"byte_end":68977,"line_start":180,"line_end":180,"column_start":24,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":54,"index":2392},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/headers.rs","byte_start":69070,"byte_end":69077,"line_start":186,"line_end":186,"column_start":16,"column_end":23},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":878},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":69537,"byte_end":69543,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":69877,"byte_end":69883,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1841},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":70344,"byte_end":70350,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":5,"index":8050},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":70450,"byte_end":70456,"line_start":54,"line_end":54,"column_start":21,"column_end":27},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1841},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":70896,"byte_end":70902,"line_start":70,"line_end":70,"column_start":19,"column_end":25},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1841},"to":{"krate":5,"index":6071}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/http.rs","byte_start":70998,"byte_end":71004,"line_start":76,"line_end":76,"column_start":18,"column_end":24},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1841},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":71806,"byte_end":71813,"line_start":27,"line_end":27,"column_start":28,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1874},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":72447,"byte_end":72458,"line_start":49,"line_end":49,"column_start":27,"column_end":38},"kind":{"Impl":{"id":99}},"from":{"krate":44,"index":2451},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":72618,"byte_end":72629,"line_start":56,"line_end":56,"column_start":28,"column_end":39},"kind":{"Impl":{"id":100}},"from":{"krate":44,"index":2451},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":72768,"byte_end":72775,"line_start":63,"line_end":63,"column_start":6,"column_end":13},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":79346,"byte_end":79349,"line_start":261,"line_end":261,"column_start":17,"column_end":20},"kind":{"Impl":{"id":102}},"from":{"krate":30,"index":1061},"to":{"krate":0,"index":1058}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request.rs","byte_start":79604,"byte_end":79613,"line_start":275,"line_end":275,"column_start":23,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1066},"to":{"krate":2,"index":8186}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":81235,"byte_end":81246,"line_start":26,"line_end":26,"column_start":6,"column_end":17},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":81957,"byte_end":81968,"line_start":57,"line_end":57,"column_start":41,"column_end":52},"kind":{"Impl":{"id":105}},"from":{"krate":44,"index":2548},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":82661,"byte_end":82672,"line_start":81,"line_end":81,"column_start":18,"column_end":29},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1097},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":86679,"byte_end":86686,"line_start":145,"line_end":145,"column_start":30,"column_end":37},"kind":{"Impl":{"id":107}},"from":{"krate":22,"index":496},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":89565,"byte_end":89577,"line_start":249,"line_end":249,"column_start":6,"column_end":18},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":89660,"byte_end":89672,"line_start":255,"line_end":255,"column_start":18,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1114},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":90589,"byte_end":90601,"line_start":292,"line_end":292,"column_start":18,"column_end":30},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1991},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":91030,"byte_end":91045,"line_start":316,"line_end":316,"column_start":18,"column_end":33},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2014},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/request_init.rs","byte_start":91435,"byte_end":91450,"line_start":332,"line_end":332,"column_start":44,"column_end":59},"kind":{"Impl":{"id":129}},"from":{"krate":44,"index":2580},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":92653,"byte_end":92661,"line_start":35,"line_end":35,"column_start":6,"column_end":14},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":103527,"byte_end":103543,"line_start":342,"line_end":342,"column_start":29,"column_end":45},"kind":{"Impl":{"id":131}},"from":{"krate":44,"index":2865},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":103889,"byte_end":103901,"line_start":354,"line_end":354,"column_start":25,"column_end":37},"kind":{"Impl":{"id":132}},"from":{"krate":44,"index":2768},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":105263,"byte_end":105275,"line_start":396,"line_end":396,"column_start":26,"column_end":38},"kind":{"Impl":{"id":133}},"from":{"krate":44,"index":2768},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/response.rs","byte_start":106697,"byte_end":106705,"line_start":438,"line_end":438,"column_start":29,"column_end":37},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2037},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":107764,"byte_end":107775,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":107962,"byte_end":107969,"line_start":35,"line_end":35,"column_start":19,"column_end":26},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1314},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":108653,"byte_end":108665,"line_start":59,"line_end":59,"column_start":9,"column_end":21},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":110168,"byte_end":110174,"line_start":99,"line_end":99,"column_start":10,"column_end":16},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":110408,"byte_end":110414,"line_start":107,"line_end":107,"column_start":17,"column_end":23},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":120056,"byte_end":120062,"line_start":371,"line_end":371,"column_start":17,"column_end":23},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/router.rs","byte_start":120321,"byte_end":120332,"line_start":383,"line_end":383,"column_start":40,"column_end":51},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":121035,"byte_end":121049,"line_start":14,"line_end":14,"column_start":35,"column_end":49},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2044},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":121276,"byte_end":121290,"line_start":24,"line_end":24,"column_start":6,"column_end":20},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":121687,"byte_end":121702,"line_start":46,"line_end":46,"column_start":36,"column_end":51},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2052},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/schedule.rs","byte_start":121790,"byte_end":121805,"line_start":52,"line_end":52,"column_start":6,"column_end":21},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/streams.rs","byte_start":122380,"byte_end":122390,"line_start":20,"line_end":20,"column_start":17,"column_end":27},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2086},"to":{"krate":58,"index":96}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":123527,"byte_end":123540,"line_start":23,"line_end":23,"column_start":6,"column_end":19},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":123969,"byte_end":123978,"line_start":39,"line_end":39,"column_start":6,"column_end":15},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":131367,"byte_end":131378,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2154},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":131812,"byte_end":131823,"line_start":251,"line_end":251,"column_start":22,"column_end":33},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2154},"to":{"krate":58,"index":96}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":132705,"byte_end":132716,"line_start":278,"line_end":278,"column_start":21,"column_end":32},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2154},"to":{"krate":69,"index":41}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":133585,"byte_end":133594,"line_start":299,"line_end":299,"column_start":38,"column_end":47},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2102},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":133721,"byte_end":133730,"line_start":305,"line_end":305,"column_start":39,"column_end":48},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2102},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":134352,"byte_end":134364,"line_start":330,"line_end":330,"column_start":45,"column_end":57},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2175},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":134515,"byte_end":134527,"line_start":336,"line_end":336,"column_start":46,"column_end":58},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2175},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":134636,"byte_end":134648,"line_start":342,"line_end":342,"column_start":10,"column_end":22},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":135672,"byte_end":135682,"line_start":378,"line_end":378,"column_start":10,"column_end":20},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":135982,"byte_end":135992,"line_start":392,"line_end":392,"column_start":43,"column_end":53},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2188},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/nicholascarducci/.cargo/registry/src/github.com-1ecc6299db9ec823/worker-0.0.10/src/websocket.rs","byte_start":136139,"byte_end":136149,"line_start":398,"line_end":398,"column_start":44,"column_end":54},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2188},"to":{"krate":2,"index":3047}}]}